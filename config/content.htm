<h1>About</h1>
<p>倉儲: <a href="https://github.com/mdecycu/cd2025">https://github.com/mdecycu/cd2025</a></p>
<p>網頁: <a href="https://mde.tw/cd2025">https://mde.tw/cd2025</a></p>
<p>課程目標:</p>
<p style="padding-left: 30px;">透過機電系統模擬與控制了解協同產品設計的特性與應用</p>
<p>教學內容:</p>
<p style="padding-left: 30px;">協同產品設計概論</p>
<p style="padding-left: 30px;">機電系統模擬</p>
<p style="padding-left: 30px;">協同分組專案</p>
<p style="padding-left: 30px;">協同分組報告</p>
<p>USB 隨身碟:</p>
<p style="padding-left: 30px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 30px;"><span>備註: </span><span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<p><span>學員作業網站樣板: <a href="https://mde.tw/cd2025_hw">https://mde.tw/cd2025_hw</a> </span></p>
<p><span>學員作業範例: <a href="https://mdecd2025.github.io/hw-scrum-1">https://mdecd2025.github.io/hw-scrum-1</a> <br/></span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 60px;">HW1 (5%): 建立由 Box 組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 60px;">HW2 (5%): 建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 60px;">HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 60px;">Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 60px;">Exam2 (10%: 利用 CAD 零組件建立模擬場景</p>
<p style="padding-left: 60px;">Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p style="padding-left: 60px;">題目: Webots 動態投籃模擬系統的協同設計</p>
<p></p>
<hr/>
<p>行事曆</p>
<p>2a 上課時段: 每週五下午 13:20 - 17:10 (w2(228)、w7(春假)、w15(端午) 放假)</p>
<p>2b 上課時段: 每週二上午 08:10 - 12:00</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei"> 全頁檢視 </a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Summary</h2>
<p><object data="/images/cd2025.svg" height="1395" type="image/svg+xml" width="1534"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Fcd2025.smm">Edit cd2025.smm</a></p>
<h2>Product</h2>
<p>Product Development Process (產品開發過程)</p>
<p><img alt="" height="443" src="/images/product_development_process.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Fig. 1.2</a>)</p>
<p>Complex Product Assembly Process (複雜產品組立過程)</p>
<p><img alt="" height="236" src="/images/complex_product_assembly_process.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Fig. 1.4</a>)</p>
<p>Collaboration between Lifecycle Activities (生命週期活動間的協同)</p>
<p><img alt="" height="333" src="/images/collaboration_between_lifecycle_activities.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Table 2.1</a>)</p>
<p></p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-58898-3">Geometric Constraint Solving and Application</a> (1998) (<a href="http://229.cycu.org/1998_geometric_constraint_solving_and_applications.pdf">local download</a>)</p>
<p style="padding-left: 60px;">The Semantics of Geometric Constraints</p>
<p style="padding-left: 60px;">Constraints for Conceptual and Collaborative Design</p>
<p style="padding-left: 60px;">Constraint Representation and Solving Methods</p>
<p style="padding-left: 60px;">Constraints for Freeform Surfaces</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-60718-9">CAD Systems Development</a> (1997) (<a href="http://229.cycu.org/1997_cad_system_development.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6415-7">Core Blender Development</a> (2021) (<a href="http://229.cycu.org/2021_core_blender_development.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Collaborative Knowledge Management Through Product Lifecycle</a> (2023) (<a href="http://229.cycu.org/2023_collaborative_knowledge_management_through_product_lifecycle.pdf">local download</a>)</p>
<h2>Control</h2>
<p>以下為網際虛擬控制相關參考資料:</p>
<p><a href="https://wokwi.com/">https://wokwi.com/</a></p>
<p><a href="https://docs.wokwi.com/">https://docs.wokwi.com/</a> </p>
<p><a href="https://wokwi.com/projects/375237011181407233">Wokwi, Arduino and Push Button</a></p>
<p><a href="https://wokwi.com/projects/298685457758159369">Wokwi, Arduino and Potentiometer</a></p>
<p><a href="https://wokwi.com/projects/394764949595110401">Wokwi, Arduino, Serial and Python</a></p>
<hr/>
<p><a href="https://wokwi.com/projects/320964045035274834">ESP32 Web server</a></p>
<p><a href="https://github.com/wokwi/wokwigw/releases">https://github.com/wokwi/wokwigw/releases</a> </p>
<p style="padding-left: 30px;"><a href="https://docs.wokwi.com/guides/esp32-wifi#the-private-gateway">https://docs.wokwi.com/guides/esp32-wifi#the-private-gateway</a> </p>
<p><a href="https://lcgamboa.github.io/picsimlab_docs/stable/OnlineSimulator.html">https://lcgamboa.github.io/picsimlab_docs/stable/OnlineSimulator.html</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a> </p>
<p><a href="https://link.springer.com/chapter/10.1007/978-3-030-82544-7_24">HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics</a> (2021)</p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/horosim">https://github.com/scrum-1/horosim</a></p>
<h2>CPS</h2>
<p>以下為虛實整合系統 (Cyber-Physical System) 相關參考資料:</p>
<p>Webots:</p>
<p style="padding-left: 30px;"><a href="https://www.cyberbotics.com">https://www.cyberbotics.com</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/cyberbotics/webots/discussions/2621">https://github.com/cyberbotics/webots/discussions/2621</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/aidudezzz/deepbots">https://github.com/aidudezzz/deepbots</a> (<a href="https://deepbots.readthedocs.io">https://deepbots.readthedocs.io</a>)</p>
<p style="padding-left: 30px;"><a href="https://cad2.cycu.org/~yen/cad2023/content/PICSimLab.html">https://cad2.cycu.org/~yen/cad2023/content/PICSimLab.html</a></p>
<h4>Pinball</h4>
<p style="padding-left: 30px;"><a href="/downloads/pinball.7z">pinball.7z</a></p>
<p style="padding-left: 30px;"><a href="https://pinball.flutter.dev">https://pinball.flutter.dev</a> (<a href="https://github.com/flutter/pinball">https://github.com/flutter/pinball</a>, <a href="https://flutter.dev">https://flutter.dev</a>)</p>
<h4>Foosball</h4>
<p style="padding-left: 30px;"><a href="/downloads/cad2024_foosball_with_ball_python_script.7z">cad2024_foosball_with_ball_python_script.7z</a></p>
<p style="padding-left: 30px;"><a href="/downloads/cad2024_foosball.7z">cad2024_foosball.7z</a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/html/2404.05357v2">CNN-based Game State Detection for a Foosball Table</a></p>
<h4>HoRoSim (使用 CoppeliaSim, 是否能夠轉進 Webots)</h4>
<p style="padding-left: 30px;"><a href="https://pure.itu.dk/ws/portalfiles/portal/86211605/2021RIE_HoRoSim_camera_ready.pdf">HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics</a></p>
<p style="padding-left: 30px;"><a href="https://bitbucket.org/afaina/horosim/src/master/">https://bitbucket.org/afaina/horosim/src/master/</a></p>
<h2>AI</h2>
<p>以下為利用 AI 解題的相關參考資料:</p>
<p>利用 Gmail 帳號在 <a href="https://x.com/">https://x.com/</a> 註冊帳號後, 登入後直接點選左側的 Grok 進行對話.</p>
<p>另外可在個人手機或平板上安裝 X 與 Grok 3 App, 利用  X 帳號登入Grok 3 進行輔助學習.</p>
<p>使用範例:</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 1</span>: 請用繁體中文詳細說明 <a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots</a> 中的操作方法與重點</p>
<p style="padding-left: 30px;">隨後的對話可以直接輸入:</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 2</span>: <a href="https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python">https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python</a></p>
<p style="padding-left: 30px;">要求 AI 列出操作方法與重點.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 3</span>: 請幫我整理出這兩個 Tutorial 中所牽涉的英文單字與相關用法說明</p>
<p style="padding-left: 30px;">儘管 AI 對話過程可以快速協助列出相關 Tutorial 內容的重點與操作方法, 一旦完成操作後, 應該要再針對原文中的英文專有名詞或敘述句的用法進行研讀, 最終目的是<span style="background-color: #ffff99;">能夠在 AI 的協助下培養原文內容的快速閱讀與理解能力</span>.</p>
<p>除了 Grok 3, 也可透過 <a href="https://claude.ai">https://claude.ai</a>、<a href="https://chatgpt.com/g/g-QpmQGPwkp-fan-ti-zhong-wen-gpt">GPT</a> 或 <a href="https://gemini.google.com/app?hl=zh-TW">Gemini</a> 等系統進行輔助學習.</p>
<hr/>
<p>如何因應 AI 時代的挑戰：</p>
<p>培養難以被AI取代的核心能力：</p>
<ol>
<li><span style="background-color: #ffff99;">創意思考與問題解決能力</span></li>
<li><span style="background-color: #ffff99;">跨領域整合的思維</span></li>
<li>同理心與情感智商</li>
<li><span style="background-color: #ffff99;">團隊合作與領導才能</span></li>
<li>批判性思考與決策能力</li>
</ol>
<p>選擇未來導向的專業領域：</p>
<ol>
<li>AI 與機器學習相關技術</li>
<li>數據分析與應用</li>
<li><span style="background-color: #ffff99;">人機互動設計</span></li>
<li><span style="background-color: #ffff99;">數位內容創作</span></li>
<li>永續發展與環保科技</li>
<li>心理諮商與生命教育</li>
<li>創意產業與體驗設計</li>
</ol>
<p>建立終身學習習慣：</p>
<ol>
<li>持續關注產業發展趨勢</li>
<li>善用線上學習平台</li>
<li><span style="background-color: #ffff99;">培養自主學習能力</span></li>
<li>建立知識更新機制</li>
<li>參與專業社群交流</li>
</ol>
<p>發展多元技能組合：</p>
<ol>
<li>不要侷限在單一專業</li>
<li>培養第二專長</li>
<li><span style="background-color: #ffff99;">跨領域知識整合</span></li>
<li>軟實力與硬實力並重</li>
<li>培養數位工具運用能力</li>
</ol>
<p>保持開放與彈性思維：</p>
<ol>
<li><span style="background-color: #ffff99;">擁抱新技術與改變</span></li>
<li>適應力與抗壓性</li>
<li><span style="background-color: #ffff99;">勇於嘗試新事物</span></li>
<li>正向面對挑戰</li>
<li>培養創業家精神</li>
</ol>
<h1>Topics</h1>
<p><a href="https://classroom.github.com">Github Classroom</a>: hw 為學員個人的作業倉儲, 2a 與 2b 則為各班的分組協同倉儲</p>
<p><img alt="" height="201" src="/images/cd2025_classroom_hw_and_project.png" width="400"/></p>
<p>cd2025 協同產品設計實習包括下列 4 個主題:</p>
<h4>Topic1: 可攜環境與 Github</h4>
<p>主題 1 採用可攜環境可以讓參與協同的每一位成員使用相同版本的工具套件, 包括 Git, Python, Putty, VSCode, Sharex, wscite 以及 Wink.</p>
<p>Github 則用來儲存個別學員與協同分組的產品設計內容, 因為倉儲中帶有內容管理系統, 每一位學員在進行各項階段性設計工程時, 都可以記錄詳細歷程, 也能利用個人及分組網頁展示內容, 其目的除了讓其他學員可以了解各階段提交的進度外, 也能透過互助合作的模式解決所面臨的問題.</p>
<h4>Topic2: 零組件繪圖</h4>
<p>主題 2 的零組件繪圖主要使用 Solvespace 與 Onshape , Solvespace 容量不到 10 MB 的參數式繪圖工具可減輕各學員配置或安裝大型的商業套件的負擔, 一旦各分組完成可以運作的產品系統模擬原始場景之後, 若需要讓最終的模擬場景更接近實體產品, 則可 Onshape 全雲端套件進行產品外型的零組件繪圖.</p>
<h4>Topic3: 建立模擬場景</h4>
<p>主題 3 採用的機電模擬場景工具為 Webots R2025a, 相較於 CoppeliaSim, Webots 採用 Apache 使用授權, 不限於在學校環境中使用. 結合 <a href="https://github.com/aidudezzz/deepbots">Deepbots</a> 可用於機電系統的強化學習 (Reinforce Learning).</p>
<p><a href="/downloads/https_server_py.7z">https_server_py.7z</a> (利用 Python 伺服同目錄的 index.html)</p>
<h4>Topic4: 協同設計</h4>
<p>主題 4 為協同設計, 各組員可採同步或非同步模式或建立不同操除分支提交改版紀錄, 也可利用 Odoo PLM 模組建立產品開發生命週期間各階段組員的互動紀錄.</p>
<h2>Wink</h2>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 假如檔案小於 5mb, 將 mp4 檔案放入 downloads 目錄後取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video width="1008" height="630" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="your_video_unique_name" muted="true"&gt;
&lt;source src="/downloads/your_video.mp4" type="video/mp4" /&gt;&lt;/video&gt;&lt;/div&gt;</pre>
<div>自行建立可攜 Python 的過程畫面:</div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_python1" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_python1.mp4" type="video/mp4"/></video></div>
<p>使用 SSH 執行 git clone 與 git push 的過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_ssh1" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_ssh1.mp4" type="video/mp4"/></video></div>
<p>設定可攜套件 .gitconfig 的過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_gitconfig" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_gitconfig.mp4" type="video/mp4"/></video></div>
<p>solvespace 零組件繪圖過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_cad" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_cad.mp4" type="video/mp4"/></video></div><h3>Fossil</h3>
<p>Fossil SCM 的應用</p>
<p><a href="https://fossil-scm.org/">https://fossil-scm.org/</a> </p>
<p>Github 與 Fossil SCM 結合應用範例:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="wcmw3_fossil1" height="630" muted="true" width="1008">
<source src="/downloads/wink/wcmw3_fossil1.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">fossil init w4.fossil<br/><br/>fossil ui w4.fossil<br/><br/>ctrl c<br/><br/>git clone https://github.com/mdecycu/cmsimde_site.git c<br/><br/>cd c<br/><br/>fossil open ./../w4.fossil --force<br/><br/>fossil add .<br/><br/>fossil commit -m "add c"<br/><br/>cd ..<br/><br/>fossil ui w4.fossil<br/><br/><a href="http://localhost:8081/doc/trunk/index.html">http://localhost:8081/doc/trunk/index.html</a></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">trunk 為最新版本的代號, 若在 Fossil 系統中改版後, 可以將 trunk 換為版號, 直接看到該版的靜態網站內容.</div><h2>Topic1</h2>
<p>可攜環境與 Github</p>
<p><object data="/images/topic1.svg" height="885" type="image/svg+xml" width="1357"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic1.smm">Edit topic1.smm</a></p><h3>w1</h3>
<p><span style="background-color: #ffff00;">如何利用 C: 中舊的可攜程式環境建立 Portable_wcm2025?</span></p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p><span style="background-color: #ffff00;">如何利用 Github 帳號與 Portable_wcm2025 建立 SSH 與認證用的 .reg 檔案?</span></p>
<p style="padding-left: 30px;">確認 start 批次檔案中 GIT_SSH 環境變數已經指向 Putty</p>
<p style="padding-left: 30px;">利用可攜程式中的 puttygen.exe 建立 OpenSSH 格式的公鑰(鎖頭)與 Putty 格式的私鑰(開門鑰匙)</p>
<p style="padding-left: 30px;">利用 putty.exe 建立 SSH 遠端登入所需要的 session, 並將電腦組態登錄內容, 以 .reg 匯出存入隨身碟</p>
<p style="padding-left: 30px;">必須注意 .ppk 格式的私鑰存放位置是否能與可攜程式中所建立的 session 互相對應</p>
<p style="padding-left: 30px;">最後利用 session 設定, 以 git clone 將作業倉儲取下準備進行維護</p>
<p><span style="background-color: #ffff00;">如何領取作業倉儲並利用 Portable_wcm2025 進行個人作業內容維護?</span></p>
<p style="padding-left: 30px;">登入 Github 後, 利用 Github Classroom 作業連結取得個人倉儲</p>
<p style="padding-left: 30px;">在個人作業倉儲設定中的 Pages 以主分支作為作業網站的根目錄</p>
<p style="padding-left: 30px;">利用 cms 啟動編輯網站, 編輯結束後以 Convert 轉為靜態網頁</p>
<p style="padding-left: 30px;">利用 SStatic 啟近端的靜態網站檢視伺服器, 啟動後利用其右邊的按鈕檢視</p>
<p style="padding-left: 30px;">確認階段性編輯無誤後, 利用 acp 加上具體的提交訊息後採 SSH 協定推送</p>
<p><span style="background-color: #ffff00;">分組組長如何利用 Github Classroom 協同作業連結建立團隊 (Team)? 學員如何 Join?</span></p>
<p style="padding-left: 30px;">cd2025 課程中的 Github Classroom 帳號為 <a href="https://github.com/mdecd2025/">https://github.com/mdecd2025/</a></p>
<p style="padding-left: 30px;">各學員的作業倉儲 (Repository) 位於: <a href="https://github.com/orgs/mdecd2025/repositories">https://github.com/orgs/mdecd2025/repositories</a></p>
<p style="padding-left: 30px;">各班的協同倉儲 (Teams) 位於: <a href="https://github.com/orgs/mdecd2025/teams">https://github.com/orgs/mdecd2025/teams</a></p>
<p style="padding-left: 30px;">2b 各組的 Teams 名稱為 g<a href="https://github.com/orgs/mdecd2025/teams/g1">1</a>, <a href="https://github.com/orgs/mdecd2025/teams/g2">g2</a> ..., 而 2a 各組的 Teams 名稱必須設定為 ag1, ag2 ...</p>
<p><span style="background-color: #ccffcc;">w1 任務</span>:</p>
<p style="padding-left: 30px;">分組團隊 (Teams) 建立後, 請參考<a href="https://mde.tw/cd2025/content/list.html">說明</a>後, 將各班各學員與各團隊的倉儲與網站連結, 分別放入標題為 list (使用第一階標題) 的網頁中.</p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/education/sign-up">註冊 Onshape 教育帳號</a></p>
<p style="padding-left: 30px;"></p>
<p></p>
<h3>Portable</h3>
<p>以下將說明如何自行在 Windows 操作系統中建立可攜 Python 程式系統.</p>
<p>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境.</p>
<p>以下為操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="https://mdewcm2025.github.io/hw-scrum-1/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p>在此有一點必須特別注意, SciTE 中有關使用 Pythonw.exe 解譯程式設定的檔案必須使用:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">if PLAT_WIN
	python.command=pythonw.exe
if PLAT_GTK
	python.command=python3
if PLAT_MAC
	python.command=python</pre>
<p>也就是使用當下所設定的 pythonw.exe 而非指定到特定舊版本的 pythonw.exe, 例如: Y:\Python310\pythonw.exe</p>
<hr/>
<p>自行製作可攜 Python, 以及配置 pip 的過程如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/t8lpTRLP3Ic?si=XdqorGOTaokrPrQx" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XqTiDBusTb0?si=MKZ1C_Mjf7mEDUBC" title="YouTube video player" width="560"></iframe></p><h3>repo</h3>
<p>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境.</p>
<p>以下為操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p>以下為操作影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/t8lpTRLP3Ic?si=XdqorGOTaokrPrQx" title="YouTube video player" width="560"></iframe></p>
<p>說明如何取得個人作業倉儲並透過 TOKEN 修改內容之一:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/y2lp77yB1V8?si=3f1KwLAbkKA81Yxz" title="YouTube video player" width="560"></iframe></p>
<p><span>說明如何取得個人作業倉儲並透過 TOKEN 修改內容之二:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/4DVSjC5LRlQ?si=gJn6AFxBm1sVTAs1" title="YouTube video player" width="560"></iframe></p>
<h3>SSH</h3>
<h4>使用 SSH 協定執行作業倉儲的推送</h4>
<p><a href="https://zh.wikipedia.org/zh-tw/Secure_Shell">SSH</a> 是一種加密的網路傳輸協定, PuTTY 則是可用於 Windows 環境的 SSH 協定工具, 其中支援遠端登入 (putty.exe) 與檔案傳輸工具 (psftp.exe).</p>
<p>使用 PuTTY 所建立的公私鑰進行 Github push 認證的步驟:</p>
<p>第一步:</p>
<p style="padding-left: 30px;">若希望在 Windows 環境透過 git 指令, 使用 PuTTY 設定的 session (一個代表連線伺服器主機、私鑰位置與是否使用代理主機等資訊的字串), 執行 push, 必須要在啟動可攜環境時, 設定 GIT_SSH 環境變數, 將此變數指向 PuTTY 套件中的 plink.exe 位置 (也就是 set GIT_SSH=%Disk%:\putty\plink.exe).</p>
<p>第二步:</p>
<p style="padding-left: 30px;">指定利用 PuTTY 的 SSH session 執行 git push 後, 必須在 Windows 操作系統中選擇一個字串, 作為 SSH 連線 session 名稱, 由於此設定必須指向 SSH 協定加密用的私鑰所在目錄位置, 因此設定 session 之前, 必須利用 puttygen.txt 建立一對公私鑰, 其中的公鑰為 OpenSSH 格式, 必須送到使用者 Github 帳號設定區 (Settings) 的 SSH and GPG keys 中.</p>
<p>第三步:</p>
<p style="padding-left: 30px;">利用 puttygen.exe 建立公私鑰的方法, 是在執行 puttygen.exe 之後, 以滑鼠按下 Generate 之後, 讓滑鼠在 puttgen.exe 視窗中 key 下方的空白區域隨意移動, puttygen.exe 會根據滑鼠移動的位置隨機建立 OpenSSH 格式的公鑰, 以及配對的 PuTTY 格式的 Private Key (副檔名為 .ppk)</p>
<p>第四步:</p>
<p style="padding-left: 30px;">接下來, 將 OpenSSH 格式的 Public Key 內容複製到個人 Github 帳號設定區的 SSH and GPG keys 中, 並以 puttygen.exe 執行視窗右下方的 Save private key 按鈕, 將私鑰 (假設為 myprivatekey.ppk) 存至 Y:\.</p>
<p>第五步:</p>
<p style="padding-left: 30px;">接著啟動 PuTTY 中的 putty.exe, 在 Host Name (or IP Address) 欄位填入 github.com, 並確認 Connection Type 選用 SSH, 表示要透過 SSH 加密協定連線到 github.com.</p>
<p>第六步:</p>
<p style="padding-left: 30px;">接著在 putty.exe 視窗下方的 Saved Sessions 填入一組字串, 此字串就是之後要遠端登入 github.com 設定 push 連線 URL 的 session 名稱, 在此假設選擇 "mysession" 作為 session 名稱, 使用者可以自行選擇具有代表性的字串, 例如: 學號或簡短的英文姓名縮寫.</p>
<p>第七步:</p>
<p style="padding-left: 30px;">在 putty.exe 視窗中填入 github.com 與 "mysession" 名稱之後, 點擊 Save 之後, 此 session 設定就會被 Windows 操作系統存入該台電腦的 Registry 登錄檔案中的 HKEY_CURRENT_USER - SOFTWARE - SimonTatham 所在組態區. 此時可以在命令列中輸入 regedit 後進入登錄檔查看是否 mysession 已經存在.</p>
<p>第八步:</p>
<p style="padding-left: 30px;">上列 "mysession" 設定完成且按下 Save 之後, 若再按下 Open, 採用 IPv4 網路連線的電腦應該已經可以透過 putty.exe 遠端連線至 github.com, 視窗中會出現 github.com 作為視窗標題, 且內容為 login as: 但一般使用者並沒有帳號可以直接透過 putty.exe 遠端登入到 github.com, 而只能在 session 設定完成後, 利用此 session 執行 git push.</p>
<p>第九步:</p>
<p style="padding-left: 30px;">由於前面的 "mysession" 雖然已經存入 Windows 操作系統的登錄檔, 但並沒有設定 private key 的位置, 因此接下來要再開啟 putty.exe, load 進此一 session, 然後在此 session 設定左方的 Category: 下方的 Connection - SSH - Auth - Credentials 設定中的 Private key file for authentication: 區, 利用 Browse 選擇位於 Y:\ 的 myprivatekey.ppk 檔案. 選擇檔案完成後, 必須再回到 Catetory: 下方的 Session 區, 以右方的 Save 將附加私鑰位置設定的 session 存檔. 此時 Windows 登錄檔中的 "mysession" 除了代表要使用 SSH 連線到 github.com 之外, 還附帶指定了 myprivatekey.ppk 在 Y:\ 的位置.</p>
<p>第十步:</p>
<p style="padding-left: 30px;">若上述設定是在電腦輔助設計室中的電腦進行, 必須利用命令列 regedit 指令, 進入 HKEY_CURRENT_USER - SOFTWARE - SimonTatham 位置, 利用滑鼠右鍵將此登錄設定檔案"匯出" 存入可攜程式 start_ipv6.bat 所在目錄, 此處假設命名為 mysession.reg, 使用者可以自行對 .reg 命名.</p>
<p>第十一步:</p>
<p style="padding-left: 30px;">由於上列的 myprivatekey.ppk 存於可攜程式中的 Y:\, 因此當使用者利用 start_ipv6.bat 啟動可攜程式後, 就可以利用滑鼠雙點擊位於同目錄的 mysession.reg, 上述的 "mysession" 設定就會存入 Windows 操作系統的登錄檔中.</p>
<p>使用 PuTTY session 設定倉儲 .git/config 中的 URL</p>
<p>假設上列 "mysession" 對應中的 OpenSSH 格式公鑰是送到 Github 帳號為 scrum-1 學員的 SSH and GPG key 區域, 則 scrum-1 學員在啟動可攜系統後, 已經雙點擊 mysession.reg, 將前述 putty.exe 設定的 session 組態登錄設定回存至 Windows 操作系統中, 則 scrum-1 學員就可以將其近端作業倉儲中的 mysession 用於倉儲 .git/config 檔案的下方設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[remote "origin"]
    url = git@mysession:mdecd2025/hw-scrum-1.git
    fetch = +refs/heads/:refs/remotes/origin/</pre>
<p>其中的 [remote "origin"] 表示當使用 git 指令中針對此倉儲 "origin" 是一個與遠端倉儲對應的字串代號, 代表其下兩項設定. url 代表此 "origin" 的倉儲連線網址, 而連線至此倉儲的協定是採遠端登入 (使用 Github 支援的 SSH 遠端登入協定), 且此遠端登入的帳號為 "git", 這是所有要使用 SSH 執行 git push 的用戶共同使用的登入帳號.</p>
<p>url 設定中 "@" 之後的 "mysession" 就是宣告要使用此電腦登錄檔中所設定的 session 名稱 (代表要連線到 github.com, 且帶的 myprivatekey.ppk, 準備在登入流程中與 github.com 中 mdewcm2025 帳號下的 hw-scrum-1 倉儲擁有者 (或帶有 repo 管理權限的帳號) 所登錄的 public keys 進行認證比對, 一旦通過認證, git push 指令就可以成功將改版資料推送到指定的倉儲區域.</p>
<h3>list</h3>
<p>以下過程將各班學員的倉儲與網站連結列出:</p>
<p>讀出 list 倉儲資料 (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/2793a8a65bd810e9837e0d00ca3e2105d3d5da9c/list_stage_1.py">執行結果</a>):</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
from browser import html
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")</pre>
<p>建立 anchor 與 break 標註 (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/2793a8a65bd810e9837e0d00ca3e2105d3d5da9c/list_stage_2.py">執行結果</a>):</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("scrum-1", href="https://mdecd2025.github.io/hw-scrum-1")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("github.com", href="https://github.com")</pre>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/113a3d7e19b36a7672a136f3731ef07b095adeef/list_2a.py">列出 2a 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/29173e8b73ad422fd7c44bcd93658a3579d63633/list_stage_3.py">列出 2b 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2a_group.py">列出 2a 分組網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2b_group.py">列出 2b 分組網站與倉儲連結</a></p>
<hr/>
<p>請列出各班目前尚未納入分組的學員名單</p>
<p>透過下列程式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
# pip install pygithub
from github import Github
# the following is under IPv6
# Replace these variables with your own details
GITHUB_TOKEN = 'your_token'
ORG_NAME = 'mdecd2025'
PROXY = 'http://p4.cycu.org:3128'

def get_all_team_members_starting_with_a(org_name, token, proxy):
    # Set proxy environment variables
    os.environ['http_proxy'] = proxy
    os.environ['https_proxy'] = proxy

    # Initialize Github object
    g = Github(token)
    all_members = []

    try:
        # Get organization
        org = g.get_organization(org_name)
        
        # Get all teams
        teams = org.get_teams()
        
        for team in teams:
            if team.name.lower().startswith('g'):
                print(f"Processing team: {team.name}")
                # List members
                members = team.get_members()
                for member in members:
                    all_members.append(member.login)
                    print(f"Login: {member.login}, ID: {member.id}, URL: {member.html_url}")
                    
        print("\nAll members:", all_members)
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    get_all_team_members_starting_with_a(ORG_NAME, GITHUB_TOKEN, PROXY)</pre>
<p>已知各班已經參與分組的學員 Github 帳號分別如下:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']</pre>
<p>請接著列出目前各班尚未納組的學員學號.</p>
<p>首先看能否從 list\2a.txt <a href="https://mdecd2025.github.io/hw-scrum-1/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/8443979d03961d3f66e99e65f4ab3639b3567891/list_2a_stud_num_and_github.py">讀出學員的學號與 github 帳號</a>:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 確定已經取得 2a.txt 中的學號與 github 帳號資料
#print(all_stud)
# 利用 for 迴圈逐一列出各學員的單行資料
# 已知各行資料是以 \n 跳行, 可以設法先刪除每一筆資料最後的跳行符號
for i in all_stud:
    #print(i)
    drop_n = i.rstrip("\n")
    # 確定每一行最後的跳行符號已經移除
    #print(drop_n, end="")
    # 設法利用學號與帳號間的 "\t" 將資料隔開
    stud = drop_n.split("\t")
    #print(stud)
    stud_num = stud[0]
    stud_github = stud[1]
    print("學號為 ", stud_num, " 的學員, 其 Github 帳號為 ", stud[1])</pre>
<p>只要在迴圈中加入下列判斷式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#print("學號為 ", stud_num, " 的學員, 其 Github 帳號為 ", stud[1])
if stud_github not in a_all_members:
    print(stud_num)</pre>
<p>即可取得下列尚未納組的學員學號:</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/1ef87e0d43210f34d48ea6559a6a74d075d6a253/2a_not_in_group.py">2a</a>:</p>
<p>41023220<br/>41223111<br/>41223119<br/>41223124<br/>41223148</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/addb4810bed04a15b77e94720cf7de231f380591/2b_not_in_group.py">2b</a>:</p>
<p>40923137<br/>41023237<br/>41223210<br/>41223214<br/>41223223<br/>41223232<br/>41223233<br/>41223239<br/>41223245<br/>41271217<br/>41271236</p>
<hr/>
<p>w4: <a href="/downloads/w4_2b_grouping.txt">w4_2b_grouping.txt</a></p>
<p></p><h3>IPv6</h3>
<p>已知 w4 之前的學員作業倉儲版本, 無法在 IPv6 位址設定時正確運作, 各學員必須下載 <a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>, 解開壓縮檔案後, 替換倉儲中的 cmsimde 目錄.</p>
<p>IPv6 設定:</p>
<p style="padding-left: 30px;">2a 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:a001<br/>2b 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b001<br/>gateway: 2001:288:6004:17::254<br/>dns server: <br/>2001:288:6004:17::3<br/>2001:b000:168::1</p>
<p>2a 以 <a href="/downloads/w4_2a_index.txt">w4_2a_index.txt</a> 中的序號為準, 例如: 序號為 1 的學員其固定 IPv6 位址為:</p>
<p style="padding-left: 30px;"><span>2001:288:6004:17:fff1:cd25:0000:a001</span></p>
<p style="padding-left: 30px;"><span>若序號為 60 其 IPv6 位址為 2001:288:6004:17:fff1:cd25:0000:a060</span></p>
<p>2b 以 <a href="/downloads/w4_2b_index.txt">w4_2b_index.txt</a> 中的序號為準, 例如: 序號為 1 的學員其固定 IPv6 位址為:</p>
<p style="padding-left: 30px;"><span>2001:288:6004:17:fff1:cd25:0000:b001</span></p>
<p style="padding-left: 30px;"><span>若序號為 66 其 IPv6 位址為 2001:288:6004:17:fff1:cd25:0000:b066</span></p>
<hr/>
<p>各組員將電腦設為所份配的固定 IPv6 後, 可以利用 python -m http.server, 在作業倉儲中啟動 port 8000 的 http 靜態網頁伺服器, 以下為各班的近端學員靜態網站連結:</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2a_group.py">列出 2a 分組網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2b_group.py">列出 2b 分組網站與倉儲連結</a></p>
<p>2a IPv6 port 8000 連線列表</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/48af059c96052719dc03d5fe8ee8af9a6033afc7/w4_2b_ipv6_stud_num.py">2b IPv6 port 8000 連線列表</a> (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/35707a62977b9829179159ffd34140d600ef8158/w4_2b_ipv6_task3.py">列出無法連線學員</a>)</p>
<hr/>
<p>以下為與 AI 系統的對話:</p>
<p>請用 Brython 寫出在 id="brython_div1" 嵌入 html 連結的程式. 希望各連結能透過 http 協定連結到班上有 66 位學員的靜態網頁. 其中各學員的固定 IPv6 分別為 2001:288:6004:17:fff1:cd25:0000:b001 到 2001:288:6004:17:fff1:cd25:0000:b066, 且使用 port 8000 進行連結. 請寫出此一 Brython 程式.</p>
<p>取得下列程式: <a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/5674eb19769159d503b2263726279dc4e7f26c1f/w4_2b_ipv6.py">透過 2b 學員序號列出其 IPv6 靜態網站</a></p>
<p>完成上述以序號標示後, 透過下列詢問可以取得以學號作為標示的各學員近端靜態網站連結.</p>
<p style="padding-left: 30px;">任務一: 請用 Brython 寫出在 id="brython_div1" 嵌入 html 連結的程式. 希望各連結能透過 http 協定連結到班上有 66 位學員的靜態網頁. 其中各學員的固定 IPv6 分別為 2001:288:6004:17:fff1:cd25:0000:b001 到 2001:288:6004:17:fff1:cd25:0000:b066, 且使用 port 8000 進行連結. 請寫出此一 Brython 程式.</p>
<p style="padding-left: 30px;">任務二: 若各學員序號取自 https://mde.tw/cd2025/downloads/w4_2b_index.txt, 且此一資料以空白隔開序號加"." 及學號, 能否修改成以學員的學號作為 html 的標示.</p>
<p style="padding-left: 30px;">任務三: 完成各學員的 html 連結後, 請再用 Brython 程式設法進入每一位學員的網站查驗, 是否可以讀取到該連結 content 目錄中的 About.html, 若可以則 pass, 若無法連結則列出無法完成連結的學員學號.</p>
<p style="padding-left: 30px;">請分別列出上述三個任務的程式碼.</p><h2>Topic2</h2>
<p>零組件繪圖</p>
<p><object data="/images/topic2.svg" height="671" type="image/svg+xml" width="1016"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic2.smm">Edit topic2.smm</a></p><h3>Compile</h3>
<p>以下要說明如何利用可攜程式套件編譯 Solvepace:</p>
<p>下載 <a href="http://229.cycu.org/cmake_msys64.7z">cmake_and_msys64.7z</a>, 將 cmake-3.21.0-windows-x86_64、msys64 與 libwinpthread-1.dll 等資料放入 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> 解開壓縮後的 data 目錄中, 啟動可攜程式檔案就可以使用 <a href="https://www.msys2.org/">MSYS2</a> 編譯 Solvespace 3.1 版的原始碼. 取得的 solvespace.exe 只要與 libwinpthread-1.dll 處於同一個目錄, 就可以執行編譯完成的 solvespace.exe 執行參數化零組件的繪圖.</p>
<p>備註: <span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p>編譯 Solvespace 的詳細步驟如下:</p>
<p>配置好 <a href="http://229.cycu.org/cmake_msys64.7z">cmake_and_msys64.7z</a> 後, 啟動可攜程式</p>
<p>在命令列中 cd tmp, 然後利用 git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> 取下 solvespace 的原始碼</p>
<p>cd solvespace 後, 利用 git checkout v3.1 將版本切換到 v3.1 的原始碼內容</p>
<p>接下來則必須修改 solvespace\extlib\angle\src\libANGLE\HandleAllocator.cpp 加入標頭檔案:</p>
<p>#include &lt;limits&gt;</p>
<p>接著就可以進行程式碼的編譯與連結:</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p>完成編譯後, solvespace.exe 即位於 build\bin 目錄中, 執行時則需要 libwinpthread-1.dll 動態連結程式庫.</p>
<p>進行上述流程編譯的原始碼 <a href="http://229.cycu.org/solvespace_v3.1_src.7z">solvespace_v3.1_src.7z</a>, 以及編譯完成的 <a href="http://229.cycu.org/solvespace_v3.1_msys2.7z">solvespace_v3.1_msys2.7z</a>.</p>
<p>註: <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> 中所配置的 solvespace.exe 是採用 Visual Studio C++ 編譯, 檔案只有約 7MB, 因為其執行時所需的動態連結程式庫已經配置在 Windows 操作系統中, 因此檔案較小, 而採上述流程, 使用 <a href="https://www.msys2.org/">MSYS2</a> 可攜方式編譯所得到的 solvespace.exe, 檔案約 15MB, 還需要 62KB 的 libwinpthread-1.dll 才能執行, 這是因為採 <a href="https://www.msys2.org/">MSYS2</a> 編譯的 solvespace.exe 必須自帶執行所需的程式庫, 因此檔案較大.</p>
<p></p><h3>Onshape</h3>
<p><a href="https://www.onshape.com/en/education/sign-up">註冊 Onshape 教育帳號</a>, 登入後畫面如下:</p>
<p><img alt="" height="336" src="/images/onshape_starter.png" width="800"/></p>
<p><a href="https://cad.onshape.com/help/zh_TW/Content/Primer/onshape_primer.htm">Onshape 入門指南</a></p>
<p><a href="https://learn.onshape.com/">Learn Onshape</a></p>
<p>Tutorial 1: Creating Object (建立物件)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pMWnsHpDlQE?si=x_j_W6uQ6blwJ0JB" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 2: Adding Features (建立特徵)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GKI2H1mVyGY?si=1a8WO8JaKo0uz2j6" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 3: Misc tidbits (雜項花絮)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BJnG2WM8Jdg?si=VskoYcgGD94z_ebi" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 4: Views and Orientation (視圖與方位)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cJMW7pwsqaU?si=FafF37eJlQhIpmwJ" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 5: Documents (文件)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XR1c_3f6TIA?si=2K9TsB3c21tZHQk3" title="YouTube video player" width="560"></iframe></p>
<p>Units and Decimal: 單位與小數點位數</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/k1NNsI75fRc?si=vc-q9rkd1TbM1T4Z" title="YouTube video player" width="560"></iframe></p>
<p>Export to STL: 導出 STL 格式檔案</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dYo6kzmtLw0?si=9CpuXGMcpDVE9L8E" title="YouTube video player" width="560"></iframe></p>
<h2>Topic3</h2>
<p>建立模擬場景</p>
<p><object data="/images/topic3.svg" height="269" type="image/svg+xml" width="937"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic3.smm">Edit topic3.smm</a></p>
<p>平面四連桿機構參考資料:</p>
<p><a href="https://www.softintegration.com/chhtml/toolkit/mechanism/fourbar/fourbaraccel.html">fourbar acceleration analysis</a> (<a href="https://www.youtube.com/watch?v=ICEBe15IP_I">video</a>)</p>
<p><a href="https://github.com/alejo1630/4bar_mechanism">fourbar mechanism</a></p>
<p><a href="https://www.reddit.com/r/MechanicalEngineering/comments/10niok2/four_bar_chain_catapult/?rdt=45176">fourbar chain catapult</a></p>
<p><a href="https://carleton.ca/johnhayes/wp-content/uploads/MAAE-3004-RRRP-DSP-RevF.pdf">RRRP fourbar linkage</a></p>
<p><a href="https://github.com/cyberbotics/webots/discussions/2621">Research papers using Webots</a></p>
<h3>Fourbar</h3>
<p>平面四連桿機構運動分析</p>
<p>Reference: <a href="https://docs.sympy.org/latest/modules/physics/mechanics/examples/four_bar_linkage_example.html">1</a>, <a href="https://gist.github.com/mdecycu/c6401d697ddbb33fcd0eaed5b4da8d09">2</a>, <a href="https://homepages.math.uic.edu/~jan/phcpy_doc_html/fourbartut.html">3</a></p>
<p><a href="/downloads/cd2025_box_fourbar_w5.7z">cd2025_box_fourbar_w5.7z</a></p>
<p><a href="/downloads/fourbar_box_w5.7z">fourbar_box_w5.7z</a></p>
<p><a href="/downloads/basket_ball_shooter.7z">basket_ball_shooter.7z</a></p>
<p><a href="/downloads/basket_ball_shooter.7z">basket_ball_shooter.7z</a></p>
<p><span style="background-color: #ffff00;">請注意, 所有 world 的存檔必須要將模擬時間轉為 0</span>, 否則所存的變數狀態將為該時間的模擬結果.</p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python">Tutorial 1</a> 重點摘要:</p>
<p>將 <a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> 解開壓縮後放入可攜套件 (<a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a>) 的 data 目錄中.</p>
<p>因為 start.bat 中已經宣告 Python 所在位置, 並將執行 webotsw.exe 所在的目錄放入 Windows 的命令搜尋路徑變數中 (path).</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python313

REM for webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin</pre>
<p>當起始一個 Webots project, 需要至少建立 worlds、controllers、protos 等三個目錄, 而且 Robot 的<span style="background-color: #ffff00;">控制器程式必須放入 controllers 目錄, 且控制程式檔名必須與子目錄相同</span>.</p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python">Tutorial 2</a> 重點摘要:</p>
<p><img alt="" height="329" src="/images/simplest_rigit_body_object.png" width="400"/></p>
<p>根據上圖, 在 <span style="background-color: #ffff00;">Webots 建立剛體物件, 必須使用 Solid 節點, 並從節點中的 children 建立 Shape 後宣告其 geometry 外形用於系統的運動方程式, 而其碰撞檢測的外形依據, 則從 Solid 節點的 boundingObject 中的 geometry 進行確認</span>.</p>
<p>另外可從 View - Optional Rendering - Show coordinate system 選項, 要求系統列出目前視圖所依據的座標系統.</p>
<p>當在 base 物件建立旋轉軸時, HingeJoint 物件的位階必須與 base 相同, 而且 link1 的 solid 物件必須接在 HingeJoint 的 endPoint 節點上, 且因為 link1 的最後位置並非位於其旋轉中心, 因此在建立 link1 solid 物件下的 shape 之前必須先使用 pose 物件, 以便在 solid 的 parent 座標系統之下, 建立一個屬於 shape 的局部座標轉換系統.</p>
<p>另外 HingeJoint 的旋轉中心位置是由 jointParameters 物件下的 anchor 欄位決定, 而其旋轉軸則由 axis 欄位決定.</p>
<p>由於 link1 最後需要透過碰撞檢測來與籃球互動, 因此除了 dynamic simulation 之外, 還需要設定 boundingObject, 才能界定 link1 的碰撞幾何外形, 但由於前面的 link1 並非在其 parent 座標系統的物件中心旋轉, 而是透過其局部座標轉換 (利用 pose 物件達成), 往局部 x 方向移動 0.2m, 因此 boundingObject 在引用其 shape 時, 也必須透過 pose 轉換到 link1 最終所在位置.</p>
<p><span>上列流程所完成的 Webots 專案檔: </span><a href="https://localhost:9448/downloads/w6_demo_project.7z">w6_demo_project.7z</a> (joint on link1)</p>
<p><a href="/downloads/w6_joint_on_base_project.7z">w6_joint_on_base_project.7z</a> (joint on base)</p>
<p></p><h3>boomer</h3>
<p><a href="/downloads/w5_boomer.7z">w5_boomer.7z</a></p><h2>Topic4</h2>
<p>協同設計</p>
<p><object data="/images/topic4.svg" height="191" type="image/svg+xml" width="546"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic4.smm">Edit topic4.smm</a></p><h1>Tutorial</h1>
<p>Webots R2025a 執行環境硬體需求:<br/><br/>2 GHz 4 核心以上 CPU, NVIDIA 或 AMD 支援 OpenGL 3.3 版, 帶有 512 MB 記憶體以上獨立顯示卡<br/><br/>操作系統:</p>
<p style="padding-left: 30px;">Windows 10 或 11 64 位元操作系統</p>
<p style="padding-left: 30px;">Ubuntu 24.04 以上版本</p>
<p style="padding-left: 30px;">macOS 12 以上版本操作系統</p>
<p>使用介面:</p>
<p style="padding-left: 30px;">Webots 可以透過 Tools - Preferences - Language 中選擇使用 English 或簡體中文介面 (目前無繁體中文介面, 介面語系翻譯請參考 <a href="https://github.com/cyberbotics/webots/tree/released/resources/translations">translations 頁面</a>說明), 在此強烈建議使用 English 界面即可.</p>
<p>Webots 版本差異:</p>
<p style="padding-left: 30px;">每一版本都有些微差異, cd2025 將使用 <a href="https://github.com/cyberbotics/webots/releases/tag/R2025a">R2025a</a>.</p>
<p style="padding-left: 30px;"><a href="https://www.cyberbotics.com/doc/reference/changelog-r2025">R2025a changelog</a></p>
<hr/>
<p>Webots 原始碼使用授權:<br/><br/>採 <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache 2.0 license agreement</a>. Apache 2.0 是一種開放且對企業友善的授權條款, 允許任何人免費使用、修改和分享軟體的原始程式碼, 包括商業用途使用.</p>
<p>自行編譯 Webots 請參考 <a href="https://cyberbotics.com/doc/guide/building-webots">building Webots 頁面</a>說明.</p>
<p>Webots 套件中的大部分範例模擬檔案都使用 Apache 2.0 許可釋出, 但有部分機器人和物件模型（proto 檔案）則是根據 <a href="https://cyberbotics.com/webots_assets_license">Webots 資產的開放原始碼許可協議</a>發佈, 另外有些範例則是由用戶根據不同的開源許可證所提供, 這些檔案都會明確標示其許可證內容.</p>
<hr/>
<p>Webots 介紹: (查英英字典: <a href="https://www.merriam-webster.com/dictionary/">https://www.merriam-webster.com/dictionary/</a>)</p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-webots">What is Webots?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-can-i-do-with-webots">What can I do with Webots?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#webots-simulation">Webots simulation</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-world">What is a world?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-controller">What is a controller?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-supervisor-controller">What is a supervisor controller?</a></p>
<p><a href="https://www.youtube.com/playlist?list=PLt69C9MnPchkLuNNc4q9SeMFA96_v4THJ">Webots Crash Course</a> (速成班教學影片)</p>
<hr/>
<p>第一個 Webots 導引: <a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots</a></p>
<p>登入 Github, 在 <a href="https://github.com/copilot">https://github.com/copilot</a> 的協助下執行此一教學練習.</p>
<p>導引目的: You will create your first simulation containing a simple environment: an arena with floor and walls, a few boxes, an e-puck robot and a controller program that will make the robot move.</p>
<p>建立一個簡單的模擬環境, 意即一個競技場中, 包括一個帶有地板、圍牆、幾個盒子、一個 e-puck 機器人, 以及能讓機器人移動的控制程式.</p>
<p><img alt="" height="310" src="/images/tutorial_e-puck.thumbnail.jpg" width="400"/></p>
<p>開啟 Webots 前, 請下載 <a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB).</p>
<p>有關 Webots 在 Windows 操作系統啟動, 請參考<a href="https://cyberbotics.com/doc/guide/starting-webots#windows">說明</a>. 有關 Web streaming 也請參考<a href="https://cyberbotics.com/doc/guide/web-streaming">說明</a>.</p>
<p>Webots 的可執行檔案位於 Y:\Webots_2025a\msys64\mingw64\bin\Webotsw.exe, 當與 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> 配置時, 若希望在不上網的情況下執行官方範例, 則必須再預先下載 <a href="https://github.com/cyberbotics/webots/releases/tag/R2025a">https://github.com/cyberbotics/webots/releases/tag/R2025a</a> 中的 <a href="https://github.com/cyberbotics/webots/releases/download/R2025a/assets-R2025a.zip">assets-2025a.zip</a>, 存入 Y:\home_ipv6\AppData\Local\Cyberbotics\Webots\cache\assets 目錄, 否則啟動官方範例時, 必須從官方網站下載各範例中所導入的原型節點資料.</p>
<p>若 Webotsw.exe 並非是在可攜程式的環境中啟動, 則 Webots 啟動後所下載的原型節點資料, 將會存入操作系統中的 C:\Users\%USERNAME%\AppData\Local\Cyberbotics\Webots\cache\assets 目錄中.</p>
<p>在可攜程式環境中啟動 Webots 的設定:</p>
<p style="padding-left: 30px;">start_ipv6.bat 中納入:</p>
<p style="padding-left: 30px;">REM for webots<br/>set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin</p>
<p style="padding-left: 30px;">並將 %path_webots% 放入 PATH 環境變數設定中.</p>
<p style="padding-left: 30px;">若希望在執行 start_ipv6.bat 時開啟 Webots, 可以在啟動可攜程式的批次檔案中加入 start webotsw.exe</p>
<p>在可攜程式環境中 (USB 固態硬碟、一般隨身碟、筆電或個人電腦) 啟動 Webots 後, 開始建立模擬世界(即場景), 而在 Webots 中所謂場景:</p>
<p>A <strong>World</strong> is a file containing information like where the objects are, what they look like, how they interact with each other, what is the color of the sky, and the definitions of gravity, friction, masses of the objects, etc. It defines the initial state of a simulation. The different objects are called <strong>Nodes</strong> and are organized hierarchically in a <strong>Scene Tree</strong>. Therefore, a node may contain sub-nodes. A world is stored in a file having the <code>.wbt</code> extension. The file format is derived from the <a href="/downloads/vrml97specification.pdf">VRML97</a> language, and is human readable. The world files must be stored directly in a directory called <code>worlds</code>.</p>
<p>Webots 場景中包含以下定義:</p>
<ol>
<li>物件所在位置</li>
<li>物件的外形</li>
<li>物件如何互動</li>
<li>天空的顏色</li>
<li>地心引力的定義</li>
<li>摩擦力</li>
<li>物件的質量</li>
<li>模擬的起始條件</li>
<li>其他有關模擬的設定等</li>
</ol>
<p>場景中的物件稱為節點, 各節點配置於場景樹中, 各節點可以再包含子節點, 場景的檔案格式源自 VRML97 程式語法 (<a href="/downloads/vrmlman.pdf">VRML Primer and Tutorial</a>), 場景的檔案副檔名為 .wbt, 且一定要存入名稱為 worlds 的目錄中.</p>
<p>Webots 模擬選單功能說明: <a href="https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu">https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu</a> 其中著色選單可以關閉場景中的畫面, 主要配合基因演算、視覺辨識或機器學習流程中的快速模擬流程.</p>
<h2>onelink</h2>
<p><a href="/downloads/onelink_webots.7z">onelink_webots.7z</a> (直接採 Shape 建模)</p>
<p><a href="/downloads/onelink_slvs.7z">onelink_slvs.7z</a> (利用 Solvespace 繪製組立檔案, 轉為 STL 後, 再分割為 STL 零件與 OBJ 零件後, 將 OBJ 零件 import 進 Blender 確認零件名稱, 各 OBJ 零件分別利用 Solid 與 CadShape 節點建立從屬關係, 最後加入 hinge 旋轉軸與 Python 控制程式, 讓單一機械臂以 30deg/s 速度轉動)</p>
<p style="padding-left: 30px;">onelink_w_hinge.wbt 直接在場景樹狀結構中定義 Solid (可用於較簡單的零組件系統)</p>
<p style="padding-left: 30px;">onelink_w_hinge2.wbt 則將各零件以 PROTO 定義為原型節點, 之後在場景中導入後引用 (適合較複雜的零組件系統)</p>
<p></p>
<h2>fourbar1</h2>
<p>以下利用 box 建立 Webots 平面四連桿場景:</p>
<p>層次結構：</p>
<p style="padding-left: 30px;">Robot → BASE</p>
<p style="padding-left: 30px;">Robot → JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3</p>
<p style="padding-left: 30px;">Robot → JOINT4 (closed chain 約束)</p>
<p><img caption="false" height="183" src="/images/Webots_fourbar_box_tree.png" width="200"/></p>
<p>base shape and coordinate setup:</p>
<p>建立 Box 時的局部座標系統原點位於 Box Shape 中心, 由於 Box x 方向長度 1m, 因此將整體往 x 方向移動長度的一半 (即 0.5m), 可讓隨後定位完成的 link1 依照此座標系統指定旋轉中心.</p>
<p><img alt="" height="209" src="/images/Webots_base_coord_setup.png" width="200"/></p>
<p>幾何關係：</p>
<p style="padding-left: 30px;">所有關節都繞 z 軸旋轉</p>
<p style="padding-left: 30px;">連桿長度分別為 0.4m、0.6m、0.9m</p>
<p style="padding-left: 30px;">基座長度為 1m</p>
<p>物理特性：</p>
<p style="padding-left: 30px;">所有連桿質量為 0.1kg</p>
<p style="padding-left: 30px;">使用密度為 -1 表示質量優先於密度</p>
<p style="padding-left: 30px;">馬達最大速度 1rad/s，最大扭矩 100N⋅m</p>
<p>控制系統：</p>
<p style="padding-left: 30px;">使用 "fourbar_controller" 控制器</p>
<p style="padding-left: 30px;">包含位置感測器和馬達裝置</p>
<p><a href="/downloads/fourbar_box.7z">fourbar_box.7z</a></p>
<p>1.</p>
<p><img alt="" height="222" src="/images/webots_w5_1.png" width="231"/></p>
<p>2.</p>
<p><img alt="" height="367" src="/images/webots_w5_2.png" width="245"/></p>
<p>3.</p>
<p><img alt="" height="270" src="/images/webots_w5_3.png" width="253"/></p>
<p>4.</p>
<p><img alt="" height="322" src="/images/webots_w5_4.png" width="800"/></p>
<p>5. </p>
<p><img alt="" height="470" src="/images/webots_w5_5.png" width="363"/></p>
<p>6.</p>
<p><img alt="" height="332" src="/images/webots_w5_6.png" width="800"/></p>
<p>7.</p>
<p><img alt="" height="389" src="/images/webots_w5_7.png" width="800"/></p>
<p>8.</p>
<p><img alt="" height="331" src="/images/webots_w5_8.png" width="295"/></p><h3>handon1</h3>
<p>啟動 Webots 2025a:</p>
<p style="padding-left: 30px;">啟動可攜程式系統後, 可以在 cmd 命令視窗中執行 webotsw, 就可以啟動 Webots.</p>
<p>建立 Robot 模擬場景:</p>
<p style="padding-left: 30px;">建立模擬場景可以在既有的 WorldInfo、ViewPoint、TextureBackground 以及 TextureBackgroundLight, 建立一個 Robot 節點.</p>
<p>利用 children 數列節點, 納入子節點:</p>
<p style="padding-left: 30px;">之後的物件節點都可以在 Robot 節點中的 children 數列節點中建立, Robot 與 Solid 節點中都包含 children 數列節點, 表示這樣的節點可以透過 children 放入更多的子節點, 其中更包括將其他 Robot 與 Solid 節點納入作為子節點.</p>
<p>在 Shape 節點中建立標準物件:</p>
<p style="padding-left: 30px;">至於 Shape 節點中, 就沒有 children 數列節點的設置, 只能根據其既有的節點屬性進行配置. 相較於 Solid 節點 Shape 節點的功能只能放入對應的標準物件, 例如: 目前這個範例會用到的 Box.</p>
<p>物件的移動與旋轉:</p>
<p style="padding-left: 30px;">而 Robot 與 Solid 節點, 除了本身具備座標轉換的平移及旋轉術性外, 還能利用其中的 children 數列節點, 加入 Pose 節點進行子節點內的座標轉換, 還可利用 Transform 節點調整物件的 scale.</p>
<p>利用 CAD 繪圖 (Solvespace 或 Siemens NX) 協助機構定位:</p>
<p style="padding-left: 30px;">本頁面的目的是利用 Webots 的 box 建立一個平面四連桿機構的模擬場景, 機構的尺寸設計必須從 Solvespace 的繪圖開始, 除了選擇各桿件的尺寸外, 還需提供各連桿的初始位置以及連桿方位, 才能透過 HingeJoint 以及 SolidReference 等兩個節點的配置, 完成平面四連桿的封閉機構約束設置.</p>
<p>物件的座標系統:</p>
<p style="padding-left: 30px;">在 Webots 中建立模擬場景, 很重要的一項工作就是確認每一個物件場景的座標系統, 尤其是在某一物件節點中配置各種 Joint 之後, 隨後接在此 Joint 上的物件都將依據其 parent 座標系統定位.</p>
<p>連接軸樹狀架構與 CoppeliaSim 的差異:</p>
<p style="padding-left: 30px;">此外 Webots 在配置 Joint 時的樹狀結構與 CoppeliaSim 有很大的差別, CoppeliaSim 的 Joint 物件位階是設定為 parent 物件的子物件, 而 Weobts 場景中的 Joint 節點則必須配置成與其 parent 節點相同位階.</p>
<p>利用 Box 建立平面四連桿模擬場景:</p>
<p style="padding-left: 30px;">以下的配置圖是希望平面四連桿的固定桿件長度為 1m, 且透過 Top view 視圖觀測時, 會水平置放. 在 Robot 節點中的 children 建立 Solid 時使用 DEF 命名為 base, 隨後若要使用此 Solid, 就可以透過 USE base 引用.</p>
<p style="padding-left: 30px;">但若此 DEF 命名物件之後, 內部的 Solid 物件自行移動 (例如: 透過 Pose), 則利用 USE base 作為 boundingObject 時, 也必須配合 Pose 移動至 Solid 所在位置. 如此才可在物件的碰撞檢測中, 正確配置物件的實體範圍.</p>
<p>起始座標定位方法一:</p>
<p>為了之後在此固定節點的左側建立 join1, 因此將 base 平移 0.5m, 以便讓隨後配置的 HingeJoint 可以採用此座標系統進行配置. 但利用滑鼠點選 DEF base Solid 時, 可以發現物件的座標系統仍位於其物件中心:</p>
<p><img caption="false" height="201" src="/images/webots_obj_coord.png" width="400"/></p>
<p>但若將滑鼠停到 Robot 的節點上, 目前的廣域座標系統已經因為 translation 0.5 0 0 而移動到 base 的最左側, 因此隨後配置的 HingeJoint 將會依照此廣域座標系統進行後續配置:</p>
<p><img alt="" height="200" src="/images/webots_robot_coord.png" width="400"/></p>
<p>起始座標定位方法二:</p>
<p>上列做法在一開始就先移動 base 物件, 讓隨後的 Joint1 定位中心可直接位於 base 左端. 若 base 物件不希望移動 (當 base 連桿與其他機構有特定對應位置時), 則隨後的 Joint1 就必須以 base 物件的中心點座標為基準, 然後在此基準建立 link1 物件之後, 先將 link1 移動至 base 最左端後旋轉 90 度, 這時的 x 軸將向上為正, 只要再沿著 x 軸移動 link1 長度的一半, 就可以完成 link1 的定位.</p>
<p>至於採用此方法的 Joint1 參考座標原點是位於 base 的中心點, 因此 link1 以 Joint1 旋轉的 anchor 中心點座標必須設為 -0.5 0 0.</p>
<p>之後的 link2 與 Joint2 的相關設置, 也可以採用先移動物件中心再旋轉至該連桿的起始方位後, 再對機構進行 x 軸方向的移動, 且對應旋轉的 Joint2 anchor 也必須配合設置當下的連桿參考座標系統.</p>
<p>box 平面四連桿的 Robot 節點架構:</p>
<p style="padding-left: 30px;">在 BASE 物件上設置兩個旋轉軸 (JOINT1 與 JOINT4):</p>
<p style="padding-left: 30px;">其中的 JOINT1 上將接 link1, link1 上接 JOINT2, JOINT2 上接 link2, link2 上接 JOINT3, JOINT3 上接 link3, 意即從 BASE 上接了三個 joints, 以及三個 links, 形成一個 open chain 機構.</p>
<p style="padding-left: 30px;">然後在 JOINT4 連接 link3 的設置時, 透過 SolidReference 節點, 指定 link3 作為 solidName 後, 將此條件作為 closed chain 的約束運算.</p>
<p style="padding-left: 30px;">再加上從 CAD 繪圖中取得的各連桿起始位置, 就可以結合連桿的 physics 與 boundingObject 屬性設置, 完成 Webots 上的平面四連桿場景.</p>
<p><img alt="" height="163" src="/images/Webots_box_fourbar1.png" width="200"/></p>
<p>在 BASE 上配置 JOINT1, JOINT1 末端配置 LINK1, LINK1 上再配置 JOINT2 的樹狀架構圖如下:</p>
<p><img caption="false" height="313" src="/images/Webots_box_fourbar2.png" width="250"/></p>
<p>將 Robot 命名為 four_bar_linkage, 並利用名稱為 fourbar_controller 的控制器進行控制:</p>
<p><img caption="false" height="304" src="/images/Webots_box_fourbar3.png" width="400"/></p>
<h2>fourbar2</h2>
<p>Webots 中平面四連桿機構的設置方式：</p>
<p>四連桿結構應該是：</p>
<ol>
<li>
<p><strong>第一條運動鏈</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT1</li>
<li>JOINT1 連接 LINK1</li>
<li>LINK1 上的 JOINT2 連接 LINK2</li>
<li>LINK2 上的 JOINT3 連接 LINK3</li>
</ul>
</li>
<li>
<p><strong>第二條運動鏈（closed chain）</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT4</li>
<li>JOINT4 的 endPoint 設為 SolidReference</li>
<li>SolidReference 的 solidName 設為 "LINK3"</li>
</ul>
</li>
</ol>
<p>這樣的結構是正確的，因為：</p>
<ol>
<li>主要運動鏈（JOINT1 → LINK1 → LINK2 → LINK3）形成一個序列結構</li>
<li>閉鎖鏈（JOINT4 → LINK3）通過 SolidReference 連接回主鏈的末端</li>
<li>這樣可以形成一個完整的閉環運動結構</li>
</ol>
<p>基本結構示意：</p>
<p>BASE<br/>├── JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3<br/>└── JOINT4 ------(SolidReference: "LINK3")--------┘</p>
<p>PROTO 結構：</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">Robot {
  children [
    BASE {
      ...
    }
    HingeJoint {  # JOINT1
      endPoint Solid {  # LINK1
        children [
          ...
          HingeJoint {  # JOINT2
            endPoint Solid {  # LINK2
              children [
                ...
                HingeJoint {  # JOINT3
                  endPoint Solid {  # LINK3
                    ...
                  }
                }
              ]
            }
          }
        ]
      }
    }
    HingeJoint {  # JOINT4
      endPoint SolidReference {
        solidName "LINK3"
      }
    }
  ]
}</pre>
<p>上列設置確保：</p>
<ol>
<li>機構能夠正確形成閉環</li>
<li>運動學約束能夠正確傳遞</li>
<li>物理模擬能夠正常進行</li>
</ol>
<p>此外，為了使機構運作正常，還需要：</p>
<ol>
<li>正確設置各個 joint 的旋轉軸（axis）</li>
<li>準確定義各個 joint 的錨點（anchor）</li>
<li>確保所有連桿的物理屬性正確設置</li>
</ol>
<p><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<h2>DEF</h2>
<p><a href="https://cyberbotics.com/doc/reference/def-and-use">https://cyberbotics.com/doc/reference/def-and-use</a></p>
<p>Although it is permitted to name any node using the DEF keyword, there are some exceptions where USE nodes are not valid. A USE node is an exact copy of the corresponding DEF node, and thus no property of a USE node can change independently from the DEF node.</p>
<p>For this reason it is not allowed to insert USE nodes of <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/solid">Solid</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/joint">Joint</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/jointparameters">JointParameters</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/trackwheel">TrackWheel</a>, and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/balljointparameters">BallJointParameters</a> nodes and their derived nodes. Indeed, the ability for identical solids or joints to occupy the same position is useless, if not hazardous, in a physics simulation. To safely duplicate one of these nodes, you can design a <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/proto">PROTO</a> model for this node and then add different PROTO instances to your world.</p>
<p>The same principle applies to <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/material">Material</a> and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/light">Light</a> nodes located in the first child of <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/charger">Charger</a> and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/led">LED</a> nodes whose emissive color changes automatically based on the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/charger">Charger</a> energy and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/led">LED</a> setup.</p>
<p>Also the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/texturetransform">TextureTransform</a> of the first <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/shape">Shape</a> in the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/track">Track</a> device with enabled texture animation cannot be a USE node given that the translation values will be automatically updated by Webots while the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/track">Track</a> device is moving.</p>
<p>Forbar Linkage the first link:</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">#VRML_SIM R2025a utf8

EXTERNPROTO "../protos/TexturedBackground.proto"
EXTERNPROTO "../protos/TexturedBackgroundLight.proto"

WorldInfo {
  info [
    "fourbar linkage"
  ]
}
Viewpoint {
  orientation -0.17524366601960317 0.20799757991102616 0.9623027924053665 1.7913508311753839
  position 1.0571588458938594 -2.502126861220829 1.490364369030099
}
TexturedBackground {
}
TexturedBackgroundLight {
}
DEF FOURBAR Robot {
  children [
    DEF BASE Solid {
      children [
        CadShape {
          url [
            "../split_parts/base.obj"
          ]
        }
      ]
      name "BASE"
    }
    DEF JOINT1 HingeJoint {
      jointParameters HingeJointParameters {
        axis 0 0 1
      }
      device [
        RotationalMotor {
          name "joint_motor1"
        }
      ]
      endPoint DEF LINK1 Solid {
        children [
          CadShape {
            url [
              "../split_parts/link1.obj"
            ]
          }
        ]
        name "LINK1"
      }
    }
  ]
}
</pre>
<p>Webots 中平面四連桿機構的設置方式：</p>
<p>四連桿結構應該是：</p>
<ol>
<li>
<p><strong>第一條運動鏈</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT1</li>
<li>JOINT1 連接 LINK1</li>
<li>LINK1 上的 JOINT2 連接 LINK2</li>
<li>LINK2 上的 JOINT3 連接 LINK3</li>
</ul>
</li>
<li>
<p><strong>第二條運動鏈（closed chain）</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT4</li>
<li>JOINT4 的 endPoint 設為 SolidReference</li>
<li>SolidReference 的 solidName 設為 "LINK3"</li>
</ul>
</li>
</ol>
<p>這樣的結構是正確的，因為：</p>
<ol>
<li>主要運動鏈（JOINT1 → LINK1 → LINK2 → LINK3）形成一個序列結構</li>
<li>閉鎖鏈（JOINT4 → LINK3）通過 SolidReference 連接回主鏈的末端</li>
<li>這樣可以形成一個完整的閉環運動結構</li>
</ol>
<p>基本結構示意：</p>
<p>BASE<br/>├── JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3<br/>└── JOINT4 ------(SolidReference: "LINK3")--------┘</p>
<p>PROTO 結構：</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">Robot {
  children [
    BASE {
      ...
    }
    HingeJoint {  # JOINT1
      endPoint Solid {  # LINK1
        children [
          ...
          HingeJoint {  # JOINT2
            endPoint Solid {  # LINK2
              children [
                ...
                HingeJoint {  # JOINT3
                  endPoint Solid {  # LINK3
                    ...
                  }
                }
              ]
            }
          }
        ]
      }
    }
    HingeJoint {  # JOINT4
      endPoint SolidReference {
        solidName "LINK3"
      }
    }
  ]
}</pre>
<p>上列設置確保：</p>
<ol>
<li>機構能夠正確形成閉環</li>
<li>運動學約束能夠正確傳遞</li>
<li>物理模擬能夠正常進行</li>
</ol>
<p>此外，為了使機構運作正常，還需要：</p>
<ol>
<li>正確設置各個 joint 的旋轉軸（axis）</li>
<li>準確定義各個 joint 的錨點（anchor）</li>
<li>確保所有連桿的物理屬性正確設置</li>
</ol>
<p><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><span>備註: </span><span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Analysis of Simple Planar Linkages.pdf">Analysis of Simple Planar Linkages.pdf</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/5srES4JPGbs?si=p_XkEvAiu_XYldGj" title="YouTube video player" width="560"></iframe></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hz2iOrB0CdA?si=1CdShkWq2UaCDuT-" title="YouTube video player" width="560"></iframe></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hm5I0Mnx0So?si=MQERcP24hXFZqjXU" title="YouTube video player" width="560"></iframe></p><h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/5srES4JPGbs?si=Z4LqS045ankGYnXG" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://mde.tw/cd2025/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hz2iOrB0CdA?si=1CdShkWq2UaCDuT-" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://mde.tw/cd2025/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hm5I0Mnx0So?si=MQERcP24hXFZqjXU" title="YouTube video player" width="560"></iframe></p>
<h1>Exam</h1>
<p>Exam1 (10%): <span style="background-color: #ffff99;">建立 Webots 基本物件模擬場景 (HW1 內容之延伸應用測驗)</span></p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): <span style="background-color: #ffff99;">利用 CAD 零組件建立模擬場景 (HW2 內容之延伸應用測驗)</span></p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): <span style="background-color: #ffff99;">Webots 機電模擬場景的協同設計 (HW3 內容之延伸應用測驗)</span></p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景 (HW1 內容之延伸應用測驗)</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 (HW2 內容之延伸應用測驗)</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計 (HW3 內容之延伸應用測驗)</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Reference</h1>
<p>以下相關參考資料, 部分網站連結只能從系上 IPv6 網段中擷取:</p>
<p></p>
<h2>Webots</h2>
<p><img alt="" height="350" src="/images/webots_apis_overview.png" width="400"/></p>
<p><a href="https://www.theconstruct.ai/webots-robot-simulator-ros-olivier-michel/">https://www.theconstruct.ai/webots-robot-simulator-ros-olivier-michel/</a> (<a href="https://lis2.epfl.ch/resources/podcast/2007/01/olivier-michel-robot-simulation-as.html">Old talk</a>, <a href="https://www.youtube.com/watch?v=kb85OrR0NFk">Video1</a>, <a href="https://www.youtube.com/watch?v=nxGPXK30EW8">Video2</a>, <a href="https://www.youtube.com/watch?v=WlB2cRim_80">Video3</a>)</p>
<p></p>
<p>由外部 Python 程式的執行控制 Webots 場景:</p>
<ol>
<li>場景 Robot 的 Controller 欄位設為 extern</li>
<li>可攜程式環境的 PYTHONPATH 環境變數必須納入 Webots 中的 Python 程式庫: set PYTHONPATH=%Disk%:\Python313\DLLs;%Disk%:\Python313\Lib;%Disk%:\Python313\Lib\site-packages;%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\lib\controller\python;</li>
<li>可攜系統的 PYTHON_PATH 必須指向所使用的 Python 版本目錄: set PYTHON_PATH=%Disk%:\Python313</li>
<li>可攜系統的 WEBOTS_HOME 必須指令 Webots 所在目錄: set WEBOTS_HOME=%Disk%:\Webots_2025a</li>
</ol>
<p><a href="https://cyberbotics.com/doc/guide/running-extern-robot-controllers">extern 相關說明</a></p>
<p><a href="https://cyberbotics.com/doc/guide/controller-programming?tab-language=python">Python controller programming</a></p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-8-the-supervisor?tab-language=python">supervisor</a></p>
<hr/>
<p><a href="https://mde.tw/content/Webots%20Doc.html">https://mde.tw/content/Webots%20Doc.html</a></p>
<p>Webots assets 儲存目錄 (容量約 831MB, 若包括 Webots 2025a 1GB, 整個系統約佔 2GB):</p>
<p>在 Windows 操作系統開啟 webotsw.exe:</p>
<p style="padding-left: 30px;">C:\Users\%USERNAME%\AppData\Local\Cyberbotics\Webots\cache\assets</p>
<p>在可攜程式環境中開啟 webotsw.exe:</p>
<p style="padding-left: 30px;">Y:\home_ipv6\AppData\Local\Cyberbotics\Webots\cache\assets</p>
<p>Stable version:</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB)</p>
<p><span style="background-color: #ffff00;">1.</span> 與 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> 結合使用, Webots - Tools - Preferences - Python Command 設定為 Y:\Python310\python.exe</p>
<p><span style="background-color: #ffff00;">2.</span> start_ipv6.bat 必須設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python310

REM for Webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin

REM 在 path 納入 %path_webots%
path=~~;%path_webots%;%path%;</pre>
<p><span style="background-color: #ffff00;">3.</span> pip install opencv-python</p>
<p>配置完成後, 測試 Python 是否設定正確: <a href="/downloads/Webots_examples.zip">Webots_examples.zip</a> (<a href="https://courses.ideate.cmu.edu/16-375/f2024">source</a>)</p>
<p><a href="/downloads/vrml97specification.pdf">vrml97specification.pdf</a> (<a href="http://www.graphics.stanford.edu/courses/cs248-98-fall/Assignments/Assignment3/VRML2_Specification/">VRML 2.0</a>, <a href="https://zh.wikipedia.org/zh-tw/VRML">VRML</a>)</p>
<p><a href="https://github.com/Introduction-to-Autonomous-Robots/Introduction-to-Autonomous-Robots">https://github.com/Introduction-to-Autonomous-Robots/Introduction-to-Autonomous-Robots</a></p>
<p>Webots 原始碼: <a href="https://github.com/cyberbotics/webots">https://github.com/cyberbotics/webots</a></p>
<p>官方網站: <a href="https://cyberbotics.com/">https://cyberbotics.com/</a></p>
<p><a href="https://webots.cloud/">https://webots.cloud/</a></p>
<p><a href="https://www.cyberbotics.com/doc/guide/samples-howto?version=cyberbotics:R2023b">https://www.cyberbotics.com/doc/guide/samples-howto?version=cyberbotics:R2023b</a></p>
<p><a href="https://www.cyberbotics.com/doc/guide/index.php?version=cyberbotics:R2019a">https://www.cyberbotics.com/doc/guide/index.php?version=cyberbotics:R2019a</a></p>
<p>License: <a href="https://cyberbotics.com/doc/guide/webots-license-agreement">https://cyberbotics.com/doc/guide/webots-license-agreement</a></p>
<p><a href="https://cyberbotics.com/doc/guide/web-interface">https://cyberbotics.com/doc/guide/web-interface</a> (無法使用 Firefox 觀看)</p>
<p><a href="https://cyberbotics.com/doc/guide/web-server">https://cyberbotics.com/doc/guide/web-server</a> (<a href="https://github.com/cyberbotics/webots-server">Github</a>)</p>
<p><a href="https://cyberbotics.com/doc/guide/web-streaming">https://cyberbotics.com/doc/guide/web-streaming</a> (<a href="https://cyberbotics.com/doc/guide/starting-webots#command-line-arguments">Command Line Arguments</a>) (無法使用 Firefox 觀看)</p>
<p style="padding-left: 30px;">webotsw --stream</p>
<p style="padding-left: 30px;">使用 Edge 連線到 http://localhost:1234/index.html</p>
<p><a href="https://cyberbotics.com/doc/guide/interfacing-webots-to-third-party-software-with-tcp-ip">https://cyberbotics.com/doc/guide/interfacing-webots-to-third-party-software-with-tcp-ip</a></p>
<p><a href="https://felipenmartins.github.io/Robotics-Simulation-Labs/">https://felipenmartins.github.io/Robotics-Simulation-Labs/</a></p>
<hr/>
<h4>Webots_ex</h4>
<p>Webots 最新版可直接從 <a href="https://github.com/cyberbotics/webots/releases">https://github.com/cyberbotics/webots/releases</a> 下載.</p>
<p>Stable version: <a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB)</p>
<p>使用授權: <a href="https://cyberbotics.com/doc/guide/webots-license-agreement">https://cyberbotics.com/doc/guide/webots-license-agreement</a></p>
<p>Webots Source Code<br/><br/>Webots is released under the terms of the Apache 2.0 license agreement. Apache 2.0 is a industry friendly, non-contaminating, permissive open source license that grants everyone the right to use a software source code, free of charge, <span style="background-color: #ffff00;">for any purpose, including commercial applications</span>.</p>
<p>Webots Sample Simulations</p>
<p>Webots sample simulations include world files, robot and object models, robot controllers, plugins, libraries, etc. Generally, all the sample simulations source files distributed with Webots have a license header referring to the Apache 2.0 license, except for a few robot and object assets (proto files) which are distributed under the terms of the open source Webots Assets license agreement and a few sample simulations which were contributed by users under various license agreements, mostly open source ones. In any case, the license agreement is explicitly included in the corresponding files and/or folders.</p>
<p>Webots 原始碼</p>
<p>Webots 是根據 Apache 2.0 授權協議發布的。Apache 2.0 是一個對產業友善、非強制衍生性的寬鬆開源授權，讓所有人都有權利免費使用軟體原始碼，<span style="background-color: #ffff00;">可用於任何目的，包括商業應用</span>。</p>
<p>Webots 範例模擬</p>
<p>Webots 範例模擬包含場景檔案、機器人和物件模型、機器人控制器、外掛程式、程式庫等。一般來說，所有隨 Webots 發布的範例模擬原始檔都有引用 Apache 2.0 授權的授權標頭，但有少數機器人和物件資產（proto 檔案）是根據開源的 Webots Assets 授權協議發布，還有一些由使用者貢獻的範例模擬則是根據各種授權協議發布，大多是開源授權。無論如何，相關授權協議都明確包含在對應的檔案和/或資料夾中。</p>
<hr/>
<p><a href="https://github.com/cyberbotics/webots/tree/released/resources/translations">https://github.com/cyberbotics/webots/tree/released/resources/translations</a> 中並沒有繁體中文翻譯, 但建議使用英文版即可.</p>
<p>自行編譯 Webots 導引: <a href="https://github.com/cyberbotics/webots/wiki">https://github.com/cyberbotics/webots/wiki</a></p>
<p>自行建立網際模擬伺服器導引: <a href="https://cyberbotics.com/doc/guide/web-server">https://cyberbotics.com/doc/guide/web-server</a></p>
<hr/>
<p>操作教學: <a href="https://cyberbotics.com/doc/guide/tutorials">https://cyberbotics.com/doc/guide/tutorials</a></p>
<p>導入 STL 模型: <a href="https://cyberbotics.com/doc/reference/mesh">https://cyberbotics.com/doc/reference/mesh</a></p>
<p>使用 C 執行控制: <a href="https://cyberbotics.com/doc/guide/using-c">https://cyberbotics.com/doc/guide/using-c</a></p>
<p>使用 Python 執行控制: <a href="https://cyberbotics.com/doc/guide/using-python">https://cyberbotics.com/doc/guide/using-python</a></p>
<hr/>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://felipenmartins.github.io/Robotics-Simulation-Labs/">https://felipenmartins.github.io/Robotics-Simulation-Labs/</a>　</p>
<p style="padding-left: 30px;"><a href="https://courses.ideate.cmu.edu/16-375/f2022/ref/text/resources/Webots.html">https://courses.ideate.cmu.edu/16-375/f2022/ref/text/resources/Webots.html</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ideate.cmu.edu/16-375/f2024/text/simulations/index.html">https://courses.ideate.cmu.edu/16-375/f2024/text/simulations/index.html</a></p>
<p style="padding-left: 30px;"><a href="https://www.bx.psu.edu/~thanh/naoqi/software/webots/webots_index.html">https://www.bx.psu.edu/~thanh/naoqi/software/webots/webots_index.html</a></p>
<p style="padding-left: 30px;"><a href="https://uclalemur.com/">https://uclalemur.com/</a></p>
<p style="padding-left: 30px;"><a href="https://www.cs.csubak.edu/~wli/Wei_Li_Tch/CS_456/456_LAB/Guide.pdf">https://www.cs.csubak.edu/~wli/Wei_Li_Tch/CS_456/456_LAB/Guide.pdf</a> </p>
<p style="padding-left: 30px;"><a href="https://www.udemy.com/course/learn-mobile-robotics-with-webots">https://www.udemy.com/course/learn-mobile-robotics-with-webots</a></p>
<p style="padding-left: 30px;"><a href="https://robmosys.eu/">https://robmosys.eu/</a></p>
<p style="padding-left: 30px;"><a href="https://opendr.eu/robotic-simulations-on-the-web-education-dissemination-and-competition-organization/">https://opendr.eu/robotic-simulations-on-the-web-education-dissemination-and-competition-organization/</a></p>
<p style="padding-left: 30px;"><a href="https://www.innovationplace.eu/project/open-source-3d-robot-simulator-with-web-interface-helps-industries-to-implement-digital-twin-models/2957">https://www.innovationplace.eu/project/open-source-3d-robot-simulator-with-web-interface-helps-industries-to-implement-digital-twin-models/2957</a></p>
<p style="padding-left: 60px;">A Swiss company developed a realistic robot simulator which can be used to simulate various digital twin scenarios involving mobile robots, robotics arms, drones, autonomous vehicles, industrial processes, etc. Sensors and actuators can be modeled, such as cameras, lidars, laser range-finder, etc. Robots are controlled by intelligent programs processing sensor data with AI algorithms. The software is fully open-source, runs on the desktop and features a cloud-based 3D web interface.</p>
<p style="padding-left: 60px;">這家瑞士公司開發了一款逼真的機器人模擬器，可用於模擬包括移動機器人、機械手臂、無人機、自動駕駛車輛、工業製程等各種數位分身的情境。此模擬器可以模擬各種感測器和致動器，例如攝影機、光達、雷射測距儀等。機器人由智慧程式控制，透過人工智慧演算法處理感測器數據。這款軟體完全開源，可在桌面電腦上執行，並提供基於雲端的 3D 網頁介面。</p>
<p style="padding-left: 60px;">這家中小企業開發的 Webots 軟體是一款開源且跨平台的桌面應用程式，用於模擬機器人。它提供完整的開發環境，可用於建模、程式設計和模擬機器人。該軟體專為專業用途設計，在工業、教育和研究領域被廣泛使用。自 1998 年以來，這家中小企業持續將 Webots 作為其主要產品進行維護。該軟體最初是在瑞士洛桑聯邦理工學院（EPFL）開發的。</p>
<p style="padding-left: 60px;">Webots 可用於建立機器人原型、開發、測試和驗證人工智慧和控制演算法、教授學生機器人學等。使用者可以利用豐富的 Webots 資產庫（包含機器人、感測器、致動器、物件和材質）輕鬆設計完整的機器人模擬。軟體支援匯入現有的 CAD 模型（來自 Blender 或通用機器人描述格式 URDF）以及 OpenStreetMap 地圖。現代化的圖形使用者介面讓使用者可以編輯他們的模擬和機器人控制器，節省機器人專案開發時間。</p>
<p style="padding-left: 60px;">使用者可以建立各種類型的模擬，包括雙輪桌面機器人、工業機械臂、雙足機器人、多足機器人、模組化機器人、汽車、飛行無人機、水下自主載具、履帶式機器人、航太載具等。他們可以設置室內或室外的互動環境。這些數位分身模型可用於建立對應實體系統的虛擬原型，並在模擬中測試各種改進。如果模擬中測試的改進顯示出效益，就可以實作到實體系統中。數位分身原型方法提供多項優勢，包括更好的系統功能溝通、更快速且更經濟的系統改進探索，以及包含持續整合的更有效率開發工作流程。</p>
<p style="padding-left: 60px;">Webots 的核心是基於現代圖形使用者介面（基於 Qt 函式庫）、物理引擎（基於開放動力學引擎 ODE 的分支版本）和基於 OpenGL 3.3 函式庫的 3D 渲染引擎的組合。它可在 Windows、Linux 和 macOS 上執行。Webots 模擬可匯出為影片、互動式 HTML 場景或動畫，甚至可以 3D 形式串流至網頁。機器人可以使用簡單的 API 以不同程式語言進行程式設計，如 C、C++、Python、Java、MATLAB 或 ROS，涵蓋所有基本的機器人需求。Webots 提供網頁介面（展示於 https://webots.cloud），可在雲端執行模擬、播放 3D 動畫，以及展示場景和物件。</p>
<p style="padding-left: 60px;">透過這家中小企業開發的工具，使用者可以：</p>
<p style="padding-left: 60px;">1. 受惠於高品質的免費開源技術來模擬機器人系統。</p>
<p style="padding-left: 60px;">2. 輕鬆將模擬、3D 動畫和 3D 模型匯出至網頁，以便與同事、合作夥伴、客戶和大眾分享。</p>
<p style="padding-left: 60px;">3. 受惠於這家瑞士中小企業的專業知識，該企業積極支援 Webots 軟體，並為客戶提供顧問諮詢和客製化開發服務。</p>
<p style="padding-left: 60px;">4. 善用 Webots 使用者社群的貢獻，社群會分享機器人、感測器、致動器、物件、環境、基準測試、控制器程式等模型。</p>
<p style="padding-left: 60px;">5. 可以透過 https://webots.cloud/competition 輕鬆舉辦機器人挑戰賽和程式設計競賽。</p>
<h3>Webots_ref</h3>
<p><a href="https://www.cyberbotics.com/doc/reference/node-chart?version=cyberbotics:R2023b">https://www.cyberbotics.com/doc/reference/node-chart?version=cyberbotics:R2023b</a></p>
<p><a href="https://www.youtube.com/watch?v=luyg3plGujg&amp;list=PLbEU0vp_OQkUwANRMUOM00SXybYQ4TXNF">Tutorial Video 1</a></p>
<p><a href="https://www.youtube.com/watch?v=2CWHfbuEbAY&amp;list=PLt69C9MnPchlWEV5AEhfT2HajlE2SJ55V">Tutorial Video 2</a></p>
<p><a href="https://robotics.stackexchange.com/search?q=webots">https://robotics.stackexchange.com/search?q=webots</a></p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots</a></p>
<p><a href="https://cyberbotics.com/doc/guide/sample-webots-applications">https://cyberbotics.com/doc/guide/sample-webots-applications</a></p>
<p><a href="https://webots.cloud/competition">https://webots.cloud/competition</a></p>
<p><a href="https://felipenmartins.github.io/Robotics-Simulation-Labs/">https://felipenmartins.github.io/Robotics-Simulation-Labs/</a></p>
<p><a href="https://www.instructables.com/Vacuum-Cleaner-Robot-in-Webots/">https://www.instructables.com/Vacuum-Cleaner-Robot-in-Webots/</a></p>
<p><a href="https://medium.com/@albert.brucelee/introduction-to-webots-robot-simulator-and-e-puck-robot-8a2e2b5d22a9">https://medium.com/@albert.brucelee/introduction-to-webots-robot-simulator-and-e-puck-robot-8a2e2b5d22a9</a></p>
<p><a href="https://ardupilot.org/dev/docs/sitl-with-webots.html">https://ardupilot.org/dev/docs/sitl-with-webots.html</a></p>
<p><a href="https://www.cyberbotics.com/doc/guide/tinkerbots?version=R2019a">https://www.cyberbotics.com/doc/guide/tinkerbots?version=R2019a</a></p>
<p><a href="https://www.cyberbotics.com/doc/discord/technical-questions?version=master">https://www.cyberbotics.com/doc/discord/technical-questions?version=master</a></p>
<p><a href="https://www.cyberbotics.com/doc/discord/development?version=master">https://www.cyberbotics.com/doc/discord/development?version=master</a></p>
<p><a href="https://youtu.be/gyAVOrX_IMk?si=MZQ8uQg1Ns1UxdCb">https://youtu.be/gyAVOrX_IMk?si=MZQ8uQg1Ns1UxdCb</a></p>
<p><a href="https://www.youtube.com/watch?v=bfsJFwryga4">https://www.youtube.com/watch?v=bfsJFwryga4</a></p>
<h3>Webots_doc</h3>
<p>Examples: <a href="https://courses.ideate.cmu.edu/16-375/f2024/text/simulations/index.html">https://courses.ideate.cmu.edu/16-375/f2024/text/simulations/index.html</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Webots_examples.7z">Webots_examples.7z</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@roboticsforcreativepractic9459/videos">Video</a></p>
<p><a href="https://www.cyberbotics.com/doc/guide/samples-howto">Samples</a></p>
<p><a href="https://cyberbotics.com/doc/reference/group">Group</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/pose">Pose</a> (translation and rotation)</p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/transform">Transform</a> (scale)</p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/shape">Shape</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/cadshape">CadShape</a> (url of obj)</p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/solid">Solid</a></p>
<p style="padding-left: 60px;"><a href="https://cyberbotics.com/doc/reference/robot">Robot</a> (controller, <a href="https://cyberbotics.com/doc/guide/controller-programming">controller programming</a>)</p>
<p style="padding-left: 30px;"></p>
<p></p>
<h2>Solvespace</h2>
<p>Web-based Solvespace: <a href="https://cad.apps.dgramop.xyz/">https://cad.apps.dgramop.xyz/</a> (<a href="https://solvespace.com/forum.pl?action=viewthread&amp;parent=2369&amp;tt=1718121481">source</a> and <a href="https://github.com/solvespace/solvespace/pull/1275">PR</a>)</p>
<p><a href="https://github.com/solvespace/solvespace/pull/493">Python related PR</a></p>
<p>在 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a><span> 加入以下說明的 msys2 與 cmake 後, 可用來編譯 Solvespace v3.1 版原始碼的可攜套件 <a href="http://229.cycu.org/python_2025_lite_w_msys_cmake_solvespace.7z">python_2025_lite_w_msys_cmake_solvespace.7z</a> (Download 1.96GB, After extracted 3.7GB)</span></p>
<hr/>
<p>Solvespace 採 C++ 編寫, 原始碼位於 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a>, 以下將採用可攜程式系統 python_2025 中的 msys2 (<a href="http://229.cycu.org/python_2025/data/msys64_20240507.7z">msys64_20240507.7z</a>) 以及 cmake 3.20.1 進行編譯 (若採用目前最新版的 cmake 3.30.2, 必須對 Solvespace v3.1 中的 CMakeLists.txt 進行修改).</p>
<p>舊版的 cmake 3.21.0 可以利用下列連結取得:</p>
<p><a href="https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-windows-x86_64.zip">https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-windows-x86_64.zip</a> </p>
<p><a href="http://229.cycu.org/python_2025/data/msys64_20240507.7z">msys64_20240507.7z</a> (下載到 data 目錄下後, 目錄名稱必須改為 msys64) 則必須安裝 mingw32-make:</p>
<p>(安裝以下 make 套件前, 必須先執行 msys64 中的 mingw64.exe)</p>
<p>pacman -S mingw-w64-ucrt-x86_64-make</p>
<p>最新版的 python_2025 可攜程式環境架構位於: <a href="https://github.com/mdecycu/pyhton_2025">https://github.com/mdecycu/pyhton_2025</a>, 各目錄套件可自行根據 <a href="https://mde.tw/cad2024/content/Python.html">https://mde.tw/cad2024/content/Python.html</a> 中的說明下載, 或者自行配置.</p>
<p>機械設計工程師採用可攜程式套件的原因, 是希望能彈性配置 Python 版本, 因為大多數主流 CAD/E/M 套件都非開源軟體, 各版本的 API 相關的動態連結程式庫, 都採用特定的 Python 版本程式碼編譯而成. 例如: Siemens NX12 採用 Python 3.6.5, NX1872 採用 Python 3.7.1, NX1980 採用 Python 3.8.8, NX2312 使用 Python 3.10.12. 假如採用可攜程式套件, 除了可以如虛擬 Python 環境一樣, 將能配合 NXOpen 程式開發, 將所需的 Python 版本與相關模組放在同一目錄, 且能夠在不同的 64 位元 Windows 操作系統中執行.</p>
<p>接著取得 Solvespace v3.1 的原始碼, 可以直接從 <a href="https://github.com/solvespace/solvespace/releases">https://github.com/solvespace/solvespace/releases</a> 取得, 或以 以 git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> 之後,</p>
<p>cd solvespace</p>
<p>git checkout v3.1</p>
<p>接下來則必須修改 solvespace\extlib\angle\src\libANGLE\HandleAllocator.cpp 加入標頭檔案:</p>
<p>#include &lt;limits&gt;</p>
<p>接著就可以進行程式碼的編譯與連結:</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p>完成編譯後, solvespace.exe 即位於 build\bin 目錄中, 執行時則需要 libwinpthread-1.dll 動態連結程式庫.</p>
<p>進行上述流程編譯的原始碼 <a href="http://229.cycu.org/solvespace_v3.1_src.7z">solvespace_v3.1_src.7z</a>, 以及編譯完成的 <a href="http://229.cycu.org/solvespace_v3.1_msys2.7z">solvespace_v3.1_msys2.7z</a>.</p>
<h3>Learn_Solvs</h3>
<p><a href="https://youtu.be/IlY1YFid8HA?si=bbryzq7P-Z_vR9Rc">https://youtu.be/IlY1YFid8HA?si=bbryzq7P-Z_vR9Rc</a></p>
<p><a href="https://chromamine.com/2024/07/3d-cad-with-solvespace/">https://chromamine.com/2024/07/3d-cad-with-solvespace/</a></p>
<p><a href="https://www.youtube.com/watch?v=xAqSddiK5MQ&amp;list=PLWNz5TggYhO1mMihPAIPvozJkNN828FaI">https://thenybble.de/posts/solvespace-mini-tutorial/ </a></p>
<p><a href="https://www.youtube.com/watch?v=xAqSddiK5MQ&amp;list=PLWNz5TggYhO1mMihPAIPvozJkNN828FaI">Solvespace Tutorial</a></p>
<p><a href="https://www.youtube.com/watch?v=ckkGfngoSaE&amp;list=PLGAjLwYQPgaBafzQTLA84IkTOptOdIsUX">Solvespace Challenge</a> (<a href="https://www.youtube.com/watch?v=PwBSwkW3oPo&amp;list=PLluslK6uBf4sUY_SgOZhBTb_5Vs-XMHZ6">2</a>)</p>
<h2>Pyslvs-UI</h2>
<p><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p>
<p><a href="https://github.com/KmolYuan/pyslvs">https://github.com/KmolYuan/pyslvs</a> (A no-GUI module of mechanism synthesis system and a 2D geometric constraint solver)</p>
<p>開發 Pyslvs-UI: <a href="https://github.com/mdecycu/Pyslvs-UI">https://github.com/mdecycu/Pyslvs-UI</a></p>
<p>使用 Leo Editor:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''Recursively import all python files in a directory and clean the result.'''
# ctrl + b to execute
 
c.recursiveImport(
    dir_ = r'./',
    kind = '@clean', # The new best practice.
    safe_at_file = False,
    theTypes = ['.py']
)</pre>
<p>相關 AI 套件: <a href="https://github.com/mdecycu/LInK">https://github.com/mdecycu/LInK</a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/pdf/2405.20592">https://arxiv.org/pdf/2405.20592</a> (LInK: Learning Joint Representations of Design and Performance Spaces through Contrastive Learning for Mechanism Synthesis)</p>
<p style="padding-left: 30px;"><a href="/downloads/pytorch_ex1.py">pytorch_ex1.py</a></p>
<h2>PICSimLab</h2>
<p><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a></p>
<h2>Fossil SCM</h2>
<p><a href="https://fossil-scm.org">https://fossil-scm.org</a></p>
<p><object data="/images/fossil.svg" height="593" type="image/svg+xml" width="1285"></object></p>
<p><a href="https://mdecycu.github.io/mind-map/#/?fileURL=https://mde.tw/cd2025/downloads/fossil.smm">Edit fossil.smm</a></p><h2>Leo Editor</h2>
<p><a href="https://leo-editor.github.io">https://leo-editor.github.io</a></p>
<p>Leo Editor 是一個大綱編輯器, 單一節點資料可以透過 clone 放入多個其他節點資料中.</p>
<p>可以利用 <a href="https://leo-editor.github.io/leo-editor/directives.html#clean-path">@clean</a> 節點指令可結合 <a href="https://leo-editor.github.io/leo-editor/directives.html#part-2-all-and-others">@others</a> 與指定的檔案內容同步.</p>
<p>利用 <a href="https://leo-editor.github.io/leo-editor/directives.html#path-path">@path</a> 指定目錄.</p>
<p>ctrl + i : insert</p>
<p>ctrl + r : move right</p>
<p>ctrl + l : move left</p>
<p>ctrl + u : move up</p>
<p>ctrl + d : move down</p>
<p>The execute-script command pre-defines three names: c, g, and p. c is the commander of the outline in which the script executes. g is the leo.core.leoGlobals module, containing dozens of useful functions and classes. p is the position of the presently selected node.</p>
<p>g.es() 透過 leo.core.leoGlobals g 中的 echo string 方法列印資料.</p>
<p>遞迴導入程式碼:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">c.recursiveImport(
    dir_ = 'path to file or directory',
    kind = '@clean',        # or '@file' or '@auto'
    safe_at_file = False,   # True: generate @@clean nodes.
    theTypes = None,        # Same as ['.py']
)</pre>
<p></p>
<h2>uv</h2>
<p>uv 是一個由 <a href="https://astral.sh/">Astral</a> 團隊 (<a href="https://www.crmarsh.com/">Founder</a>) 開發的現代 Python 工具，旨在提供更快、更簡單的工作流程，取代傳統的 pip、virtualenv 和 poetry 等工具。以下將全面介紹其核心功能、高級用法及使用場景。</p>
<p>使用 uv python list 可以列出能夠下載使用的 Python 版本:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Y:\&gt;uv python list
cpython-3.14.0a5+freethreaded-windows-x86_64-none    &lt;download available&gt;
cpython-3.14.0a5-windows-x86_64-none                 &lt;download available&gt;
cpython-3.13.2+freethreaded-windows-x86_64-none      &lt;download available&gt;
cpython-3.13.2-windows-x86_64-none                   y:\Python313\python.exe
cpython-3.13.2-windows-x86_64-none                   &lt;download available&gt;
cpython-3.12.9-windows-x86_64-none                   &lt;download available&gt;
cpython-3.11.11-windows-x86_64-none                  &lt;download available&gt;
cpython-3.10.16-windows-x86_64-none                  &lt;download available&gt;
cpython-3.9.21-windows-x86_64-none                   &lt;download available&gt;
cpython-3.8.20-windows-x86_64-none                   &lt;download available&gt;
cpython-3.7.9-windows-x86_64-none                    &lt;download available&gt;
pypy-3.11.11-windows-x86_64-none                     &lt;download available&gt;
pypy-3.10.16-windows-x86_64-none                     &lt;download available&gt;
pypy-3.9.19-windows-x86_64-none                      &lt;download available&gt;
pypy-3.8.16-windows-x86_64-none                      &lt;download available&gt;
pypy-3.7.13-windows-x86_64-none                      &lt;download available&gt;</pre>
<p>確認可用的 Python 版本後, 可以透過 <a href="https://mde.tw/cd2025/content/Portable.html">Portable</a> 頁面中的流程自行建立可攜 Python 程式套件.</p>
<p>接下來應該要探討 uv 在可攜程式環境中的應用.</p><h2>Old</h2>
<p>以下連結僅能在系統主幹的網路 IPv6 協定下擷取:</p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2019/content/sitemap.html">cd2019</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/vrml97specification.pdf">vrml97specification.pdf</a> (1997)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/vrml_primer_tutorial.pdf">vrml_primer_tutorial.pdf</a> (1998)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2002_guide.pdf">WeBots_2002_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Aibo and Webots_Simulation, wireless remote control and controller transfer.pdf">Aibo and Webots_Simulation, wireless remote control and controller transfer.pdf</a> (2006)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Design and Assessment of a Robot Curriculum based on the E-puck Robot and Webots.pdf">Design and Assessment of a Robot Curriculum based on the E-puck Robot and Webots.pdf</a> (2009)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Cyberbotics Robot Curriculum.pdf">Cyberbotics Robot Curriculum.pdf</a> (2010)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/webots_2010_ex1.pdf">webots_2010_ex1.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2011_guide.pdf">Webots_2011_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2012_guide.pdf">Webots_2012_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Improving support for e-puck robot in Webots mobile robots simulation software.pdf">Improving support for e-puck robot in Webots mobile robots simulation software.pdf </a>(2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Development of Microphone and Speaker models in Webots using OpenAL.pdf">Development of Microphone and Speaker models in Webots using OpenAL.pdf</a> (2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Interfacing an Android-based phone-robot with Webots.pdf">Interfacing an Android-based phone-robot with Webots.pdf</a> (2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Mobile Robot modeling, Simulation and Programming.pdf">Mobile Robot modeling, Simulation and Programming.pdf</a> (2013)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Mobile Robot modeling Simulating and Programming_New ASIMO.pdf">Mobile Robot modeling Simulating and Programming_New ASIMO.pdf</a> (2014)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/ROS interface and URDF parser for Webots.pdf">ROS interface and URDF parser for Webots.pdf</a> (2014)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2014_guide.pdf">Webots_2014_guide.pdf</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2020/content/sitemap.html">cd2020</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2021/">cd2021</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2022_guide/content/sitemap.html">cd2022</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2023/content/sitemap.html">cd2023</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2024/content/sitemap.html">cd2024</a></p>
<p></p><h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p></p>