<h1>About</h1>
<p>課程倉儲與網頁:</p>
<p style="padding-left: 30px;">倉儲: <a href="https://github.com/mdecycu/cd2025">https://github.com/mdecycu/cd2025</a></p>
<p style="padding-left: 30px;">網頁: <a href="https://mde.tw/cd2025">https://mde.tw/cd2025</a></p>
<p>課程目標:</p>
<p style="padding-left: 30px;">透過機電系統模擬與控制了解協同產品設計的特性與應用</p>
<p>教學內容:</p>
<p style="padding-left: 30px;">協同產品設計概論</p>
<p style="padding-left: 30px;">機電系統模擬</p>
<p style="padding-left: 30px;">協同分組專案</p>
<p style="padding-left: 30px;">協同分組報告</p>
<p>USB 隨身碟:</p>
<p style="padding-left: 30px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 30px;"><span>備註: </span><span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 30px;">備註: 已知 Webots 2025a 有不少 bugs, 其中包括操作過程閃退以及無法使用 Transform 節點, 因此可以換為 <a href="http://229.cycu.org/Webots_2023b.7z">Webots_2023b.7z</a> 版.</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<p><span>學員作業網站樣板: <a href="https://mde.tw/cd2025_hw">https://mde.tw/cd2025_hw</a> </span></p>
<p><span>學員作業範例: <a href="https://mdecd2025.github.io/hw-scrum-1">https://mdecd2025.github.io/hw-scrum-1</a> <br/></span></p>
<p><span>已知 w4 之前的學員作業倉儲版本, 無法在 IPv6 位址設定時正確運作, 各學員必須下載 <a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>, 解開壓縮檔案後, 替換倉儲中的 cmsimde 目錄.</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 60px;">HW1 (5%): 建立由 Box 組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 60px;">HW2 (5%): 建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 60px;">HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 60px;">Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 60px;">Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p style="padding-left: 60px;">Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p style="padding-left: 60px;">題目: Webots 動態投籃模擬系統的協同設計</p>
<p></p>
<hr/>
<p>行事曆</p>
<p>2a 上課時段: 每週五下午 13:20 - 17:10 (w2(228)、w7(春假)、w15(端午) 放假)</p>
<p>2b 上課時段: 每週二上午 08:10 - 12:00</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei"> 全頁檢視 </a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Summary</h2>
<p><object data="/images/cd2025.svg" height="1395" type="image/svg+xml" width="1534"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Fcd2025.smm">Edit cd2025.smm</a></p>
<h3>Tasks</h3>
<p>截至目前已知:</p>
<p style="padding-left: 30px;">1. 最新的可攜程式系統與套件版本:</p>
<p style="padding-left: 60px;"><a href="http://229.cycu.org/portable_wcm2025_w10.7z">portable_wcm2025_w10.7z</a></p>
<p style="padding-left: 30px;">2. 已知如何自行建立各種版本的 Python 可攜系統:</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/content/Portable.html">https://mde.tw/cd2025/content/Portable.html</a> </p>
<p style="padding-left: 30px;">3. 已知哪一個版本 SciTE 較為穩定:</p>
<p style="padding-left: 60px;"><span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p style="padding-left: 30px;">4. 已知如何使用 Codespaces 管理個人與協同分組的倉儲:</p>
<p style="padding-left: 60px;">./init_replit (處理 codespaces 上的 python 模組, 令其可執行 python main.py 與 python main2.py)</p>
<p style="padding-left: 30px;">5. 已知可以透過 token 或 Github session 管理管理個人與協同分組的倉儲:</p>
<p style="padding-left: 60px;">.git/config 中 url 將 token 放入即可取得權限 (透過 https)</p>
<p style="padding-left: 60px;">利用 puttygen.exe 建立 keys, 然後以 session 取得維護倉儲的權限.</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/content/SSH.html">https://mde.tw/cd2025/content/SSH.html</a> </p>
<p style="padding-left: 30px;">6. 已知哪一個版本的 Webots 較為穩定:</p>
<p style="padding-left: 60px;"><span>備註: 已知 Webots 2025a 有不少 bugs, 其中包括操作過程閃退以及無法使用 Transform 節點, 因此可以換為 </span><a href="http://229.cycu.org/Webots_2023b.7z">Webots_2023b.7z</a><span><span> </span>版.</span></p>
<p style="padding-left: 30px;">7. 已知如何更新個人與協同分組的倉儲, 以便套用所分配的 <a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>啟動網際協同流程:</p>
<p style="padding-left: 60px;"><span>已知 w4 之前的學員作業倉儲版本, 無法在 IPv6 位址設定時正確運作, 各學員必須下載 </span><a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a><span>, 解開壓縮檔案後, 替換倉儲中的 cmsimde 目錄.</span></p>
<p style="padding-left: 60px;"><span>更改 init.py 中將 ip 設為所分配的 <a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 address</a>.</span></p>
<p style="padding-left: 30px;">8. 已知投籃機的零組件可以透過 Solvespace 與 Onshape 繪製, 其中前者簡便而後者有利於協同.</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a> (joint4 設於 base 然後利用 SolidReference 指向 link3)</p>
<p style="padding-left: 30px;">9. 已知如何利用 Solid - Shape - Box 或 Solid - CadShape 建立封閉式多連桿機構模擬, (若希望直接更改零組件顏色, 則可以使用 Solid - Shape - Mesh 進行多連桿機構進行組立:</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/fourbar_box.7z">fourbar_box.7z</a> (joint4 設於 base 右端, 然後利用 SolidReference 指向 link3)</p>
<p style="padding-left: 60px;">以下為控制程式的詳細說明:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從 Webots 的 controller 模組中匯入 Robot 類別
from controller import Robot

def run_robot():
    # 建立 Robot 實例
    # 這會初始化機器人並提供存取其設備和模擬相關功能的能力
    robot = Robot()

    # 獲取模擬的基本時間步長
    # 這會取得模擬的基本時間步長（以毫秒為單位），定義模擬更新的時間間隔。
    # 並且將它轉換為整數以供後續使用
    timestep = int(robot.getBasicTimeStep())

    # 獲取馬達設備
    # 這會取得名為 'motor' 的馬達設備的參考，該名稱必須與機器人配置中的設備名稱一致
    motor = robot.getDevice('motor')

    # 設定馬達為連續旋轉模式
    # `setPosition(float('inf'))` 將馬達的目標位置設為無限大，使其能以連續旋轉模式運行。
    # 這通常用於速度控制模式的馬達
    motor.setPosition(float('inf'))

    # 設定馬達的速度
    # `setVelocity(1.0)` 將馬達的速度設為 1.0 弧度/秒，可以調整此值來改變馬達的速度
    motor.setVelocity(1.0)

    # 主控制迴圈
    # 此迴圈在模擬啟動時持續執行。`robot.step(timestep)` 會讓模擬推進一個時間步長。
    # 當模擬結束時，它會返回 -1。
    while robot.step(timestep) != -1:
        pass  # 此處未執行其他操作，但可以在此加入機器人的行為邏輯

# 程式的進入點
# `if __name__ == "__main__":` 確保此腳本僅在直接執行時運行，而非被匯入為模組時。
if __name__ == "__main__":
    run_robot()</pre>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/fourbar_box_w8.7z">fourbar_box_w8.7z</a> (joint4 設於 link3 末端, 然後利用 SolidReference 指向 static_environment)</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/w10_2b_hw1_hw2_demo.7z">w10_2b_hw1_hw2_demo.7z</a> (直接使用 Solid - Shape - Mesh 比較方便直接利用 material 設定零件顏色)</p>
<p style="padding-left: 30px;">10. 已知可以透過 Solid - Shape - Mesh 中 material 的名稱, 以控制器程式改變顏色, 進而製作出七段顯示模擬器:</p>
<p style="padding-left: 60px;"><span> </span><a href="https://mde.tw/cd2025/downloads/7_segment_display.7z">7_segment_display.7z</a> (利用按鍵改變零件顏色)</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/score_counter.7z">score_counter.7z</a> (三個位數的 7 段顯示器模擬)</p>
<p style="padding-left: 30px;">11. 已知可以透過 boundingObject 中的 Mesh 設定, 讓封閉連桿執行投籃動作, 且經由紅外線距離感測紀錄是否得分:</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/downloads/basketball_game_demo.7z">basketball_game_demo.7z</a></p>
<p style="padding-left: 30px;">12. 接下來若要利用各組員所分配的 <a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>配置一台具備 https 連線用的網際協同伺服器, 建議使用 Virtualbox 或 <a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion">VMWare Workstation</a> 加上 Nginx, Stunnel 或直接採 cmsimde 進行設定.</p>
<p style="padding-left: 60px;"><a href="http://229.cycu.org/win10.vdi">win10.vdi</a> (Virtualbox 的 Windows 10 虛擬主機檔案)</p>
<p style="padding-left: 60px;">利用 <a href="http://229.cycu.org/certbot.7z">certbot.7z</a> 取得與符號名稱對應的 privkey.pem 以及 fullchain.pem</p>
<p style="padding-left: 90px;">安裝 certbot 之後, 在管理者命令列視窗中執行 <span style="background-color: #ccffcc;">certbot certonly --standalone</span> 給定符號名稱後, 可以取得 privkey.pem 與 fullchain.pem, 改名為 key.pem 與 cert.pem 後放入倉儲根目錄取代原有的 *.pem (可以將原 self-signed certificates 改名). 之後再啟動 cms 即可使用 <a href="https://a**.mde.nfu.edu.twport">https://a**.mde.nfu.edu.tw:port</a> 或 <a href="https://b**.mde.nfu.edu.twport">https://b**.mde.nfu.edu.tw:port</a> 連線.</p>
<p style="padding-left: 30px;">13. 投籃機與籃框的移動裝置則可採用 <a href="https://www.cyberbotics.com/doc/guide/youbot?version=cyberbotics:R2019a-rev1#!">Kuka 套件項下</a>的 <a href="https://mde.tw/cd2025/content/Youbot_cart.html">Youbot</a> <a href="https://en.wikipedia.org/wiki/Mecanum_wheel">Mecanum</a> 輪底座.</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cd2025/content/Youbot_cart.html">https://mde.tw/cd2025/content/Youbot_cart.html</a> </p>
<p style="padding-left: 60px;"><a href="/downloads/youbot_cart_w10.7z">youbot_cart_w10.7z</a> (利用鍵盤方向鍵控制平台行進)</p>
<p style="padding-left: 60px;">在平台上加入 Box 與外部繪製零件: <a href="/downloads/youbot_cart_w12.7z">youbot_cart_w12.7z</a></p>
<p style="padding-left: 30px;">14. (參考) 對於 webotsw --stream 在近端啟動伺服器的部分尚未完成, 目前僅能透過官方網站擷取 Webotsview.js, 具體問題在於 webots 串流伺服器啟動後, 不接受跨網域擷取 Webotsview.js, 亦即必須處理伺服器間的 Access-Control-Allow-Origin（CORS）議題. 自行 <a href="https://github.com/cyberbotics/webots/wiki/Windows-installation/">build webotsw.exe</a> 應該就可以克服此一問題.</p>
<p style="padding-left: 30px;">15. (參考) 另外 Webots stream server 目前僅接受多 client 檢視, 而不支援跨 server 執行 controller 指令, 若要在系統模擬架構下進行多人同步協同 (類似 CoppeliaSim 的串流控制), 則必須自行處理.</p>
<p style="padding-left: 30px;">16. <a href="/downloads/hw1_w11.7z">hw1_w11.7z</a> (將 hw1 的 box 連桿設為透明, 位置疊上 solvespace 所繪製的零件)</p>
<hr/>
<p>針對上面 task 15. 可以透過 Websocket 建立一個伺服器, 然後有配合協同的另外一台電腦啟動 client 程式, 利用鍵盤方向鍵進行控制, 此時必須將 cart 的 controller 設為 extern.</p>
<p>執行之前必須將 server 與 client 程式改用各自所分配的 IPv6 網路位址:</p>
<p><a href="/downloads/youbot_cart_w10_websocket.7z">youbot_cart_w10_websocket.7z</a> (執行後, server 與 client 都可以利用方向鍵控制 cart)</p>
<p>備註: 上列模擬場景, 若在同一台電腦上可以利用 <a href="http://229.cycu.org/win10.vdi">win10.vdi</a><span><span> </span>(Virtualbox 的 Windows 10 虛擬主機檔案) 設定各自所分配的 <a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>進行測試. 也可以在同組組員之間進行測試.</span></p>
<p><span>執行之前, 必須將 Webots 內建的動態連結程式庫納入可攜 Python: set PYTHONPATH=%Disk%:\Python313\DLLs;%Disk%:\Python313\Lib;%Disk%:\Python313\Lib\site-packages;%Disk%:\NX\NXBIN\python;%Disk%:\Webots_2023b\msys64\mingw64\bin;%Disk%:\Webots_2023b\lib\controller\python;</span></p>
<p><span>啟動順序: 先 Run simulation, 執行 server, 然後再執行 client 後進行控制.</span></p>
<p><span>17. w13 利用 supervisor 模式, 希望當投球機投出球後, 無論得分與否, 只要投球機構回復原始投球姿態後, controller 將會自動在原球位置產生另一顆球, proof of concept 如 <a href="/downloads/w13_random_sphere.7z">w13_random_sphere.7z</a> 所示.</span></p>
<p><span>Robot 與 Supervisor 節點的結合應用: <a href="/downloads/basketball_game_w13.7z">basketball_game_w13.7z</a></span></p>
<hr/>
<p><a href="/downloads/w10_2b_hw1_hw2_demo.7z">w10_2b_hw1_hw2_demo.7z</a></p>
<p>以下模擬將 joint4 定在 link3 末端, 然後透過 SolidReference 指定為 &lt;static environment&gt;, 表示此 joint4 必須固定在地面.</p>
<p>與 <a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a> 在引用 obj 格式零件上的差異在於: 使用 Solid - Shape - Mesh 節點導入的 CAD 繪製零件, 無需如 Solid - CadShape 必須透過 .mtl 修改導入零件的顏色, Shape 節點可以直接置入 Material 欄位, 透過 diffuseColor 改變零件顏色.</p>
<p><img alt="" height="326" src="/images/w10_2b_joint4_on_link3.png" width="400"/></p>
<p>有關 CadShape:</p>
<p>The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/cadshape#cadshape">CadShape</a> node renders a Collada (.dae) or Wavefront (.obj) object imported from an external file. <span style="background-color: #ccffcc;">Both Collada and Wavefront files can include 3D geometries and appearances, be it materials or references to external textures, therefore the <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/cadshape#cadshape" style="background-color: #ccffcc;">CadShape</a> node builds both</span>. If the file references external textures, these should be placed relative to the collada/wavefront file itself as indicated (i.e., in the location expressed within the .dae/.obj file), no additional search is performed for these textures.</p>
<p>假如希望導入的零件使用外部的材質檔案進行調控, 可以使用 CadShape 節點, 以 .dae 或 .obj 導入.</p>
<p>有關 Mesh:</p>
<p>The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/mesh#mesh">Mesh</a> node represents a 3D shape imported from an external file created by a 3D modeling software. <span style="background-color: #ccffcc;">The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/mesh#mesh" style="background-color: #ccffcc;">Mesh</a> node can be used either as a graphical or as a collision detection primitive (in a boundingObject)</span>. Currently, the following formats are supported:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/COLLADA" target="_blank">Collada</a> files (.dae).</li>
<li><a href="https://en.wikipedia.org/wiki/STL_(file_format)" target="_blank">STL</a> files (.stl).</li>
<li><a href="https://wiki.fileformat.com/3d/obj" target="_blank">Wavefront</a> files (.obj).</li>
</ul>
<p>If the file contains more than one mesh, the meshes will be merged into a single one.</p>
<p>Mesh 可以接受 .dae、stl 或 .obj 檔案格式零件, 且可用於零件外形與碰撞檢測用 (CadShape 節點則只能用於零件外形展示, 而不能用於碰撞檢測).</p><h2>Product</h2>
<p>Product Development Process (產品開發過程)</p>
<p><img alt="" height="443" src="/images/product_development_process.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Fig. 1.2</a>)</p>
<p>Complex Product Assembly Process (複雜產品組立過程)</p>
<p><img alt="" height="236" src="/images/complex_product_assembly_process.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Fig. 1.4</a>)</p>
<p>Collaboration between Lifecycle Activities (生命週期活動間的協同)</p>
<p><img alt="" height="333" src="/images/collaboration_between_lifecycle_activities.png" width="400"/></p>
<p>(From <a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Table 2.1</a>)</p>
<p></p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-58898-3">Geometric Constraint Solving and Application</a> (1998) (<a href="http://229.cycu.org/1998_geometric_constraint_solving_and_applications.pdf">local download</a>)</p>
<p style="padding-left: 60px;">The Semantics of Geometric Constraints</p>
<p style="padding-left: 60px;">Constraints for Conceptual and Collaborative Design</p>
<p style="padding-left: 60px;">Constraint Representation and Solving Methods</p>
<p style="padding-left: 60px;">Constraints for Freeform Surfaces</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-3-642-60718-9">CAD Systems Development</a> (1997) (<a href="http://229.cycu.org/1997_cad_system_development.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6415-7">Core Blender Development</a> (2021) (<a href="http://229.cycu.org/2021_core_blender_development.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-981-19-9626-9">Collaborative Knowledge Management Through Product Lifecycle</a> (2023) (<a href="http://229.cycu.org/2023_collaborative_knowledge_management_through_product_lifecycle.pdf">local download</a>)</p><h2>Control</h2>
<p>以下為網際虛擬控制相關參考資料:</p>
<p><a href="https://github.com/mdecycu/opendr">https://github.com/mdecycu/opendr</a></p>
<p><a href="/downloads/OpenDR An Open Toolkit for Enabling High Performance, Low.pdf">OpenDR An Open Toolkit for Enabling High Performance, Low.pdf</a></p>
<p><a href="https://cordis.europa.eu/project/id/871449/reporting">https://cordis.europa.eu/project/id/871449/reporting</a> </p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/DqKBwGpRj_Y?si=_B2ul8i7hRx1_cO5" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://wokwi.com/">https://wokwi.com/</a></p>
<p><a href="https://docs.wokwi.com/">https://docs.wokwi.com/</a> </p>
<p><a href="https://wokwi.com/projects/375237011181407233">Wokwi, Arduino and Push Button</a></p>
<p><a href="https://wokwi.com/projects/298685457758159369">Wokwi, Arduino and Potentiometer</a></p>
<p><a href="https://wokwi.com/projects/394764949595110401">Wokwi, Arduino, Serial and Python</a></p>
<hr/>
<p><a href="https://wokwi.com/projects/320964045035274834">ESP32 Web server</a></p>
<p><a href="https://github.com/wokwi/wokwigw/releases">https://github.com/wokwi/wokwigw/releases</a> </p>
<p style="padding-left: 30px;"><a href="https://docs.wokwi.com/guides/esp32-wifi#the-private-gateway">https://docs.wokwi.com/guides/esp32-wifi#the-private-gateway</a> </p>
<p><a href="https://lcgamboa.github.io/picsimlab_docs/stable/OnlineSimulator.html">https://lcgamboa.github.io/picsimlab_docs/stable/OnlineSimulator.html</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a> </p>
<p><a href="https://link.springer.com/chapter/10.1007/978-3-030-82544-7_24">HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics</a> (2021)</p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/horosim">https://github.com/scrum-1/horosim</a></p><h2>CPS</h2>
<p>以下為虛實整合系統 (Cyber-Physical System) 相關參考資料:</p>
<p>Webots:</p>
<p style="padding-left: 30px;"><a href="https://www.cyberbotics.com">https://www.cyberbotics.com</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/cyberbotics/webots/discussions/2621">https://github.com/cyberbotics/webots/discussions/2621</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/aidudezzz/deepbots">https://github.com/aidudezzz/deepbots</a> (<a href="https://deepbots.readthedocs.io">https://deepbots.readthedocs.io</a>)</p>
<p style="padding-left: 30px;"><a href="https://cad2.cycu.org/~yen/cad2023/content/PICSimLab.html">https://cad2.cycu.org/~yen/cad2023/content/PICSimLab.html</a></p>
<h4>Pinball</h4>
<p style="padding-left: 30px;"><a href="/downloads/pinball.7z">pinball.7z</a></p>
<p style="padding-left: 30px;"><a href="https://pinball.flutter.dev">https://pinball.flutter.dev</a> (<a href="https://github.com/flutter/pinball">https://github.com/flutter/pinball</a>, <a href="https://flutter.dev">https://flutter.dev</a>)</p>
<h4>Foosball</h4>
<p style="padding-left: 30px;"><a href="/downloads/cad2024_foosball_with_ball_python_script.7z">cad2024_foosball_with_ball_python_script.7z</a></p>
<p style="padding-left: 30px;"><a href="/downloads/cad2024_foosball.7z">cad2024_foosball.7z</a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/html/2404.05357v2">CNN-based Game State Detection for a Foosball Table</a></p>
<h4>HoRoSim (使用 CoppeliaSim, 是否能夠轉進 Webots)</h4>
<p style="padding-left: 30px;"><a href="https://pure.itu.dk/ws/portalfiles/portal/86211605/2021RIE_HoRoSim_camera_ready.pdf">HoRoSim, a Holistic Robot Simulator: Arduino Code, Electronic Circuits and Physics</a></p>
<p style="padding-left: 30px;"><a href="https://bitbucket.org/afaina/horosim/src/master/">https://bitbucket.org/afaina/horosim/src/master/</a></p>
<h2>AI</h2>
<p>以下為利用 AI 解題的相關參考資料:</p>
<p>利用 Gmail 帳號在 <a href="https://x.com/">https://x.com/</a> 註冊帳號後, 登入後直接點選左側的 Grok 進行對話.</p>
<p>另外可在個人手機或平板上安裝 X 與 Grok 3 App, 利用  X 帳號登入Grok 3 進行輔助學習.</p>
<p>使用範例:</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 1</span>: 請用繁體中文詳細說明 <a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots</a> 中的操作方法與重點</p>
<p style="padding-left: 30px;">隨後的對話可以直接輸入:</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 2</span>: <a href="https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python">https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python</a></p>
<p style="padding-left: 30px;">要求 AI 列出操作方法與重點.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">提問 3</span>: 請幫我整理出這兩個 Tutorial 中所牽涉的英文單字與相關用法說明</p>
<p style="padding-left: 30px;">儘管 AI 對話過程可以快速協助列出相關 Tutorial 內容的重點與操作方法, 一旦完成操作後, 應該要再針對原文中的英文專有名詞或敘述句的用法進行研讀, 最終目的是<span style="background-color: #ffff99;">能夠在 AI 的協助下培養原文內容的快速閱讀與理解能力</span>.</p>
<p>除了 Grok 3, 也可透過 <a href="https://claude.ai">https://claude.ai</a>、<a href="https://chatgpt.com/g/g-QpmQGPwkp-fan-ti-zhong-wen-gpt">GPT</a> 或 <a href="https://gemini.google.com/app?hl=zh-TW">Gemini</a> 等系統進行輔助學習.</p>
<hr/>
<p>如何因應 AI 時代的挑戰：</p>
<p>培養難以被AI取代的核心能力：</p>
<ol>
<li><span style="background-color: #ffff99;">創意思考與問題解決能力</span></li>
<li><span style="background-color: #ffff99;">跨領域整合的思維</span></li>
<li>同理心與情感智商</li>
<li><span style="background-color: #ffff99;">團隊合作與領導才能</span></li>
<li>批判性思考與決策能力</li>
</ol>
<p>選擇未來導向的專業領域：</p>
<ol>
<li>AI 與機器學習相關技術</li>
<li>數據分析與應用</li>
<li><span style="background-color: #ffff99;">人機互動設計</span></li>
<li><span style="background-color: #ffff99;">數位內容創作</span></li>
<li>永續發展與環保科技</li>
<li>心理諮商與生命教育</li>
<li>創意產業與體驗設計</li>
</ol>
<p>建立終身學習習慣：</p>
<ol>
<li>持續關注產業發展趨勢</li>
<li>善用線上學習平台</li>
<li><span style="background-color: #ffff99;">培養自主學習能力</span></li>
<li>建立知識更新機制</li>
<li>參與專業社群交流</li>
</ol>
<p>發展多元技能組合：</p>
<ol>
<li>不要侷限在單一專業</li>
<li>培養第二專長</li>
<li><span style="background-color: #ffff99;">跨領域知識整合</span></li>
<li>軟實力與硬實力並重</li>
<li>培養數位工具運用能力</li>
</ol>
<p>保持開放與彈性思維：</p>
<ol>
<li><span style="background-color: #ffff99;">擁抱新技術與改變</span></li>
<li>適應力與抗壓性</li>
<li><span style="background-color: #ffff99;">勇於嘗試新事物</span></li>
<li>正向面對挑戰</li>
<li>培養創業家精神</li>
</ol>
<h1>Topics</h1>
<p><a href="https://classroom.github.com">Github Classroom</a>: hw 為學員個人的作業倉儲, 2a 與 2b 則為各班的分組協同倉儲</p>
<p><img alt="" height="201" src="/images/cd2025_classroom_hw_and_project.png" width="400"/></p>
<p>cd2025 協同產品設計實習包括下列 4 個主題:</p>
<h4>Topic1: 可攜環境與 Github</h4>
<p>主題 1 採用可攜環境可以讓參與協同的每一位成員使用相同版本的工具套件, 包括 Git, Python, Putty, VSCode, Sharex, wscite 以及 Wink.</p>
<p>Github 則用來儲存個別學員與協同分組的產品設計內容, 因為倉儲中帶有內容管理系統, 每一位學員在進行各項階段性設計工程時, 都可以記錄詳細歷程, 也能利用個人及分組網頁展示內容, 其目的除了讓其他學員可以了解各階段提交的進度外, 也能透過互助合作的模式解決所面臨的問題.</p>
<h4>Topic2: 零組件繪圖</h4>
<p>主題 2 的零組件繪圖主要使用 Solvespace 與 Onshape , Solvespace 容量不到 10 MB 的參數式繪圖工具可減輕各學員配置或安裝大型的商業套件的負擔, 一旦各分組完成可以運作的產品系統模擬原始場景之後, 若需要讓最終的模擬場景更接近實體產品, 則可 Onshape 全雲端套件進行產品外型的零組件繪圖.</p>
<h4>Topic3: 建立模擬場景</h4>
<p>主題 3 採用的機電模擬場景工具為 Webots R2025a, 相較於 CoppeliaSim, Webots 採用 Apache 使用授權, 不限於在學校環境中使用. 結合 <a href="https://github.com/aidudezzz/deepbots">Deepbots</a> 可用於機電系統的強化學習 (Reinforce Learning).</p>
<p><a href="/downloads/https_server_py.7z">https_server_py.7z</a> (利用 Python 伺服同目錄的 index.html)</p>
<h4>Topic4: 協同設計</h4>
<p>主題 4 為協同設計, 各組員可採同步或非同步模式或建立不同操除分支提交改版紀錄, 也可利用 Odoo PLM 模組建立產品開發生命週期間各階段組員的互動紀錄.</p>
<h2>Wink</h2>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 假如檔案小於 5mb, 將 mp4 檔案放入 downloads 目錄後取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video width="1008" height="630" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="your_video_unique_name" muted="true"&gt;
&lt;source src="/downloads/your_video.mp4" type="video/mp4" /&gt;&lt;/video&gt;&lt;/div&gt;</pre>
<div>自行建立可攜 Python 的過程畫面:</div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_python1" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_python1.mp4" type="video/mp4"/></video></div>
<p>使用 SSH 執行 git clone 與 git push 的過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_ssh1" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_ssh1.mp4" type="video/mp4"/></video></div>
<p>設定可攜套件 .gitconfig 的過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_gitconfig" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_gitconfig.mp4" type="video/mp4"/></video></div>
<p>solvespace 零組件繪圖過程畫面:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="cdw3_cad" height="630" muted="true" width="1008">
<source src="/downloads/wink/cdw3_cad.mp4" type="video/mp4"/></video></div>
<h3>Fossil</h3>
<p>Fossil SCM 的應用</p>
<p><a href="https://fossil-scm.org/">https://fossil-scm.org/</a> </p>
<p>Github 與 Fossil SCM 結合應用範例:</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="wcmw3_fossil1" height="630" muted="true" width="1008">
<source src="/downloads/wink/wcmw3_fossil1.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">fossil init w4.fossil<br/><br/>fossil ui w4.fossil<br/><br/>ctrl c<br/><br/>git clone https://github.com/mdecycu/cmsimde_site.git c<br/><br/>cd c<br/><br/>fossil open ./../w4.fossil --force<br/><br/>fossil add .<br/><br/>fossil commit -m "add c"<br/><br/>cd ..<br/><br/>fossil ui w4.fossil<br/><br/><a href="http://localhost:8081/doc/trunk/index.html">http://localhost:8081/doc/trunk/index.html</a></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">trunk 為最新版本的代號, 若在 Fossil 系統中改版後, 可以將 trunk 換為版號, 直接看到該版的靜態網站內容.</div>
<h2>Topic1</h2>
<p>可攜環境與 Github</p>
<p><object data="/images/topic1.svg" height="885" type="image/svg+xml" width="1357"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic1.smm">Edit topic1.smm</a></p>
<h3>w1</h3>
<p><span style="background-color: #ffff00;">如何利用 C: 中舊的可攜程式環境建立 Portable_wcm2025?</span></p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p><span style="background-color: #ffff00;">如何利用 Github 帳號與 Portable_wcm2025 建立 SSH 與認證用的 .reg 檔案?</span></p>
<p style="padding-left: 30px;">確認 start 批次檔案中 GIT_SSH 環境變數已經指向 Putty</p>
<p style="padding-left: 30px;">利用可攜程式中的 puttygen.exe 建立 OpenSSH 格式的公鑰(鎖頭)與 Putty 格式的私鑰(開門鑰匙)</p>
<p style="padding-left: 30px;">利用 putty.exe 建立 SSH 遠端登入所需要的 session, 並將電腦組態登錄內容, 以 .reg 匯出存入隨身碟</p>
<p style="padding-left: 30px;">必須注意 .ppk 格式的私鑰存放位置是否能與可攜程式中所建立的 session 互相對應</p>
<p style="padding-left: 30px;">最後利用 session 設定, 以 git clone 將作業倉儲取下準備進行維護</p>
<p><span style="background-color: #ffff00;">如何領取作業倉儲並利用 Portable_wcm2025 進行個人作業內容維護?</span></p>
<p style="padding-left: 30px;">登入 Github 後, 利用 Github Classroom 作業連結取得個人倉儲</p>
<p style="padding-left: 30px;">在個人作業倉儲設定中的 Pages 以主分支作為作業網站的根目錄</p>
<p style="padding-left: 30px;">利用 cms 啟動編輯網站, 編輯結束後以 Convert 轉為靜態網頁</p>
<p style="padding-left: 30px;">利用 SStatic 啟近端的靜態網站檢視伺服器, 啟動後利用其右邊的按鈕檢視</p>
<p style="padding-left: 30px;">確認階段性編輯無誤後, 利用 acp 加上具體的提交訊息後採 SSH 協定推送</p>
<p><span style="background-color: #ffff00;">分組組長如何利用 Github Classroom 協同作業連結建立團隊 (Team)? 學員如何 Join?</span></p>
<p style="padding-left: 30px;">cd2025 課程中的 Github Classroom 帳號為 <a href="https://github.com/mdecd2025/">https://github.com/mdecd2025/</a></p>
<p style="padding-left: 30px;">各學員的作業倉儲 (Repository) 位於: <a href="https://github.com/orgs/mdecd2025/repositories">https://github.com/orgs/mdecd2025/repositories</a></p>
<p style="padding-left: 30px;">各班的協同倉儲 (Teams) 位於: <a href="https://github.com/orgs/mdecd2025/teams">https://github.com/orgs/mdecd2025/teams</a></p>
<p style="padding-left: 30px;">2b 各組的 Teams 名稱為 g<a href="https://github.com/orgs/mdecd2025/teams/g1">1</a>, <a href="https://github.com/orgs/mdecd2025/teams/g2">g2</a> ..., 而 2a 各組的 Teams 名稱必須設定為 ag1, ag2 ...</p>
<p><span style="background-color: #ccffcc;">w1 任務</span>:</p>
<p style="padding-left: 30px;">分組團隊 (Teams) 建立後, 請參考<a href="https://mde.tw/cd2025/content/list.html">說明</a>後, 將各班各學員與各團隊的倉儲與網站連結, 分別放入標題為 list (使用第一階標題) 的網頁中.</p>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/education/sign-up">註冊 Onshape 教育帳號</a></p>
<p style="padding-left: 30px;"></p>
<p></p>
<h3>Portable</h3>
<p>以下將說明如何自行在 Windows 操作系統中建立可攜 Python 程式系統.</p>
<p>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境.</p>
<p>以下為操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="https://mdewcm2025.github.io/hw-scrum-1/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p>在此有一點必須特別注意, SciTE 中有關使用 Pythonw.exe 解譯程式設定的檔案必須使用:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">if PLAT_WIN
	python.command=pythonw.exe
if PLAT_GTK
	python.command=python3
if PLAT_MAC
	python.command=python</pre>
<p>也就是使用當下所設定的 pythonw.exe 而非指定到特定舊版本的 pythonw.exe, 例如: Y:\Python310\pythonw.exe</p>
<hr/>
<p>自行製作可攜 Python, 以及配置 pip 的過程如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/t8lpTRLP3Ic?si=XdqorGOTaokrPrQx" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XqTiDBusTb0?si=MKZ1C_Mjf7mEDUBC" title="YouTube video player" width="560"></iframe></p>
<h3>repo</h3>
<p>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境.</p>
<p>以下為操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat.</li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.</li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.</li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.</li>
<li>之後利用新版的 <a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>, <a href="https://git-scm.com/downloads/win">Portablegit</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, <a href="https://github.com/ShareX/ShareX/releases">ShareX</a>, <a href="https://www.debugmode.com/wink.html">Wink</a>, <a href="https://solvespace.com/download.pl">Solvespace</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>, <a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a> 以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p>以下為操作影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/t8lpTRLP3Ic?si=XdqorGOTaokrPrQx" title="YouTube video player" width="560"></iframe></p>
<p>說明如何取得個人作業倉儲並透過 TOKEN 修改內容之一:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/y2lp77yB1V8?si=3f1KwLAbkKA81Yxz" title="YouTube video player" width="560"></iframe></p>
<p><span>說明如何取得個人作業倉儲並透過 TOKEN 修改內容之二:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/4DVSjC5LRlQ?si=gJn6AFxBm1sVTAs1" title="YouTube video player" width="560"></iframe></p>
<h3>SSH</h3>
<h4>使用 SSH 協定執行作業倉儲的推送</h4>
<p><a href="https://zh.wikipedia.org/zh-tw/Secure_Shell">SSH</a> 是一種加密的網路傳輸協定, PuTTY 則是可用於 Windows 環境的 SSH 協定工具, 其中支援遠端登入 (putty.exe) 與檔案傳輸工具 (psftp.exe).</p>
<p>使用 PuTTY 所建立的公私鑰進行 Github push 認證的步驟:</p>
<p>第一步:</p>
<p style="padding-left: 30px;">若希望在 Windows 環境透過 git 指令, 使用 PuTTY 設定的 session (一個代表連線伺服器主機、私鑰位置與是否使用代理主機等資訊的字串), 執行 push, 必須要在啟動可攜環境時, 設定 GIT_SSH 環境變數, 將此變數指向 PuTTY 套件中的 plink.exe 位置 (也就是 set GIT_SSH=%Disk%:\putty\plink.exe).</p>
<p>第二步:</p>
<p style="padding-left: 30px;">指定利用 PuTTY 的 SSH session 執行 git push 後, 必須在 Windows 操作系統中選擇一個字串, 作為 SSH 連線 session 名稱, 由於此設定必須指向 SSH 協定加密用的私鑰所在目錄位置, 因此設定 session 之前, 必須利用 puttygen.txt 建立一對公私鑰, 其中的公鑰為 OpenSSH 格式, 必須送到使用者 Github 帳號設定區 (Settings) 的 SSH and GPG keys 中.</p>
<p>第三步:</p>
<p style="padding-left: 30px;">利用 puttygen.exe 建立公私鑰的方法, 是在執行 puttygen.exe 之後, 以滑鼠按下 Generate 之後, 讓滑鼠在 puttgen.exe 視窗中 key 下方的空白區域隨意移動, puttygen.exe 會根據滑鼠移動的位置隨機建立 OpenSSH 格式的公鑰, 以及配對的 PuTTY 格式的 Private Key (副檔名為 .ppk)</p>
<p>第四步:</p>
<p style="padding-left: 30px;">接下來, 將 OpenSSH 格式的 Public Key 內容複製到個人 Github 帳號設定區的 SSH and GPG keys 中, 並以 puttygen.exe 執行視窗右下方的 Save private key 按鈕, 將私鑰 (假設為 myprivatekey.ppk) 存至 Y:\.</p>
<p>第五步:</p>
<p style="padding-left: 30px;">接著啟動 PuTTY 中的 putty.exe, 在 Host Name (or IP Address) 欄位填入 github.com, 並確認 Connection Type 選用 SSH, 表示要透過 SSH 加密協定連線到 github.com.</p>
<p>第六步:</p>
<p style="padding-left: 30px;">接著在 putty.exe 視窗下方的 Saved Sessions 填入一組字串, 此字串就是之後要遠端登入 github.com 設定 push 連線 URL 的 session 名稱, 在此假設選擇 "mysession" 作為 session 名稱, 使用者可以自行選擇具有代表性的字串, 例如: 學號或簡短的英文姓名縮寫.</p>
<p>第七步:</p>
<p style="padding-left: 30px;">在 putty.exe 視窗中填入 github.com 與 "mysession" 名稱之後, 點擊 Save 之後, 此 session 設定就會被 Windows 操作系統存入該台電腦的 Registry 登錄檔案中的 HKEY_CURRENT_USER - SOFTWARE - SimonTatham 所在組態區. 此時可以在命令列中輸入 regedit 後進入登錄檔查看是否 mysession 已經存在.</p>
<p>第八步:</p>
<p style="padding-left: 30px;">上列 "mysession" 設定完成且按下 Save 之後, 若再按下 Open, 採用 IPv4 網路連線的電腦應該已經可以透過 putty.exe 遠端連線至 github.com, 視窗中會出現 github.com 作為視窗標題, 且內容為 login as: 但一般使用者並沒有帳號可以直接透過 putty.exe 遠端登入到 github.com, 而只能在 session 設定完成後, 利用此 session 執行 git push.</p>
<p>第九步:</p>
<p style="padding-left: 30px;">由於前面的 "mysession" 雖然已經存入 Windows 操作系統的登錄檔, 但並沒有設定 private key 的位置, 因此接下來要再開啟 putty.exe, load 進此一 session, 然後在此 session 設定左方的 Category: 下方的 Connection - SSH - Auth - Credentials 設定中的 Private key file for authentication: 區, 利用 Browse 選擇位於 Y:\ 的 myprivatekey.ppk 檔案. 選擇檔案完成後, 必須再回到 Catetory: 下方的 Session 區, 以右方的 Save 將附加私鑰位置設定的 session 存檔. 此時 Windows 登錄檔中的 "mysession" 除了代表要使用 SSH 連線到 github.com 之外, 還附帶指定了 myprivatekey.ppk 在 Y:\ 的位置.</p>
<p>第十步:</p>
<p style="padding-left: 30px;">若上述設定是在電腦輔助設計室中的電腦進行, 必須利用命令列 regedit 指令, 進入 HKEY_CURRENT_USER - SOFTWARE - SimonTatham 位置, 利用滑鼠右鍵將此登錄設定檔案"匯出" 存入可攜程式 start_ipv6.bat 所在目錄, 此處假設命名為 mysession.reg, 使用者可以自行對 .reg 命名.</p>
<p>第十一步:</p>
<p style="padding-left: 30px;">由於上列的 myprivatekey.ppk 存於可攜程式中的 Y:\, 因此當使用者利用 start_ipv6.bat 啟動可攜程式後, 就可以利用滑鼠雙點擊位於同目錄的 mysession.reg, 上述的 "mysession" 設定就會存入 Windows 操作系統的登錄檔中.</p>
<p>使用 PuTTY session 設定倉儲 .git/config 中的 URL</p>
<p>假設上列 "mysession" 對應中的 OpenSSH 格式公鑰是送到 Github 帳號為 scrum-1 學員的 SSH and GPG key 區域, 則 scrum-1 學員在啟動可攜系統後, 已經雙點擊 mysession.reg, 將前述 putty.exe 設定的 session 組態登錄設定回存至 Windows 操作系統中, 則 scrum-1 學員就可以將其近端作業倉儲中的 mysession 用於倉儲 .git/config 檔案的下方設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[remote "origin"]
    url = git@mysession:mdecd2025/hw-scrum-1.git
    fetch = +refs/heads/:refs/remotes/origin/</pre>
<p>其中的 [remote "origin"] 表示當使用 git 指令中針對此倉儲 "origin" 是一個與遠端倉儲對應的字串代號, 代表其下兩項設定. url 代表此 "origin" 的倉儲連線網址, 而連線至此倉儲的協定是採遠端登入 (使用 Github 支援的 SSH 遠端登入協定), 且此遠端登入的帳號為 "git", 這是所有要使用 SSH 執行 git push 的用戶共同使用的登入帳號.</p>
<p>url 設定中 "@" 之後的 "mysession" 就是宣告要使用此電腦登錄檔中所設定的 session 名稱 (代表要連線到 github.com, 且帶的 myprivatekey.ppk, 準備在登入流程中與 github.com 中 mdewcm2025 帳號下的 hw-scrum-1 倉儲擁有者 (或帶有 repo 管理權限的帳號) 所登錄的 public keys 進行認證比對, 一旦通過認證, git push 指令就可以成功將改版資料推送到指定的倉儲區域.</p>
<h3>list</h3>
<p>以下過程將各班學員的倉儲與網站連結列出:</p>
<p>讀出 list 倉儲資料 (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/2793a8a65bd810e9837e0d00ca3e2105d3d5da9c/list_stage_1.py">執行結果</a>):</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
from browser import html
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")</pre>
<p>建立 anchor 與 break 標註 (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/2793a8a65bd810e9837e0d00ca3e2105d3d5da9c/list_stage_2.py">執行結果</a>):</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("scrum-1", href="https://mdecd2025.github.io/hw-scrum-1")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("github.com", href="https://github.com")</pre>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/113a3d7e19b36a7672a136f3731ef07b095adeef/list_2a.py">列出 2a 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/29173e8b73ad422fd7c44bcd93658a3579d63633/list_stage_3.py">列出 2b 學員作業網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2a_group.py">列出 2a 分組網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2b_group.py">列出 2b 分組網站與倉儲連結</a></p>
<hr/>
<p>請列出各班目前尚未納入分組的學員名單</p>
<p>透過下列程式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
# pip install pygithub
from github import Github
# the following is under IPv6
# Replace these variables with your own details
GITHUB_TOKEN = 'your_token'
ORG_NAME = 'mdecd2025'
PROXY = 'http://p4.cycu.org:3128'

def get_all_team_members_starting_with_a(org_name, token, proxy):
    # Set proxy environment variables
    os.environ['http_proxy'] = proxy
    os.environ['https_proxy'] = proxy

    # Initialize Github object
    g = Github(token)
    all_members = []

    try:
        # Get organization
        org = g.get_organization(org_name)
        
        # Get all teams
        teams = org.get_teams()
        
        for team in teams:
            if team.name.lower().startswith('g'):
                print(f"Processing team: {team.name}")
                # List members
                members = team.get_members()
                for member in members:
                    all_members.append(member.login)
                    print(f"Login: {member.login}, ID: {member.id}, URL: {member.html_url}")
                    
        print("\nAll members:", all_members)
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    get_all_team_members_starting_with_a(ORG_NAME, GITHUB_TOKEN, PROXY)</pre>
<p>已知各班已經參與分組的學員 Github 帳號分別如下:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']</pre>
<p>請接著列出目前各班尚未納組的學員學號.</p>
<p>首先看能否從 list\2a.txt <a href="https://mdecd2025.github.io/hw-scrum-1/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/8443979d03961d3f66e99e65f4ab3639b3567891/list_2a_stud_num_and_github.py">讀出學員的學號與 github 帳號</a>:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 確定已經取得 2a.txt 中的學號與 github 帳號資料
#print(all_stud)
# 利用 for 迴圈逐一列出各學員的單行資料
# 已知各行資料是以 \n 跳行, 可以設法先刪除每一筆資料最後的跳行符號
for i in all_stud:
    #print(i)
    drop_n = i.rstrip("\n")
    # 確定每一行最後的跳行符號已經移除
    #print(drop_n, end="")
    # 設法利用學號與帳號間的 "\t" 將資料隔開
    stud = drop_n.split("\t")
    #print(stud)
    stud_num = stud[0]
    stud_github = stud[1]
    print("學號為 ", stud_num, " 的學員, 其 Github 帳號為 ", stud[1])</pre>
<p>只要在迴圈中加入下列判斷式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#print("學號為 ", stud_num, " 的學員, 其 Github 帳號為 ", stud[1])
if stud_github not in a_all_members:
    print(stud_num)</pre>
<p>即可取得下列尚未納組的學員學號:</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/1ef87e0d43210f34d48ea6559a6a74d075d6a253/2a_not_in_group.py">2a</a>:</p>
<p>41023220<br/>41223111<br/>41223119<br/>41223124<br/>41223148</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/addb4810bed04a15b77e94720cf7de231f380591/2b_not_in_group.py">2b</a>:</p>
<p>40923137<br/>41023237<br/>41223210<br/>41223214<br/>41223223<br/>41223232<br/>41223233<br/>41223239<br/>41223245<br/>41271217<br/>41271236</p>
<hr/>
<p>w4: <a href="/downloads/w4_2b_grouping.txt">w4_2b_grouping.txt</a></p>
<p></p>
<h3>IPv6</h3>
<p>已知 w4 之前的學員作業倉儲版本, 無法在 IPv6 位址設定時正確運作, 各學員必須下載 <a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>, 解開壓縮檔案後, 替換倉儲中的 cmsimde 目錄.</p>
<p>IPv6 設定:</p>
<p style="padding-left: 30px;">2a 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:a001<br/>2b 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b001<br/>gateway: 2001:288:6004:17::254<br/>dns server: <br/>2001:288:6004:17::3<br/>2001:b000:168::1</p>
<p>2a 以 <a href="/downloads/w4_2a_index.txt">w4_2a_index.txt</a> 中的序號為準, 例如: 序號為 1 的學員其固定 IPv6 位址為:</p>
<p style="padding-left: 30px;"><span>2001:288:6004:17:fff1:cd25:0000:a001</span></p>
<p style="padding-left: 30px;"><span>若序號為 60 其 IPv6 位址為 2001:288:6004:17:fff1:cd25:0000:a060</span></p>
<p>2b 以 <a href="/downloads/w4_2b_index.txt">w4_2b_index.txt</a> 中的序號為準, 例如: 序號為 1 的學員其固定 IPv6 位址為:</p>
<p style="padding-left: 30px;"><span>2001:288:6004:17:fff1:cd25:0000:b001</span></p>
<p style="padding-left: 30px;"><span>若序號為 66 其 IPv6 位址為 2001:288:6004:17:fff1:cd25:0000:b066</span></p>
<p>註: 利用 Brython <a href="https://mde.tw/wcm2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/5299aa53dc856df47c98993e016c9c0db2c74edf/2025_spring_set_mde_dns.py">產生</a> DNS 伺服器所需的設定.</p>
<p>完成 dns 設定之後:</p>
<p style="padding-left: 30px;">2a 序號為 1 的學員其伺服器主機符號名稱為 a1.mde.nfu.edu.tw, 序號 50 則對應 a50.</p>
<p style="padding-left: 30px;">2b 序號為 1 的學員其伺服器主機符號名稱為 b1.mde.nfu.edu.tw, 序號 50 則對應 b50.</p>
<hr/>
<p>各組員將電腦設為所份配的固定 IPv6 後, 可以利用 python -m http.server, 在作業倉儲中啟動 port 8000 的 http 靜態網頁伺服器, 以下為各班的近端學員靜態網站連結:</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2a_group.py">列出 2a 分組網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/a4414e311503fac8d57d4f5e44999147c54cf7fa/list_2b_group.py">列出 2b 分組網站與倉儲連結</a></p>
<p>2a IPv6 port 8000 連線列表</p>
<p><a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/48af059c96052719dc03d5fe8ee8af9a6033afc7/w4_2b_ipv6_stud_num.py">2b IPv6 port 8000 連線列表</a> (<a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/35707a62977b9829179159ffd34140d600ef8158/w4_2b_ipv6_task3.py">列出無法連線學員</a>)</p>
<hr/>
<p>以下為與 AI 系統的對話:</p>
<p>請用 Brython 寫出在 id="brython_div1" 嵌入 html 連結的程式. 希望各連結能透過 http 協定連結到班上有 66 位學員的靜態網頁. 其中各學員的固定 IPv6 分別為 2001:288:6004:17:fff1:cd25:0000:b001 到 2001:288:6004:17:fff1:cd25:0000:b066, 且使用 port 8000 進行連結. 請寫出此一 Brython 程式.</p>
<p>取得下列程式: <a href="https://mde.tw/cd2025/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9f3df9d865a7ceca8e799ee9b1a31602/raw/5674eb19769159d503b2263726279dc4e7f26c1f/w4_2b_ipv6.py">透過 2b 學員序號列出其 IPv6 靜態網站</a></p>
<p>完成上述以序號標示後, 透過下列詢問可以取得以學號作為標示的各學員近端靜態網站連結.</p>
<p style="padding-left: 30px;">任務一: 請用 Brython 寫出在 id="brython_div1" 嵌入 html 連結的程式. 希望各連結能透過 http 協定連結到班上有 66 位學員的靜態網頁. 其中各學員的固定 IPv6 分別為 2001:288:6004:17:fff1:cd25:0000:b001 到 2001:288:6004:17:fff1:cd25:0000:b066, 且使用 port 8000 進行連結. 請寫出此一 Brython 程式.</p>
<p style="padding-left: 30px;">任務二: 若各學員序號取自 https://mde.tw/cd2025/downloads/w4_2b_index.txt, 且此一資料以空白隔開序號加"." 及學號, 能否修改成以學員的學號作為 html 的標示.</p>
<p style="padding-left: 30px;">任務三: 完成各學員的 html 連結後, 請再用 Brython 程式設法進入每一位學員的網站查驗, 是否可以讀取到該連結 content 目錄中的 About.html, 若可以則 pass, 若無法連結則列出無法完成連結的學員學號.</p>
<p style="padding-left: 30px;">請分別列出上述三個任務的程式碼.</p>
<h2>Topic2</h2>
<p>零組件繪圖</p>
<p><object data="/images/topic2.svg" height="671" type="image/svg+xml" width="1016"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic2.smm">Edit topic2.smm</a></p>
<h3>Compile</h3>
<p>以下要說明如何利用可攜程式套件編譯 Solvepace:</p>
<p>下載 <a href="http://229.cycu.org/cmake_msys64.7z">cmake_and_msys64.7z</a>, 將 cmake-3.21.0-windows-x86_64、msys64 與 libwinpthread-1.dll 等資料放入 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> 解開壓縮後的 data 目錄中, 啟動可攜程式檔案就可以使用 <a href="https://www.msys2.org/">MSYS2</a> 編譯 Solvespace 3.1 版的原始碼. 取得的 solvespace.exe 只要與 libwinpthread-1.dll 處於同一個目錄, 就可以執行編譯完成的 solvespace.exe 執行參數化零組件的繪圖.</p>
<p>備註: <span>請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 (</span><a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a><span>, 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄)</span></p>
<p>編譯 Solvespace 的詳細步驟如下:</p>
<p>配置好 <a href="http://229.cycu.org/cmake_msys64.7z">cmake_and_msys64.7z</a> 後, 啟動可攜程式</p>
<p>在命令列中 cd tmp, 然後利用 git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> 取下 solvespace 的原始碼</p>
<p>cd solvespace 後, 利用 git checkout v3.1 將版本切換到 v3.1 的原始碼內容</p>
<p>接下來則必須修改 solvespace\extlib\angle\src\libANGLE\HandleAllocator.cpp 加入標頭檔案:</p>
<p>#include &lt;limits&gt;</p>
<p>接著就可以進行程式碼的編譯與連結:</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p>完成編譯後, solvespace.exe 即位於 build\bin 目錄中, 執行時則需要 libwinpthread-1.dll 動態連結程式庫.</p>
<p>進行上述流程編譯的原始碼 <a href="http://229.cycu.org/solvespace_v3.1_src.7z">solvespace_v3.1_src.7z</a>, 以及編譯完成的 <a href="http://229.cycu.org/solvespace_v3.1_msys2.7z">solvespace_v3.1_msys2.7z</a>.</p>
<p>註: <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> 中所配置的 solvespace.exe 是採用 Visual Studio C++ 編譯, 檔案只有約 7MB, 因為其執行時所需的動態連結程式庫已經配置在 Windows 操作系統中, 因此檔案較小, 而採上述流程, 使用 <a href="https://www.msys2.org/">MSYS2</a> 可攜方式編譯所得到的 solvespace.exe, 檔案約 15MB, 還需要 62KB 的 libwinpthread-1.dll 才能執行, 這是因為採 <a href="https://www.msys2.org/">MSYS2</a> 編譯的 solvespace.exe 必須自帶執行所需的程式庫, 因此檔案較大.</p>
<p></p>
<h3>Onshape</h3>
<p><a href="https://www.onshape.com/en/education/sign-up">註冊 Onshape 教育帳號</a>, 登入後畫面如下:</p>
<p><img alt="" height="336" src="/images/onshape_starter.png" width="800"/></p>
<p><a href="https://cad.onshape.com/help/zh_TW/Content/Primer/onshape_primer.htm">Onshape 入門指南</a></p>
<p><a href="https://learn.onshape.com/">Learn Onshape</a></p>
<p>Tutorial 1: Creating Object (建立物件)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pMWnsHpDlQE?si=x_j_W6uQ6blwJ0JB" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 2: Adding Features (建立特徵)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GKI2H1mVyGY?si=1a8WO8JaKo0uz2j6" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 3: Misc tidbits (雜項花絮)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BJnG2WM8Jdg?si=VskoYcgGD94z_ebi" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 4: Views and Orientation (視圖與方位)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cJMW7pwsqaU?si=FafF37eJlQhIpmwJ" title="YouTube video player" width="560"></iframe></p>
<p>Tutorial 5: Documents (文件)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XR1c_3f6TIA?si=2K9TsB3c21tZHQk3" title="YouTube video player" width="560"></iframe></p>
<p>Units and Decimal: 單位與小數點位數</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/k1NNsI75fRc?si=vc-q9rkd1TbM1T4Z" title="YouTube video player" width="560"></iframe></p>
<p>Export to STL: 導出 STL 格式檔案</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dYo6kzmtLw0?si=9CpuXGMcpDVE9L8E" title="YouTube video player" width="560"></iframe></p>
<h2>Topic3</h2>
<p>建立模擬場景</p>
<p><object data="/images/topic3.svg" height="269" type="image/svg+xml" width="937"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic3.smm">Edit topic3.smm</a></p>
<p>平面四連桿機構參考資料:</p>
<p><a href="https://www.softintegration.com/chhtml/toolkit/mechanism/fourbar/fourbaraccel.html">fourbar acceleration analysis</a> (<a href="https://www.youtube.com/watch?v=ICEBe15IP_I">video</a>)</p>
<p><a href="https://github.com/alejo1630/4bar_mechanism">fourbar mechanism</a></p>
<p><a href="https://www.reddit.com/r/MechanicalEngineering/comments/10niok2/four_bar_chain_catapult/?rdt=45176">fourbar chain catapult</a></p>
<p><a href="https://carleton.ca/johnhayes/wp-content/uploads/MAAE-3004-RRRP-DSP-RevF.pdf">RRRP fourbar linkage</a></p>
<p><a href="https://github.com/cyberbotics/webots/discussions/2621">Research papers using Webots</a></p>
<p><a href="/downloads/Jansen_whitworth_mechanism.7z">Jansen_whitworth_mechanism.7z</a></p><h3>Fourbar2</h3>
<p>平面四連桿機構運動分析</p>
<p>Reference: <a href="https://docs.sympy.org/latest/modules/physics/mechanics/examples/four_bar_linkage_example.html">1</a>, <a href="https://gist.github.com/mdecycu/c6401d697ddbb33fcd0eaed5b4da8d09">2</a>, <a href="https://homepages.math.uic.edu/~jan/phcpy_doc_html/fourbartut.html">3</a></p>
<p><a href="/downloads/cd2025_box_fourbar_w5.7z">cd2025_box_fourbar_w5.7z</a></p>
<p><a href="/downloads/fourbar_box_w5.7z">fourbar_box_w5.7z</a></p>
<p><a href="/downloads/basket_ball_shooter.7z">basket_ball_shooter.7z</a></p>
<p><a href="/downloads/basket_ball_shooter.7z">basket_ball_shooter.7z</a></p>
<p><span style="background-color: #ffff00;">請注意, 所有 world 的存檔必須要將模擬時間轉為 0</span>, 否則所存的變數狀態將為該時間的模擬結果.</p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python">Tutorial 1</a> 重點摘要:</p>
<p>將 <a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> 解開壓縮後放入可攜套件 (<a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a>) 的 data 目錄中.</p>
<p>因為 start.bat 中已經宣告 Python 所在位置, 並將執行 webotsw.exe 所在的目錄放入 Windows 的命令搜尋路徑變數中 (path).</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python313

REM for webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin</pre>
<p>當起始一個 Webots project, 需要至少建立 worlds、controllers、protos 等三個目錄, 而且 Robot 的<span style="background-color: #ffff00;">控制器程式必須放入 controllers 目錄, 且控制程式檔名必須與子目錄相同</span>.</p>
<p><a href="https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment?tab-language=python">Tutorial 2</a> 重點摘要:</p>
<p><img alt="" height="329" src="/images/simplest_rigit_body_object.png" width="400"/></p>
<p>根據上圖, 在 <span style="background-color: #ffff00;">Webots 建立剛體物件, 必須使用 Solid 節點, 並從節點中的 children 建立 Shape 後宣告其 geometry 外形用於系統的運動方程式, 而其碰撞檢測的外形依據, 則從 Solid 節點的 boundingObject 中的 geometry 進行確認</span>.</p>
<p>另外可從 View - Optional Rendering - Show coordinate system 選項, 要求系統列出目前視圖所依據的座標系統.</p>
<p>當在 base 物件建立旋轉軸時, HingeJoint 物件的位階必須與 base 相同, 而且 link1 的 solid 物件必須接在 HingeJoint 的 endPoint 節點上, 且因為 link1 的最後位置並非位於其旋轉中心, 因此在建立 link1 solid 物件下的 shape 之前必須先使用 pose 物件, 以便在 solid 的 parent 座標系統之下, 建立一個屬於 shape 的局部座標轉換系統.</p>
<p>另外 HingeJoint 的旋轉中心位置是由 jointParameters 物件下的 anchor 欄位決定, 而其旋轉軸則由 axis 欄位決定.</p>
<p>由於 link1 最後需要透過碰撞檢測來與籃球互動, 因此除了 dynamic simulation 之外, 還需要設定 boundingObject, 才能界定 link1 的碰撞幾何外形, 但由於前面的 link1 並非在其 parent 座標系統的物件中心旋轉, 而是透過其局部座標轉換 (利用 pose 物件達成), 往局部 x 方向移動 0.2m, 因此 boundingObject 在引用其 shape 時, 也必須透過 pose 轉換到 link1 最終所在位置.</p>
<p><span>上列流程所完成的 Webots 專案檔: </span><a href="/downloads/w6_demo_project.7z">w6_demo_project.7z</a> (joint on link1)</p>
<p><a href="/downloads/w6_joint_on_base_project.7z">w6_joint_on_base_project.7z</a> (joint on base)</p>
<p></p>
<h3>boomer</h3>
<p><a href="/downloads/w5_boomer.7z">w5_boomer.7z</a></p>
<h2>Topic4</h2>
<p>協同設計</p>
<p><object data="/images/topic4.svg" height="191" type="image/svg+xml" width="546"></object></p>
<p><a href="https://mde.tw/mind-map/#/?fileURL=https%3A%2F%2Fmde.tw%2Fcd2025%2Fdownloads%2Ftopic4.smm">Edit topic4.smm</a></p>
<h1>HW</h1>
<p>Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">HW1 (5%): 建立由 Box 組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 30px;">HW2 (5%): 建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</p>
<p style="padding-left: 30px;">HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統</p><h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>請將個人根據 <a href="https://mde.tw/cd2025/content/Stage1.html">https://mde.tw/cd2025/content/Stage1.html</a> 導引內容的<span style="background-color: #ccffcc;">練習、以及製作 HW1 的過程</span>拍攝成帶有說明字幕的影片, 根據下列影片標題上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 HW1 頁面紀錄相關過程與心得.</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p><h2>HW2</h2>
<p>HW2 (5%): 建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</p>
<p>請將個人根據 <a href="https://mde.tw/cd2025/content/Stage2.html">https://mde.tw/cd2025/content/Stage2.html</a> 導引內容的<span style="background-color: #ccffcc;">練習、以及製作 HW2 的過程</span>拍攝成帶有說明字幕的影片, 根據下列影片標題上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 HW2 頁面紀錄相關過程與心得.</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p><h2>HW3</h2>
<p>HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統</p>
<p>請將個人根據 <a href="https://mde.tw/cd2025/content/Stage3.html">https://mde.tw/cd2025/content/Stage3.html</a>  導引內容的<span style="background-color: #ccffcc;">練習、以及製作 HW3 的過程</span>拍攝成帶有說明字幕的影片, 根據下列影片標題上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 HW3 頁面紀錄相關過程與心得.</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p><h1>Exam</h1>
<p>Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p style="padding-left: 30px;">Exam3 (20%): Webots 機電模擬場景的協同設計</p><h2>Exam1</h2>
<p>Exam1 (10%): <span style="background-color: #ccffcc;">建立 Webots 基本物件模擬場景</span></p>
<p>請直接利用 Webots 中的 box 節點建立以下四連桿機構的運動模擬:</p>
<p><img caption="false" height="482" src="/images/cd2025_ex1-2.gif" width="400"/></p>
<p>其中紅色連桿為主動旋轉, 其旋轉速度設為 1.0 rad/s, 紅色連桿長度為 0.4m, 綠色連桿長度為 0.6m (短桿長度為 0.3m 基座位於長桿中央且與基座長桿重疊, ), 藍色連桿長度為 0.9m, 紅色連桿與藍色連桿距離則為 1m.</p>
<p>請學員將考試操作流程紀錄於作業網站中的 Exam1 頁面中, 並完成下列要求:</p>
<ol>
<li>請詳細說明各連桿的製作流程, 利用 Solvespace 繪製當紅色連桿旋轉角度為個人學號最後兩碼時 (單位為 degree) 的線架構圖, 並將此角度作為四連桿的起始旋轉角度.</li>
<li>完成後, 請以"<span><span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</span>" 作為操作影片標題, 上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 Exam1 頁面紀錄相關過程與心得.</span></li>
</ol><h2>Exam2</h2>
<p>Exam2 (10%): <span style="background-color: #ccffcc;">利用 CAD 零組件建立模擬場景</span></p>
<p><span>請自行選擇 CAD 套件繪製下列平面四連桿機構, 之後將零件轉入 Webots 後建立以短桿轉速 1 rad/s 旋轉的動態模擬系統:</span></p>
<p><img alt="" height="282" src="/images/cd2025_exam2.png" width="400"/></p>
<p>其中左側最短桿為主動旋轉, 其旋轉速度設為 1.0 rad/s, 最短桿的長度, 請依照個人學號的最後兩碼作為依據, 設為 1.xx m, 其中 xx 為<span>人學號的最後兩碼, 其餘各桿長度與固定軸間的距離可自行訂定, 惟<span style="background-color: #ffff00;">主動桿的起始旋轉角度 angle, 也請以個人學號的最後兩碼作為依據, 單位為 degree</span>.</span></p>
<p>請學員將考試操作流程紀錄於作業網站中的 Exam2 頁面中, 並完成下列要求:</p>
<ol>
<li>請詳細說明各連桿的製作流程, 其中包括 CAD 繪製與 Webots 模擬場景的設定與操作流程.</li>
<li>完成後, 請以"<span><span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</span>" 作為操作影片標題, 上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 Exam2 頁面紀錄相關過程與心得.</span></li>
</ol>
<p></p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<ol>
<li>請每位學員利用在 <a href="https://mde.tw/cd2025/content/IPv6.html">https://mde.tw/cd2025/content/IPv6.html</a> 中所分配的個人 IPv6 網址, 以 webotsw --stream 啟動個人所完成的 HW1 模擬系統. 並在其餘組員的電腦上, 以瀏覽器檢視啟動串流學員伺服器上的機構模擬. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: <span>"</span><span><span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號</span>".</span></li>
<li><span>請每位學員利用 <a href="https://mdecd2025.github.io/hw-scrum-1/downloads/three_digit_counter.7z">three_digit_counter.7z</a> 中的七段顯示器進行修改, 以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過瀏覽器檢視參與協同組員 Webots 中所展示的<span style="background-color: #ccffcc;">學員學號</span>. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號</span>".</span></li>
<li><span>請各組利用 <a href="https://mde.tw/cd2025/downloads/youbot_cart_w10_websocket.7z">youbot_cart_w10_websocket.7z</a> 中的 Youbot 底座平台, 由各組組長以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號</span>".</span></li>
<li><span>上述機電模擬場景的協同設計, 請分別由各組組員將所完成的影片與心得整理在個人作業網站中的 Exam3 頁面後, 再逐一利用組員的帳號權限, 將個人心得與上述操作影片, 統一放入分組網站中的 Exam3 頁面中.</span></li>
</ol><h1>Final</h1>
<p>Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p><h1>Tutorial</h1>
<p>Webots R2025a 執行環境硬體需求:<br/><br/>2 GHz 4 核心以上 CPU, NVIDIA 或 AMD 支援 OpenGL 3.3 版, 帶有 512 MB 記憶體以上獨立顯示卡<br/><br/>操作系統:</p>
<p style="padding-left: 30px;">Windows 10 或 11 64 位元操作系統</p>
<p style="padding-left: 30px;">Ubuntu 24.04 以上版本</p>
<p style="padding-left: 30px;">macOS 12 以上版本操作系統</p>
<p>使用介面:</p>
<p style="padding-left: 30px;">Webots 可以透過 Tools - Preferences - Language 中選擇使用 English 或簡體中文介面 (目前無繁體中文介面, 介面語系翻譯請參考 <a href="https://github.com/cyberbotics/webots/tree/released/resources/translations">translations 頁面</a>說明), 在此強烈建議使用 English 界面即可.</p>
<p>Webots 版本差異:</p>
<p style="padding-left: 30px;">每一版本都有些微差異, cd2025 將使用 <a href="https://github.com/cyberbotics/webots/releases/tag/R2025a">R2025a</a>.</p>
<p style="padding-left: 30px;"><a href="https://www.cyberbotics.com/doc/reference/changelog-r2025">R2025a changelog</a></p>
<hr/>
<p>Webots 原始碼使用授權:<br/><br/>採 <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache 2.0 license agreement</a>. Apache 2.0 是一種開放且對企業友善的授權條款, 允許任何人免費使用、修改和分享軟體的原始程式碼, 包括商業用途使用.</p>
<p>自行編譯 Webots 請參考 <a href="https://cyberbotics.com/doc/guide/building-webots">building Webots 頁面</a>說明.</p>
<p>Webots 套件中的大部分範例模擬檔案都使用 Apache 2.0 許可釋出, 但有部分機器人和物件模型（proto 檔案）則是根據 <a href="https://cyberbotics.com/webots_assets_license">Webots 資產的開放原始碼許可協議</a>發佈, 另外有些範例則是由用戶根據不同的開源許可證所提供, 這些檔案都會明確標示其許可證內容.</p>
<hr/>
<p>Webots 介紹: (查英英字典: <a href="https://www.merriam-webster.com/dictionary/">https://www.merriam-webster.com/dictionary/</a>)</p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-webots">What is Webots?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-can-i-do-with-webots">What can I do with Webots?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#webots-simulation">Webots simulation</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-world">What is a world?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-controller">What is a controller?</a></p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/introduction-to-webots#what-is-a-supervisor-controller">What is a supervisor controller?</a></p>
<p><a href="https://www.youtube.com/playlist?list=PLt69C9MnPchkLuNNc4q9SeMFA96_v4THJ">Webots Crash Course</a> (速成班教學影片)</p>
<hr/>
<p>第一個 Webots 導引: <a href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots</a></p>
<p>登入 Github, 在 <a href="https://github.com/copilot">https://github.com/copilot</a> 的協助下執行此一教學練習.</p>
<p>導引目的: You will create your first simulation containing a simple environment: an arena with floor and walls, a few boxes, an e-puck robot and a controller program that will make the robot move.</p>
<p>建立一個簡單的模擬環境, 意即一個競技場中, 包括一個帶有地板、圍牆、幾個盒子、一個 e-puck 機器人, 以及能讓機器人移動的控制程式.</p>
<p><img alt="" height="310" src="/images/tutorial_e-puck.thumbnail.jpg" width="400"/></p>
<p>開啟 Webots 前, 請下載 <a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB).</p>
<p>有關 Webots 在 Windows 操作系統啟動, 請參考<a href="https://cyberbotics.com/doc/guide/starting-webots#windows">說明</a>. 有關 Web streaming 也請參考<a href="https://cyberbotics.com/doc/guide/web-streaming">說明</a>.</p>
<p>Webots 的可執行檔案位於 Y:\Webots_2025a\msys64\mingw64\bin\Webotsw.exe, 當與 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> 配置時, 若希望在不上網的情況下執行官方範例, 則必須再預先下載 <a href="https://github.com/cyberbotics/webots/releases/tag/R2025a">https://github.com/cyberbotics/webots/releases/tag/R2025a</a> 中的 <a href="https://github.com/cyberbotics/webots/releases/download/R2025a/assets-R2025a.zip">assets-2025a.zip</a>, 存入 Y:\home_ipv6\AppData\Local\Cyberbotics\Webots\cache\assets 目錄, 否則啟動官方範例時, 必須從官方網站下載各範例中所導入的原型節點資料.</p>
<p>若 Webotsw.exe 並非是在可攜程式的環境中啟動, 則 Webots 啟動後所下載的原型節點資料, 將會存入操作系統中的 C:\Users\%USERNAME%\AppData\Local\Cyberbotics\Webots\cache\assets 目錄中.</p>
<p>在可攜程式環境中啟動 Webots 的設定:</p>
<p style="padding-left: 30px;">start_ipv6.bat 中納入:</p>
<p style="padding-left: 30px;">REM for webots<br/>set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin</p>
<p style="padding-left: 30px;">並將 %path_webots% 放入 PATH 環境變數設定中.</p>
<p style="padding-left: 30px;">若希望在執行 start_ipv6.bat 時開啟 Webots, 可以在啟動可攜程式的批次檔案中加入 start webotsw.exe</p>
<p>在可攜程式環境中 (USB 固態硬碟、一般隨身碟、筆電或個人電腦) 啟動 Webots 後, 開始建立模擬世界(即場景), 而在 Webots 中所謂場景:</p>
<p>A <strong>World</strong> is a file containing information like where the objects are, what they look like, how they interact with each other, what is the color of the sky, and the definitions of gravity, friction, masses of the objects, etc. It defines the initial state of a simulation. The different objects are called <strong>Nodes</strong> and are organized hierarchically in a <strong>Scene Tree</strong>. Therefore, a node may contain sub-nodes. A world is stored in a file having the <code>.wbt</code> extension. The file format is derived from the <a href="/downloads/vrml97specification.pdf">VRML97</a> language, and is human readable. The world files must be stored directly in a directory called <code>worlds</code>.</p>
<p>Webots 場景中包含以下定義:</p>
<ol>
<li>物件所在位置</li>
<li>物件的外形</li>
<li>物件如何互動</li>
<li>天空的顏色</li>
<li>地心引力的定義</li>
<li>摩擦力</li>
<li>物件的質量</li>
<li>模擬的起始條件</li>
<li>其他有關模擬的設定等</li>
</ol>
<p>場景中的物件稱為節點, 各節點配置於場景樹中, 各節點可以再包含子節點, 場景的檔案格式源自 VRML97 程式語法 (<a href="/downloads/vrmlman.pdf">VRML Primer and Tutorial</a>), 場景的檔案副檔名為 .wbt, 且一定要存入名稱為 worlds 的目錄中.</p>
<p>Webots 模擬選單功能說明: <a href="https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu">https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu</a> 其中著色選單可以關閉場景中的畫面, 主要配合基因演算、視覺辨識或機器學習流程中的快速模擬流程.</p><h2>Fourbar</h2>
<h4>onelink</h4>
<p><a href="/downloads/onelink_webots.7z">onelink_webots.7z</a> (直接採 Shape 建模)</p>
<p><a href="/downloads/fourbar_box_w8.7z">fourbar_box_w8.7z</a> (將 joint4 接在 link3 末端, 然後 <a href="https://cyberbotics.com/doc/reference/solidreference">solidReference</a> 參照到內定的 &lt;static environment&gt;, 表示將 link3 末端的 joint4 直接固定在 base 上 (固定點)</p>
<p><a href="/downloads/onelink_slvs.7z">onelink_slvs.7z</a> (利用 Solvespace 繪製組立檔案, 轉為 STL 後, 再分割為 STL 零件與 OBJ 零件後, 將 OBJ 零件 import 進 Blender 確認零件名稱, 各 OBJ 零件分別利用 Solid 與 CadShape 節點建立從屬關係, 最後加入 hinge 旋轉軸與 Python 控制程式, 讓單一機械臂以 30deg/s 速度轉動)</p>
<p style="padding-left: 30px;">onelink_w_hinge.wbt 直接在場景樹狀結構中定義 Solid (可用於較簡單的零組件系統)</p>
<p style="padding-left: 30px;">onelink_w_hinge2.wbt 則將各零件以 PROTO 定義為原型節點, 之後在場景中導入後引用 (適合較複雜的零組件系統)</p>
<h4>fourbar1</h4>
<p>以下利用 box 建立 Webots 平面四連桿場景:</p>
<p>層次結構：</p>
<p style="padding-left: 30px;">Robot → BASE</p>
<p style="padding-left: 30px;">Robot → JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3</p>
<p style="padding-left: 30px;">Robot → JOINT4 (closed chain 約束)</p>
<p><img caption="false" height="183" src="/images/Webots_fourbar_box_tree.png" width="200"/></p>
<p>base shape and coordinate setup:</p>
<p>建立 Box 時的局部座標系統原點位於 Box Shape 中心, 由於 Box x 方向長度 1m, 因此將整體往 x 方向移動長度的一半 (即 0.5m), 可讓隨後定位完成的 link1 依照此座標系統指定旋轉中心.</p>
<p><img alt="" height="209" src="/images/Webots_base_coord_setup.png" width="200"/></p>
<p>幾何關係：</p>
<p style="padding-left: 30px;">所有關節都繞 z 軸旋轉</p>
<p style="padding-left: 30px;">連桿長度分別為 0.4m、0.6m、0.9m</p>
<p style="padding-left: 30px;">基座長度為 1m</p>
<p>物理特性：</p>
<p style="padding-left: 30px;">所有連桿質量為 0.1kg</p>
<p style="padding-left: 30px;">使用密度為 -1 表示質量優先於密度</p>
<p style="padding-left: 30px;">馬達最大速度 1rad/s，最大扭矩 100N⋅m</p>
<p>控制系統：</p>
<p style="padding-left: 30px;">使用 "fourbar_controller" 控制器</p>
<p style="padding-left: 30px;">包含位置感測器和馬達裝置</p>
<p><a href="/downloads/fourbar_box.7z">fourbar_box.7z</a></p>
<p>1.</p>
<p><img alt="" height="222" src="/images/webots_w5_1.png" width="231"/></p>
<p>2.</p>
<p><img alt="" height="367" src="/images/webots_w5_2.png" width="245"/></p>
<p>3.</p>
<p><img alt="" height="270" src="/images/webots_w5_3.png" width="253"/></p>
<p>4.</p>
<p><img alt="" height="322" src="/images/webots_w5_4.png" width="800"/></p>
<p>5.</p>
<p><img alt="" height="470" src="/images/webots_w5_5.png" width="363"/></p>
<p>6.</p>
<p><img alt="" height="332" src="/images/webots_w5_6.png" width="800"/></p>
<p>7.</p>
<p><img alt="" height="389" src="/images/webots_w5_7.png" width="800"/></p>
<p>8.</p>
<p><img alt="" height="331" src="/images/webots_w5_8.png" width="295"/></p>
<h4>handon1</h4>
<p>啟動 Webots 2025a:</p>
<p style="padding-left: 30px;">啟動可攜程式系統後, 可以在 cmd 命令視窗中執行 webotsw, 就可以啟動 Webots.</p>
<p>建立 Robot 模擬場景:</p>
<p style="padding-left: 30px;">建立模擬場景可以在既有的 WorldInfo、ViewPoint、TextureBackground 以及 TextureBackgroundLight, 建立一個 Robot 節點.</p>
<p>利用 children 數列節點, 納入子節點:</p>
<p style="padding-left: 30px;">之後的物件節點都可以在 Robot 節點中的 children 數列節點中建立, Robot 與 Solid 節點中都包含 children 數列節點, 表示這樣的節點可以透過 children 放入更多的子節點, 其中更包括將其他 Robot 與 Solid 節點納入作為子節點.</p>
<p>在 Shape 節點中建立標準物件:</p>
<p style="padding-left: 30px;">至於 Shape 節點中, 就沒有 children 數列節點的設置, 只能根據其既有的節點屬性進行配置. 相較於 Solid 節點 Shape 節點的功能只能放入對應的標準物件, 例如: 目前這個範例會用到的 Box.</p>
<p>物件的移動與旋轉:</p>
<p style="padding-left: 30px;">而 Robot 與 Solid 節點, 除了本身具備座標轉換的平移及旋轉術性外, 還能利用其中的 children 數列節點, 加入 Pose 節點進行子節點內的座標轉換, 還可利用 Transform 節點調整物件的 scale.</p>
<p>利用 CAD 繪圖 (Solvespace 或 Siemens NX) 協助機構定位:</p>
<p style="padding-left: 30px;">本頁面的目的是利用 Webots 的 box 建立一個平面四連桿機構的模擬場景, 機構的尺寸設計必須從 Solvespace 的繪圖開始, 除了選擇各桿件的尺寸外, 還需提供各連桿的初始位置以及連桿方位, 才能透過 HingeJoint 以及 SolidReference 等兩個節點的配置, 完成平面四連桿的封閉機構約束設置.</p>
<p>物件的座標系統:</p>
<p style="padding-left: 30px;">在 Webots 中建立模擬場景, 很重要的一項工作就是確認每一個物件場景的座標系統, 尤其是在某一物件節點中配置各種 Joint 之後, 隨後接在此 Joint 上的物件都將依據其 parent 座標系統定位.</p>
<p>連接軸樹狀架構與 CoppeliaSim 的差異:</p>
<p style="padding-left: 30px;">此外 Webots 在配置 Joint 時的樹狀結構與 CoppeliaSim 有很大的差別, CoppeliaSim 的 Joint 物件位階是設定為 parent 物件的子物件, 而 Weobts 場景中的 Joint 節點則必須配置成與其 parent 節點相同位階.</p>
<p>利用 Box 建立平面四連桿模擬場景:</p>
<p style="padding-left: 30px;">以下的配置圖是希望平面四連桿的固定桿件長度為 1m, 且透過 Top view 視圖觀測時, 會水平置放. 在 Robot 節點中的 children 建立 Solid 時使用 DEF 命名為 base, 隨後若要使用此 Solid, 就可以透過 USE base 引用.</p>
<p style="padding-left: 30px;">但若此 DEF 命名物件之後, 內部的 Solid 物件自行移動 (例如: 透過 Pose), 則利用 USE base 作為 boundingObject 時, 也必須配合 Pose 移動至 Solid 所在位置. 如此才可在物件的碰撞檢測中, 正確配置物件的實體範圍.</p>
<p>起始座標定位方法一:</p>
<p>為了之後在此固定節點的左側建立 joint1, 因此將 base 平移 0.5m, 以便讓隨後配置的 HingeJoint 可以採用此座標系統進行配置. 但利用滑鼠點選 DEF base Solid 時, 可以發現物件的座標系統仍位於其物件中心:</p>
<p><img caption="false" height="201" src="/images/webots_obj_coord.png" width="400"/></p>
<p>但若將滑鼠停到 Robot 的節點上, 目前的廣域座標系統已經因為 translation 0.5 0 0 而移動到 base 的最左側, 因此隨後配置的 HingeJoint 將會依照此廣域座標系統進行後續配置:</p>
<p><img alt="" height="200" src="/images/webots_robot_coord.png" width="400"/></p>
<p>起始座標定位方法二:</p>
<p>上列做法在一開始就先移動 base 物件, 讓隨後的 Joint1 定位中心可直接位於 base 左端. 若 base 物件不希望移動 (當 base 連桿與其他機構有特定對應位置時), 則隨後的 Joint1 就必須以 base 物件的中心點座標為基準, 然後在此基準建立 link1 物件之後, 先將 link1 移動至 base 最左端後旋轉 90 度, 這時的 x 軸將向上為正, 只要再沿著 x 軸移動 link1 長度的一半, 就可以完成 link1 的定位.</p>
<p>至於採用此方法的 Joint1 參考座標原點是位於 base 的中心點, 因此 link1 以 Joint1 旋轉的 anchor 中心點座標必須設為 -0.5 0 0.</p>
<p>之後的 link2 與 Joint2 的相關設置, 也可以採用先移動物件中心再旋轉至該連桿的起始方位後, 再對機構進行 x 軸方向的移動, 且對應旋轉的 Joint2 anchor 也必須配合設置當下的連桿參考座標系統.</p>
<p>box 平面四連桿的 Robot 節點架構:</p>
<p style="padding-left: 30px;">在 BASE 物件上設置兩個旋轉軸 (JOINT1 與 JOINT4):</p>
<p style="padding-left: 30px;">其中的 JOINT1 上將接 link1, link1 上接 JOINT2, JOINT2 上接 link2, link2 上接 JOINT3, JOINT3 上接 link3, 意即從 BASE 上接了三個 joints, 以及三個 links, 形成一個 open chain 機構.</p>
<p style="padding-left: 30px;">然後在 JOINT4 連接 link3 的設置時, 透過 SolidReference 節點, 指定 link3 作為 solidName 後, 將此條件作為 closed chain 的約束運算.</p>
<p style="padding-left: 30px;">再加上從 CAD 繪圖中取得的各連桿起始位置, 就可以結合連桿的 physics 與 boundingObject 屬性設置, 完成 Webots 上的平面四連桿場景.</p>
<p><img alt="" height="163" src="/images/Webots_box_fourbar1.png" width="200"/></p>
<p>在 BASE 上配置 JOINT1, JOINT1 末端配置 LINK1, LINK1 上再配置 JOINT2 的樹狀架構圖如下:</p>
<p><img caption="false" height="313" src="/images/Webots_box_fourbar2.png" width="250"/></p>
<p>將 Robot 命名為 four_bar_linkage, 並利用名稱為 fourbar_controller 的控制器進行控制:</p>
<p><img caption="false" height="304" src="/images/Webots_box_fourbar3.png" width="400"/></p>
<h4>fourbar2</h4>
<p>Webots 中平面四連桿機構的設置方式：</p>
<p>四連桿結構應該是：</p>
<ol>
<li>
<p><strong>第一條運動鏈</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT1</li>
<li>JOINT1 連接 LINK1</li>
<li>LINK1 上的 JOINT2 連接 LINK2</li>
<li>LINK2 上的 JOINT3 連接 LINK3</li>
</ul>
</li>
<li>
<p><strong>第二條運動鏈（closed chain）</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT4</li>
<li>JOINT4 的 endPoint 設為 SolidReference</li>
<li>SolidReference 的 solidName 設為 "LINK3"</li>
</ul>
</li>
</ol>
<p>這樣的結構是正確的，因為：</p>
<ol>
<li>主要運動鏈（JOINT1 → LINK1 → LINK2 → LINK3）形成一個序列結構</li>
<li>閉鎖鏈（JOINT4 → LINK3）通過 SolidReference 連接回主鏈的末端</li>
<li>這樣可以形成一個完整的閉環運動結構</li>
</ol>
<p>基本結構示意：</p>
<p>BASE<br/>├── JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3<br/>└── JOINT4 ------(SolidReference: "LINK3")--------┘</p>
<p>PROTO 結構：</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">Robot {
  children [
    BASE {
      ...
    }
    HingeJoint {  # JOINT1
      endPoint Solid {  # LINK1
        children [
          ...
          HingeJoint {  # JOINT2
            endPoint Solid {  # LINK2
              children [
                ...
                HingeJoint {  # JOINT3
                  endPoint Solid {  # LINK3
                    ...
                  }
                }
              ]
            }
          }
        ]
      }
    }
    HingeJoint {  # JOINT4
      endPoint SolidReference {
        solidName "LINK3"
      }
    }
  ]
}</pre>
<p>上列設置確保：</p>
<ol>
<li>機構能夠正確形成閉環</li>
<li>運動學約束能夠正確傳遞</li>
<li>物理模擬能夠正常進行</li>
</ol>
<p>此外，為了使機構運作正常，還需要：</p>
<ol>
<li>正確設置各個 joint 的旋轉軸（axis）</li>
<li>準確定義各個 joint 的錨點（anchor）</li>
<li>確保所有連桿的物理屬性正確設置</li>
</ol>
<p><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<h4>DEF</h4>
<p><a href="https://cyberbotics.com/doc/reference/def-and-use">https://cyberbotics.com/doc/reference/def-and-use</a></p>
<p>Although it is permitted to name any node using the DEF keyword, <span style="background-color: #ffff99;">there are some exceptions where USE nodes are not valid. A USE node is an exact copy of the corresponding DEF node, and thus no property of a USE node can change independently from the DEF node.</span></p>
<p>For this reason it is not allowed to insert USE nodes of <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/solid">Solid</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/joint">Joint</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/jointparameters">JointParameters</a>, <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/trackwheel">TrackWheel</a>, and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/balljointparameters">BallJointParameters</a> nodes and their derived nodes. Indeed, the ability for identical solids or joints to occupy the same position is useless, if not hazardous, in a physics simulation. To safely duplicate one of these nodes, you can design a <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/proto">PROTO</a> model for this node and then add different PROTO instances to your world.</p>
<p>The same principle applies to <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/material">Material</a> and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/light">Light</a> nodes located in the first child of <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/charger">Charger</a> and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/led">LED</a> nodes whose emissive color changes automatically based on the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/charger">Charger</a> energy and <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/led">LED</a> setup.</p>
<p>Also the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/texturetransform">TextureTransform</a> of the first <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/shape">Shape</a> in the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/track">Track</a> device with enabled texture animation cannot be a USE node given that the translation values will be automatically updated by Webots while the <a class="dynamicLoad" href="https://cyberbotics.com/doc/reference/track">Track</a> device is moving.</p>
<p><strong>Webots</strong> 使用 <strong>DEF</strong> 和 <strong>USE</strong> 關鍵字來命名和重複使用節點的限制：</p>
<ol>
<li>
<p><strong>DEF 和 USE 節點：</strong></p>
<ul>
<li>
<p><code>DEF</code> 關鍵字用來命名一個節點，這個節點可以在場景中多次使用。</p>
</li>
<li>
<p><code>USE</code> 節點是 <code>DEF</code> 節點的精確複製，因此 <code>USE</code> 節點的所有屬性都會與它所引用的 <code>DEF</code> 節點完全相同，無法獨立修改其屬性。</p>
</li>
</ul>
</li>
<li>
<p><strong>某些節點不能使用 USE：</strong></p>
<ul>
<li>
<p>有些節點不能作為 <code>USE</code> 節點使用，這些節點包括 <span style="background-color: #ffff99;"><strong>Solid</strong>、<strong>Joint</strong>、<strong>JointParameters</strong>、<strong>TrackWheel</strong> 和 <strong>BallJointParameters</strong> 節點以及它們的衍生節點</span>。原因是，在物理仿真中，讓相同的實體或關節出現於相同位置是沒有意義的，甚至會帶來危險。例如，物理仿真需要每個實體或關節能夠獨立運動和改變位置，使用 <code>USE</code> 節點可能會導致錯誤的物理行為。</p>
</li>
<li>
<p>若要安全地重複這些節點，應該使用 <strong>PROTO</strong> 模型來設計這些節點，並為每個需要的實例創建不同的 <strong>PROTO</strong> 實例，這樣可以避免重複的節點引起問題。</p>
</li>
</ul>
</li>
<li>
<p><strong>特殊節點的限制：</strong></p>
<ul>
<li>
<p>同樣的原則也適用於某些特殊節點，如 <span style="background-color: #ffff99;"><strong>Material</strong> 和 <strong>Light</strong> 節點</span>，這些節點通常是位於 <strong>Charger</strong> 和 <strong>LED</strong> 節點的第一個子節點內。這些節點的發光顏色會根據充電器的能量或 LED 的設置自動變化，因此不能用 <code>USE</code> 來複製，否則會引起不一致的行為。</p>
</li>
</ul>
</li>
<li>
<p><strong>Track 設備的限制：</strong></p>
<ul>
<li>
<p>如果 Track 設備啟用了紋理動畫，則 Track 設備中的第一個 <strong>Shape</strong> 節點的 <strong>TextureTransform</strong> 也不能使用 <code>USE</code>。這是因為 Webots 會在 Track 設備移動時自動更新其平移（Translation）值，使用 <code>USE</code> 節點會使這些自動更新失效，從而導致動畫或行為不正確。</p>
</li>
</ul>
</li>
</ol>
<p>Forbar Linkage the first link:</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">#VRML_SIM R2025a utf8

EXTERNPROTO "../protos/TexturedBackground.proto"
EXTERNPROTO "../protos/TexturedBackgroundLight.proto"

WorldInfo {
  info [
    "fourbar linkage"
  ]
}
Viewpoint {
  orientation -0.17524366601960317 0.20799757991102616 0.9623027924053665 1.7913508311753839
  position 1.0571588458938594 -2.502126861220829 1.490364369030099
}
TexturedBackground {
}
TexturedBackgroundLight {
}
DEF FOURBAR Robot {
  children [
    DEF BASE Solid {
      children [
        CadShape {
          url [
            "../split_parts/base.obj"
          ]
        }
      ]
      name "BASE"
    }
    DEF JOINT1 HingeJoint {
      jointParameters HingeJointParameters {
        axis 0 0 1
      }
      device [
        RotationalMotor {
          name "joint_motor1"
        }
      ]
      endPoint DEF LINK1 Solid {
        children [
          CadShape {
            url [
              "../split_parts/link1.obj"
            ]
          }
        ]
        name "LINK1"
      }
    }
  ]
}
</pre>
<p>Webots 中平面四連桿機構的設置方式：</p>
<p>四連桿結構應該是：</p>
<ol>
<li>
<p><strong>第一條運動鏈</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT1</li>
<li>JOINT1 連接 LINK1</li>
<li>LINK1 上的 JOINT2 連接 LINK2</li>
<li>LINK2 上的 JOINT3 連接 LINK3</li>
</ul>
</li>
<li>
<p><strong>第二條運動鏈（closed chain）</strong>：</p>
<ul>
<li>從 BASE 出發的 JOINT4</li>
<li>JOINT4 的 endPoint 設為 SolidReference</li>
<li>SolidReference 的 solidName 設為 "LINK3"</li>
</ul>
</li>
</ol>
<p>這樣的結構是正確的，因為：</p>
<ol>
<li>主要運動鏈（JOINT1 → LINK1 → LINK2 → LINK3）形成一個序列結構</li>
<li>閉鎖鏈（JOINT4 → LINK3）通過 SolidReference 連接回主鏈的末端</li>
<li>這樣可以形成一個完整的閉環運動結構</li>
</ol>
<p>基本結構示意：</p>
<p>BASE<br/>├── JOINT1 → LINK1 → JOINT2 → LINK2 → JOINT3 → LINK3<br/>└── JOINT4 ------(SolidReference: "LINK3")--------┘</p>
<p>PROTO 結構：</p>
<pre class="brush:wbt;auto-links:false;toolbar:false" contenteditable="false">Robot {
  children [
    BASE {
      ...
    }
    HingeJoint {  # JOINT1
      endPoint Solid {  # LINK1
        children [
          ...
          HingeJoint {  # JOINT2
            endPoint Solid {  # LINK2
              children [
                ...
                HingeJoint {  # JOINT3
                  endPoint Solid {  # LINK3
                    ...
                  }
                }
              ]
            }
          }
        ]
      }
    }
    HingeJoint {  # JOINT4
      endPoint SolidReference {
        solidName "LINK3"
      }
    }
  ]
}</pre>
<p>上列設置確保：</p>
<ol>
<li>機構能夠正確形成閉環</li>
<li>運動學約束能夠正確傳遞</li>
<li>物理模擬能夠正常進行</li>
</ol>
<p>此外，為了使機構運作正常，還需要：</p>
<ol>
<li>正確設置各個 joint 的旋轉軸（axis）</li>
<li>準確定義各個 joint 的錨點（anchor）</li>
<li>確保所有連桿的物理屬性正確設置</li>
</ol>
<p><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<h3>w10</h3>
<p><a href="/downloads/w10_2b_hw1_hw2_demo.7z">w10_2b_hw1_hw2_demo.7z</a></p>
<p>以下模擬將 joint4 定在 link3 末端, 然後透過 SolidReference 指定為 &lt;static environment&gt;, 表示此 joint4 必須固定在地面.</p>
<p>與 <a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a> 在引用 obj 格式零件上的差異在於: 使用 Solid - Shape - Mesh 節點導入的 CAD 繪製零件, 無需如 Solid - CadShape 必須透過 .mtl 修改導入零件的顏色, Shape 節點可以直接置入 Material 欄位, 透過 diffuseColor 改變零件顏色.</p>
<p><img alt="" height="326" src="/images/w10_2b_joint4_on_link3.png" width="400"/></p>
<p>有關 CadShape:</p>
<p>The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/cadshape#cadshape">CadShape</a> node renders a Collada (.dae) or Wavefront (.obj) object imported from an external file. <span style="background-color: #ccffcc;">Both Collada and Wavefront files can include 3D geometries and appearances, be it materials or references to external textures, therefore the <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/cadshape#cadshape" style="background-color: #ccffcc;">CadShape</a> node builds both</span>. If the file references external textures, these should be placed relative to the collada/wavefront file itself as indicated (i.e., in the location expressed within the .dae/.obj file), no additional search is performed for these textures.</p>
<p>假如希望導入的零件使用外部的材質檔案進行調控, 可以使用 CadShape 節點, 以 .dae 或 .obj 導入.</p>
<p>有關 Mesh:</p>
<p>The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/mesh#mesh">Mesh</a> node represents a 3D shape imported from an external file created by a 3D modeling software. <span style="background-color: #ccffcc;">The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/reference/mesh#mesh" style="background-color: #ccffcc;">Mesh</a> node can be used either as a graphical or as a collision detection primitive (in a boundingObject)</span>. Currently, the following formats are supported:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/COLLADA" target="_blank">Collada</a> files (.dae).</li>
<li><a href="https://en.wikipedia.org/wiki/STL_(file_format)" target="_blank">STL</a> files (.stl).</li>
<li><a href="https://wiki.fileformat.com/3d/obj" target="_blank">Wavefront</a> files (.obj).</li>
</ul>
<p>If the file contains more than one mesh, the meshes will be merged into a single one.</p>
<p>Mesh 可以接受 .dae、stl 或 .obj 檔案格式零件, 且可用於零件外形與碰撞檢測用 (CadShape 節點則只能用於零件外形展示, 而不能用於碰撞檢測).</p><h2>Stage1</h2>
<p>學習利用 Webots 建立模擬場景的第一階段工作, 是認識其套件功能表與場景所需的目錄及檔案架構. 並且學習如何利用控制器程式操縱場景中的物件. 這也是 <a href="https://mde.tw/cd2025/content/Tutorial1.html">Tutorial1</a> 操作的主要目的.</p>
<p style="padding-left: 30px;">worlds 儲存 .wbt 場景檔案</p>
<p style="padding-left: 30px;">protos 儲存 .proto 原形節點檔案</p>
<p style="padding-left: 30px;">controllers 儲存控制器程式檔案</p>
<p style="padding-left: 30px;">plugins 儲存用來延伸 Webots 物理特性的 C 或 C++ 程式檔案, 例如: <a href="https://raw.githubusercontent.com/cyberbotics/webots/refs/heads/released/resources/projects/plugins/physics/physics.c">physics.c</a></p>
<p style="padding-left: 30px;">libraries 儲存場景中與 controllers 或 plugins 目錄中相關程式的共用程式庫檔案</p>
<p><a href="https://mde.tw/cd2025/content/Tutorial2.html">Tutorial2</a> 則說明如何使用 Webots 內建的基本幾何物件, 其中的物件幾何外形除了用於動力系統的運動方程式, 還可用於物體移動時的碰撞檢測. 建立物件時必須遵照 Solid - Shape - geometry 的樹狀結構規劃, 按照順序配置物件.</p>
<p>其中 Solid - Shape - geometry Box 可以直接使用內建的幾何節點定義零件外形, 而 Solid - Shape - geometry Mesh 則可以導入自行繪製的 STL 或 OBJ 零件檔案, 而 Solid - CadShape 也可以導入 OBJ 零件檔案, 與 geometry Mesh 的差別為 Solid - Shape - geometry Mesh 可以直接在 Webots 中設定零件顏色, 而 Solid - CadShape 則由 OBJ 伴隨的 .mtl 決定其顏色與材質.</p><h3>Tutorial1</h3>
<p>導引課程<br/><br/>本章的目的是解說 Webots 的基本概念，這些概念是自行創建模擬場景 (.wbt) 時必須用到的。學習重點在於熟悉機器人及其環境的模型建構流程，以及機器人控制器 (controllers) 的程式設計。進而學習如何尋找額外的教學資料。<br/><br/>本章適合 Webots 的初學者。不過，仍然需要有程式設計 (Programming) 的背景。範例是用 Python 語言編寫的。如果您不熟悉 Python 語言，透過基本說明應該還是能夠理解本章的控制器寫法，因為下面的 Python 程式非常簡單。除了程式設計，您不需要任何特定的知識即可完成本章中的教程。然而，基本的機器人學 (Robotcs)、數學 (Mathematics)、模型建構 (Modeling) 和樹狀表示法 (Tree representation) 的背景知識可能會有所幫助。有經驗的 Webots 使用者可以跳過最初的教程。不過，我們建議至少能花點時間閱讀這些教程的介紹和結論。<br/><br/>本章的每個部分（除了第一和最後一部分）都是一個導引課程。每個導引課程都有一個明確的教育目標，並在第一段中進行解釋。獲得的概念隨後會在結論子部分中總結。每一個導引課程都被設計成一系列互動操作步驟。要繼續進行下一個教程，通常需要掌握前一個教學中獲得的知識。因此，我們強烈建議按照導引所安排的順序進行。此外，我們建議在繼續進一步之前，確保已經理解了導引課程中的所有概念。<br/><br/>最後一部分將提供一些解決本章未涉及問題的提示。<br/><br/>導引課程的解決方案位於 Webots 安裝目錄的 "WEBOTS_HOME/projects/samples/tutorials" 子目錄中。</p>
<p>導引課程 1：在 Webots 中進行首次模擬<br/><br/>目標<br/><br/>本導引課程的目標是讓您熟悉用戶界面和 Webots 的基本概念。您將創建一個包含簡單環境的首次模擬：一個帶有地板和牆壁的競技場、幾個箱子、一個 e-puck 機器人和一個使機器人移動的控制程式。<br/><br/>步驟<br/><br/>1. 啟動 Webots：在您的電腦上打開 Webots (假如使用協同產品設計課程的可攜套件，啟動後在命令列中輸入 webotsw 即可開啟 Webots, 若要同時啟動串流伺服器，則可輸入 webotsw --stream，之後可利用瀏覽器在伺服器的 IP 位址上以串流內建埠號 1234 連接觀看場警)。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #1：通過雙點擊 Webots 圖標（或在終端中從命令行調用）來啟動 Webots。如果您是第一次在此電腦上運行 Webots，可能會提示您選擇圖形主題。您也可能被邀請參加 Webots 指導遊覽，請關閉指導遊覽。</span></p>
<p>2. 創建新世界：<br/>    - 轉到 File -&gt; New World。<br/>    - 使用適當的名稱保存新世界文件，例如 my_first_simulation.wbt。</p>
<p>3. 添加競技場：<br/>    - 在場景樹中，右鍵點擊 root 並選擇 Add New -&gt; Solid。<br/>    - 將新固體重命名為 arena 並為其添加 Shape。<br/>    - 將其幾何形狀設置為 Box，並設置適當的尺寸（例如，1m x 1m x 0.01m）來表示地板。<br/>    - 為形狀添加 Material 並設置其顏色。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #2：通過點擊 3D 視圖的暫停按鈕來暫停當前模擬（請參閱用戶界面描述以找到按鈕）。如果主工具欄上的虛擬時間計數器停止，則模擬被暫停。從 File / New / New Project Directory... 菜單項創建一個新項目並按照說明進行：</span><br/><br/><span style="background-color: #ccffcc;">1. 將項目目錄命名為 my_first_simulation，而不是建議的 my_project。</span><br/><span style="background-color: #ccffcc;">2. 將世界文件命名為 my_first_simulation.wbt，而不是建議的 empty.wbt。</span><br/><span style="background-color: #ccffcc;">3. 點擊所有選框，包括默認未選中的 "Add a rectangle arena"。</span></p>
<p>4. 添加牆壁：<br/>    - 重複該過程以在競技場周圍添加四面牆壁。<br/>    - 調整它們的位置和尺寸以適合地板周圍。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #3：在場景樹中雙擊 RectangleArena 節點。這應該會打開該節點並顯示其字段。</span><br/><br/><span style="background-color: #ccffcc;">1. 選擇 floorTileSize 字段並將其值設置為 0.25 0.25 而不是 0.5 0.5。您應該立即在 3D 視圖中看到效果。</span><br/><span style="background-color: #ccffcc;">2. 選擇 wallHeight 字段並將其值更改為 0.05 而不是 0.1。競技場的牆壁現在應該變得更低。</span></p>
<p>5. 添加箱子：<br/>    - 在競技場內添加幾個箱子作為障礙物。<br/>    - 根據您的喜好設置它們的位置和尺寸。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #4：在場景樹中雙擊 RectangleArena 以將其關閉並選中它。點擊場景樹頂部的添加按鈕。在打開的對話框中，選擇 PROTO nodes (Webots Projects) / objects / factory / containers / WoodenBox (Solid)。一個大箱子應該會出現在競技場的中央。在場景樹中雙擊它以打開其字段。</span><br/><br/><span style="background-color: #ccffcc;">1. 將其尺寸更改為 0.1 0.1 0.1 而不是 0.6 0.6 0.6。</span><br/><span style="background-color: #ccffcc;">2. 將其平移更改為 0 0 0.05 而不是 0 0 0.3。或者，您可以使用 3D 視圖中出現的藍色箭頭來調整其 translation.z 字段。</span><br/><span style="background-color: #ccffcc;">3. 現在按住 Shift 鍵並在 3D 視圖中拖動箱子，將其移動到競技場的某個角落。</span><br/><span style="background-color: #ccffcc;">4. 選擇箱子並按 ctrl-C，ctrl-V（Windows，Linux）或 ⌘ command-C，⌘ command-V（macOS）來複製和粘貼它。按住 Shift 鍵並拖動新箱子將其移動到某個不同的位置。以這種方式創建第三個箱子。</span><br/><span style="background-color: #ccffcc;">5. 移動箱子，使競技場中央沒有箱子。您也可以使用藍色旋轉箭頭沿垂直軸旋轉箱子。這也可以通過按住 Shift 鍵並用右鍵拖動來完成。或者，您可以更改場景樹中 WoodenBox 節點的旋轉字段的角度。</span><br/><span style="background-color: #ccffcc;">6. 一旦您對結果滿意，請使用保存按鈕保存世界。</span></p>
<p>6. 添加 e-puck 機器人：<br/>    - 在場景樹中，右鍵點擊 root 並選擇 Add New -&gt; Robot。<br/>    - 從可用機器人列表中選擇 e-puck 機器人。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #5：選擇場景樹視圖中的最後一個節點 WoodenBox。點擊場景樹視圖頂部的添加按鈕。在對話框中，選擇 PROTO nodes (Webots Projects) / robots / gctronic / e-puck / E-puck (Robot)。一個 e-puck 機器人應該會出現在競技場的中央。像移動和旋轉箱子一樣移動和旋轉這個機器人。保存模擬並按下實時運行按鈕。</span></p>
<p>7. 創建控制程式：<br/>    - 在場景樹中右鍵點擊 e-puck 並選擇 Add New -&gt; Controller。<br/>    - 選擇以 Python 程式語法創建一個新的控制器文件（例如，epuck_controller.py）並編寫一個簡單的程式來使機器人移動。例如：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from controller import Robot, Motor  # 從 controller 模組導入 Robot 和 Motor 類別

TIME_STEP = 64  # 設置時間步長為 64 毫秒

# 創建 Robot 實例
robot = Robot()

# 擷取電機設備
leftMotor = robot.getDevice('left wheel motor')  # 獲取左側輪子電機設備
rightMotor = robot.getDevice('right wheel motor')  # 獲取右側輪子電機設備

# 設置電機的目標位置
leftMotor.setPosition(10.0)  # 設置左側輪子電機的目標位置為 10.0
rightMotor.setPosition(10.0)  # 設置右側輪子電機的目標位置為 10.0

while robot.step(TIME_STEP) != -1:  # 當機器人步進時間步長不等於 -1 時（模擬仍在運行）
    pass  # 什麼也不做，保持循環運行</pre>
<p>8. 保存並運行模擬：<br/>    - 保存您的世界文件。<br/>    - 點擊 Play 按鈕運行模擬並觀察機器人移動。<br/><br/>結論<br/><br/>在本導引課程中，您已經學習了如何在 Webots 中創建一個簡單的模擬，包括添加競技場、牆壁、障礙物和 e-puck 機器人。您還創建了一個基本的控制程式來使機器人移動。本導引課程已經為您探索 Webots 更進階功能提供了充實的基礎。</p><h3>Tutorial2</h3>
<p>導引課程 2：修改環境<br/><br/>在本導引課程中，我們將教您如何在環境中創建簡單的物件。第一步將是創建一個與環境互動的球。我們將處理與節點相關的幾個概念：它們的含義是什麼，如何創建它們，它們如何必須隸屬等等。此外，我們還將看到如何設置物理效果。<br/><br/>將介紹幾種節點類型。它們的詳細定義可以在<a href="https://cyberbotics.com/doc/reference/nodes-and-api-functions">參考手冊</a>中找到。將<a href="https://cyberbotics.com/doc/reference/node-chart">節點圖表</a>放在您面前，將有助於理解節點的繼承關係。</p>
<p>一個新的模擬<br/><br/>首先，我們基於教程 1 中創建的模擬來創建一個新的模擬。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #1：確保 my_first_simulation.wbt 世界文件已打開，並且模擬已暫停且虛擬時間為 0。使用 File / Save World As... 菜單將模擬保存為 obstacles.wbt。</span></p>
<p>修改地板<br/><br/>內定的 RectangleArena PROTO 定義了一個簡單的地板，固定在靜態環境中，沒有物理節點，四周則被牆壁包圍。Webots 物件庫中還有其他預製的地板。我們現在將刪除 RectangleArena 節點，並添加一個簡單的地板，稍後在本教程中我們將手動用牆壁圍繞它。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #2：要刪除 RectangleArena，請在 3D 視圖或場景樹視圖中選中它，然後按鍵盤上的 del 鍵。或者，您可以在 3D 視圖中右鍵單擊它，然後在上下文菜單中選擇 Delete（您也可以直接在場景樹視圖中使用上下文表單）。選擇 TexturedBackgroundLight 節點並點擊添加按鈕。在打開的對話框中，選擇 PROTO nodes (Webots Projects) / objects / floors / Floor (Solid)。</span></p>
<p>新添加的 Floor PROTO 默認大小為 10 米 x 10 米，但可以通過更改相應的欄位 (field) 來調整其大小、位置和紋理。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #3：在場景樹視圖中選擇並展開 Floor。修改 size 欄位並將其設置為 {1, 1} 以將其調整為 1 米 x 1 米。</span></p>
<p><a href="https://cyberbotics.com/doc/reference/solid">Solid</a> 節點<br/><br/>本小節介紹了 Webots 中最重要的基礎節點：<a href="https://cyberbotics.com/doc/reference/solid">Solid</a> 節點，許多其他節點都從它衍生而來。<br/><br/><span style="background-color: #ffff99;"><a href="https://cyberbotics.com/doc/reference/solid" style="background-color: #ffff99;">Solid</a> 節點代表剛體</span>，即可以忽略變形的物體。剛體中任意兩點之間的距離無論外力如何作用，都保持恆定。例如桌子、機器人手指骨節或輪子都是剛體。軟體和關節物體不是剛體。例如繩子、輪胎、海綿或關節機器人手臂都不是剛體。然而，一個關節實體可以被分解成若干剛體。<br/><br/>Webots 的物理引擎設計用於模擬剛體。設計模擬時，一個重要的步驟是將各種實體分解為單獨的剛體。<br/><br/>要定義剛體，您需要創建一個 <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> 節點。在此節點內，您將設置對應於剛體特性的不同子節點。下圖描述了一個剛體及其子節點。<a href="https://cyberbotics.com/doc/reference/solid">Solid</a> 節點的圖形表示由填充其子級列表的形狀節點定義。碰撞範圍在其 boundingObject 欄位中定義。圖形表示和碰撞形狀通常但不必然相同。最後，<span style="background-color: #ffff99;">physics 欄位定義物體屬於動態環境還是靜態環境</span>。所有這些子節點都是可選的，但 physics 欄位設定時，需要同時定義 boundingObject。</p>
<p><img caption="false" height="248" src="/images/simplest_rigit_body_object.png" width="300"/></p>
<p>在 Webots 中，最簡單的剛體模型具有<span style="background-color: #ffff99;">幾何外形圖示</span> (以 Shape 中的 Geometry 標示其<span style="background-color: #ccffcc;">視覺外形</span>)、<span style="background-color: #ffff99;">物理邊界形體</span> (以 boundingObject 中的 Geometry 標示其<span style="background-color: #ccffcc;">碰撞檢測外形</span>) 並處於<span style="background-color: #ffff99;">動態環境</span> (以 physics 中的 Physics 標示其<span style="background-color: #ccffcc;">物理特性參數</span>) 中。<br/><br/>圖中的幾何框代表任何類型的幾何原始體。事實上，它可以被替換為球體、盒子、圓柱體等。</p>
<p>創建一個球<br/><br/>我們現在將在模擬中添加一個球。該球將被建模為剛體，如下圖所示。我們將使用 <a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a> 節點來定義我們球的幾何形狀。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #4：在場景樹視圖中，選擇最後一個節點並按「Add」按鈕。在對話框中，打開「Bases nodes」部分並選擇「<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>」節點。在場景樹視圖中，展開「<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>」節點並選擇其「children」欄位。使用「Add」按鈕向其添加一個「<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>」節點。選擇「<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>」節點的「appearance」欄位，並使用「Add」按鈕添加一個「PBRAppearance」節點。</span><br/><br/><span style="background-color: #ccffcc;">    添加一個「Sphere」節點作為新創建的「<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>」節點的幾何欄位。</span><br/><span style="background-color: #ccffcc;">    展開「PBRAppearance」節點，將其「metalness」欄位更改為 0，並將其「roughness」欄位更改為 1。</span><br/><span style="background-color: #ccffcc;">    向「<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>」的「boundingObject」欄位添加另一個「<a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a>」節點。</span><br/><span style="background-color: #ccffcc;">    最後，向「<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>」的「physics」欄位添加一個「Physics」節點。</span><br/><span style="background-color: #ccffcc;">    通過修改「<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>」節點的「translation」欄位，將球放置在機器人前面（例如在 {0.2, 0, 0.2}）。</span><br/><span style="background-color: #ccffcc;">    保存模擬。</span><br/><span style="background-color: #ccffcc;">    結果如下圖所示。</span></p>
<p><img alt="" height="157" src="/images/tutorial_ball.thumbnail.jpg" width="300"/></p>
<p>你的第一個 Webots 剛體<br/><br/>當模擬開始時，球會撞擊地板。您可以通過對球施加力來移動它（ctrl + alt + 左鍵單擊並拖動）。通過啟用 View / Optional Rendering / Show Contact Points 表單項，可以顯示球與地板之間的接觸點作為青色線條。</p>
<p>幾何體<br/><br/>為了定義球，我們在兩個不同的上下文中使用了 Sphere 節點：圖形表示 (graphical representation)（children）和定義物理邊界 (physical bounds)（boundingObject）。所有幾何節點（例如 Sphere 節點）都可以在圖形標示中使用。但是，只有其中的一部分可以在物理標示中使用。<a href="https://cyberbotics.com/doc/reference/node-chart">節點圖表</a>中則明確指出哪些節點可以用在何種標示。(這裡需要進一步說明各節點的適用情境)<br/><br/>我們現在將縮小球體的尺寸，並通過增加用於表示它的三角形數量來提高其圖形質量。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #5：對於定義球的每個 Sphere 節點，將其 radius 欄位設置為 0.05，將其 subdivision 欄位設置為 2。請參考 <a href="https://cyberbotics.com/doc/reference/sphere">sphere 手冊</a>了解 subdivision 欄位的含義。</span></p>
<p>DEF-USE 機制<br/><br/>DEF-USE 機制允許在一個地方定義一個節點，並在場景樹的其他地方重用該定義。這對於避免在世界文件中重複相同的節點非常有用。此外，它還允許用戶同時修改多個對象。其工作原理如下：首先使用 DEF 字符串標記一個節點。然後可以使用 USE 關鍵字在其他地方重用該節點的副本。只有 DEF 節點的欄位可以編輯，USE 節點的欄位繼承自 DEF 節點，無法更改。此機制依賴於世界文件中節點的順序。DEF 節點應在任何相應的 USE 節點之前定義。<br/><br/>我們之前用來定義球的兩個 Sphere 定義是冗餘的。我們現在將使用 DEF-USE 機制將這兩個 Sphere 合併為一個。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #6：在場景樹視圖中選擇第一個 Sphere 節點（Shape 的子節點）。場景樹視圖的欄位編輯器允許您輸入 DEF 字符串。</span><br/><br/><span style="background-color: #ccffcc;">    在此欄位中輸入 BALL_GEOMETRY。</span><br/><span style="background-color: #ccffcc;">    選擇 boundingObject 欄位（包含第二個 Sphere 節點），通過右鍵單擊該欄位並選擇彈出上下文菜單中的「Delete」條目來清空它。</span><br/><span style="background-color: #ccffcc;">    然後，選擇 boundingObject 欄位並單擊「Add」按鈕，在對話框中選擇 USE / BALL_GEOMETRY。</span><br/><span style="background-color: #ccffcc;">    結果如圖所示。</span></p>
<p>現在，更改第一個 Sphere 節點的 radius 欄位也會修改其 boundingObject。<br/><br/>為了方便起見，boundingObject 欄位也接受 <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> 節點（而不是直接接受 Sphere 節點）。同樣可以在 <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> 層級使用相同的 DEF-USE 機制，如下圖所示。目前最大的好處是能夠直接將此 <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> 用於圖形目的。稍後此機制對於某些傳感器將非常有用。</p>
<p><img alt="" height="157" src="/images/tutorial_def_use.thumbnail.jpg" width="300"/></p>
<p>在名為 BALL_GEOMETRY 的 Sphere 節點上使用 DEF-USE 機制。</p>
<p><img alt="" height="200" src="/images/tutorial2_DEF_USE.png" width="300"/></p>
<p>在 Solid 的<span style="background-color: #ffff00;">幾何體的 Sphere 節點上應用 DEF-USE 機制</span>。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #7：創建第二個球，使用相同的參數，但使用 <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> 節點（而不是直接使用 Sphere 節點）來實現 DEF-USE 機制。</span></p>
<p>添加牆壁<br/><br/>為了驗證您的進展，請自行實現四面牆來圍繞環境。這些牆必須靜態地定義到環境中。為了理解靜態和動態之間的區別，讓我們取一個地面上的定義物體（球）。如果 Physics 節點為 NULL，它將在模擬期間保持靜止在空中（靜態情況）。如果 physics 欄位包含 Physics 節點，它將在重力作用下掉落（動態情況）。<br/><br/>儘量在<a href="https://cyberbotics.com/doc/reference/shape">Shape</a> 層級使用 DEF-USE 機制，而不是在 Geometry 層級。確實，將中間 Shape 節點添加到 Solid 節點的 boundingObject 欄位中更方便。實現牆壁的最佳幾何原語是 <a href="https://cyberbotics.com/doc/reference/box">Box</a> 節點。所有牆壁只需定義一個 <a href="https://cyberbotics.com/doc/reference/shape">Shape</a>。預期結果如圖所示。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #8：添加四面牆，無需物理效果，並且只使用一個 Shape 節點的定義。</span></p>
<p>解決方案：世界文件<br/><br/>要將您的世界與解決方案進行比較，請進入您的文件並找到在<a href="https://mde.tw/cd2025/content/Tutorial1.html">導引課程1</a>中創建的名為 "my_first_simulation" 的文件夾，然後進入 "worlds" 文件夾並用文本編輯器打開相應的世界文件。此解決方案與其他解決方案位於 solution 目錄中。</p>
<p><img alt="" height="157" src="/images/tutorial_walls.thumbnail.jpg" width="300"/></p>
<p>在本教程結束時的模擬狀態。</p>
<p>效率<br/><br/>剛體的模擬計算代價高昂。通過最小化邊界對象的數量、最小化它們之間的約束（有關約束的更多信息在後續教程中），以及最大化 WorldInfo.basicTimeStep 欄位，可以提高模擬速度。在每次模擬中，必須在模擬速度和現實感之間找到權衡。</p>
<p>結論<br/><br/>在本教程結束時，您將能夠基於剛體創建簡單的環境。您能夠從場景樹視圖中添加節點並修改其欄位。您已經熟悉了 <a href="https://cyberbotics.com/doc/reference/solid">Solid</a>、Physics、<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>、Sphere 和 <a href="https://cyberbotics.com/doc/reference/box">Box</a> 節點。您還看到了 DEF-USE 機制，該機制允許減少場景樹的節點冗餘。</p><h2>Stage2</h2>
<p>Webots 進入第二階段, 包含零件的外觀 (<a href="https://mde.tw/cd2025/content/Tutorial3.html">Tutorial3</a>), 控制與感測 (<a href="https://mde.tw/cd2025/content/Tutorial4.html">Tutorial4</a>), 以及複合外形零件的建構 (<a href="https://mde.tw/cd2025/content/Tutorial5.html">Tutorial5</a>) 等議題.</p>
<p><a href="https://mde.tw/cd2025/content/HW1.html">Homework1</a> 僅使用簡單的 Box 建立平面四連桿機構場景. 若利用 <a href="https://mde.tw/cd2025/content/Tutorial5.html">Tutorial5</a> 中的 Group 節點, 就能整合出更多外形的零組件.</p>
<p><a href="https://mde.tw/cd2025/content/HW2.html">Homework2</a> 雖然使用 MCAD 套件繪製機構所需零件, 但因為在組立時各零件已經完成定位, 因此使用上, 只要透過 Solid - <a href="https://cyberbotics.com/doc/reference/cadshape">CadShape</a> 導入 obj 格式的零件檔案, 或使用 Solid - Shape - Mesh (導向 obj 或 stl 格式檔案) 即可在模擬場景中套用, 至於各連桿 <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> 節點中的 boundingObject 欄位, 只要利用 <a href="https://cyberbotics.com/doc/reference/mesh?version=R2025a">Mesh</a> 節點中的 url 指向物件 obj 或 stl 檔案即可.</p>
<p>至於 <a href="https://cyberbotics.com/doc/reference/hingejoint">hingeJoint</a> 中的 <a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a> 則宣告該轉軸所在位置 (anchor) 以及旋轉軸向量 (axis) 即可.</p>
<p><a href="https://mde.tw/cd2025/content/HW3.html">Homework3</a> 投籃機的實現則必須使用 <a href="https://mde.tw/cd2025/content/Tutorial4.html">Tutorial4</a> 中的控制與感測技術.</p>
<p></p><h3>Tutorial3</h3>
<p>導引課程 3：外觀<br/><br/>本導引課程的目的是讓你熟悉一些與圖形著色 (rendering) 相關的節點。當這些節點被適當使用時，可以很快創建出外觀良好的模擬。良好的圖形質量不僅能提升用戶體驗，對於機器人感知其環境的模擬（如攝像頭圖像處理、循線等）也是至關重要的。<br/><br/>本教學結束時的效果如下圖所示。</p>
<p><img alt="" height="158" src="/images/tutorial_appearance.thumbnail.jpg" width="300"/></p>
<p>新模擬</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #1：創建新模擬</span><br/><br/><span style="background-color: #ccffcc;">從上一個教程的結果中，通過使用檔案 / 另存世界... 菜單創建一個名為 "appearance.wbt" 的新模擬。</span></p>
<p>燈光<br/><br/>世界的燈光由燈光節點 (<a href="https://cyberbotics.com/doc/reference/light">Light</a>) 和背景 (<a href="https://cyberbotics.com/doc/reference/background">Background</a>) 決定。燈光節點有三種類型：方向燈 (<a href="https://cyberbotics.com/doc/reference/directionallight">DirectionalLight</a>)、單點燈 (<a href="https://cyberbotics.com/doc/reference/pointlight">PointLight</a>) 和聚光燈 (<a href="https://cyberbotics.com/doc/reference/spotlight">SpotLight</a>)。方向燈模擬無限遠的光源（例如：太陽），點燈模擬從單一點發出的光（例如：燈泡），而聚光燈模擬錐形光（例如：手電筒）。下面這張圖展示了它們之間的比較。每種類型的燈光節點都可以投射陰影。你可以在<a href="https://cyberbotics.com/doc/reference/nodes-and-api-functions">參考手冊</a>中找到它們的完整文檔。</p>
<p><img alt="" height="68" src="/images/tutorial_light_comparison.thumbnail.jpg" width="300"/></p>
<p>三種在 Webots 中可能的燈光比較。左邊是方向燈 (DirectionalLight)，中間是聚光燈 (SpotLight)，右邊是點燈 (PointLight)。</p>
<p>在模擬中設置燈光就性能上需要耗費運算資源，會降低模擬速度（尤其是在投射陰影時）。最小化燈光數量可以提高渲染速度。單點燈 (PointLight) 比聚光燈 (SpotLight) 更高效，但比方向燈 (DirectionalLight) 效率低。<br/><br/>在本次模擬中，燈光節點在場景樹中不可見，因為它包含在<a href="https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/objects/backgrounds/protos/TexturedBackgroundLight.proto"> TexturedBackgroundLight</a> PROTO 節點中。它由一個方向燈 (DirectionalLight) 組成，其強度和方向根據場景背景自動計算。<br/><br/>修改牆壁的外觀<br/><br/>本小節的目標是將牆壁顏色改為藍色。<br/><br/>形狀節點 (<a href="https://cyberbotics.com/doc/reference/shape">Shape</a>) 的外觀 (<a href="https://cyberbotics.com/doc/reference/appearance">Appearance</a>) 和 PBR 外觀 (<a href="https://cyberbotics.com/doc/reference/pbrappearance">PBRAppearance</a>) 節點決定了物件的圖形外觀。在其他方面，這些節點負責物件的顏色和紋理。<br/><br/>如以下比較所示，建議使用 PBR 外觀以獲得更好的渲染效果。</p>
<p><img alt="" height="92" src="/images/tutorial_appearance_comparison.thumbnail.jpg" width="300"/></p>
<p>外觀節點 (Appearance) 和 PBR 外觀節點 (PBRAppearance) 的比較。左邊是外觀節點 (Appearance)，右邊是 PBR 外觀節點 (PBRAppearance)。</p>
<p>PBRAppearance 節點指定了一個節點的基於物理的視覺外觀。縮寫 "PBR" 指的是 "Physically-Based Rendering"（基於物理的渲染），這個術語用來表示一類基於物體物理特性的著色模型，而不是像在 Appearance 節點中使用的 Blinn-Phong BRDF 這樣的更古老的模型。</p>
<p><a href="https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_reflection_model">Blinn–Phong</a> 反射模型，也稱為修改的 Phong 反射模型，是由 <a href="https://en.wikipedia.org/wiki/Jim_Blinn">Jim Blinn</a> 開發的 <a href="https://en.wikipedia.org/wiki/Phong_reflection_model">Phong 反射模型</a>的修改版本。<br/><br/>Blinn–Phong 是一種在 OpenGL 和 Direct3D 的固定功能管線（在 Direct3D 10 和 OpenGL 3.1 之前）中使用的著色模型，並在每個頂點上進行處理，當它通過圖形管線時；頂點之間的像素值默認由 <a href="https://en.wikipedia.org/wiki/Gouraud_shading">Gouraud</a> 著色插值，而不是計算成本更高的 <a href="https://en.wikipedia.org/wiki/Phong_shading">Phong</a> 著色。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #2：在圖形表示第一面牆的形狀節點 (Shape) 中，將 PBRAppearance 節點添加到外觀 (Appearance) 欄位。</span><br/><br/><span style="background-color: #ccffcc;">- 使用顏色選擇器將其 baseColor 欄位設置為藍色。</span><br/><span style="background-color: #ccffcc;">- 使用欄位編輯器將其 metalness 欄位設置為 0。</span><br/><span style="background-color: #ccffcc;">- 最後，使用欄位編輯器將其 roughness 欄位設置為 0.5。</span><br/><span style="background-color: #ccffcc;">- 如果上一個教程中的 DEF-USE 機制正確實施，所有牆壁應該都會變成藍色。</span></p>
<p>添加現有的外觀到球體<br/><br/>Webots 發行版中提供了許多預定義的 PBRAppearance。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #3：添加預定義的 PBRAppearance</span><br/><br/><span style="background-color: #ccffcc;">    選擇外觀 (appearance) 欄位並刪除之前添加的節點。要刪除此節點，可以按鍵盤上的 "delete" 鍵，或右鍵點擊該欄位並從菜單中選擇 "delete"。此欄位現在應顯示為 "appearance NULL" 而不是 "appearance PBRAppearance"。</span><br/><span style="background-color: #ccffcc;">    再次雙擊該欄位，然後導航到 PROTO 節點 (Webots Projects)，再導航到 appearances，並選擇 OldSteel (PBRAppearance)。</span></p>
<p>添加硬碟中儲存的紋理<br/><br/>本小節的目標是將本地可用的紋理應用到球上。在滾動的物體加上紋理可更容易檢視其運動情況。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #4：將本地可用的紋理添加到球體。</span><br/><br/><span style="background-color: #ccffcc;">1. 下載<a href="https://raw.githubusercontent.com/cyberbotics/webots/released/projects/default/worlds/textures/red_brick_wall.jpg" style="background-color: #ccffcc;">這裡</a>所提供的紋理並將其儲存到硬碟中。</span><br/><span style="background-color: #ccffcc;">2. 從外觀 (appearance) 欄位中刪除先前添加的節點，並改為添加一個 PBRAppearance 節點。</span><br/><span style="background-color: #ccffcc;">3. 向 PBRAppearance 節點的 baseColorMap 欄位添加一個 ImageTexture 節點。</span><br/><span style="background-color: #ccffcc;">4. 使用 "Add" 按鈕向 ImageTexture 的 url 欄位添加一個項目。</span><br/><span style="background-color: #ccffcc;">5. 然後使用 "Select" 按鈕設置新添加的 url 項目的值。</span><br/><span style="background-color: #ccffcc;">6. 跟隨路徑到您保存紋理的位置並選擇它。</span></p>
<p>紋理 URL 必須定義為相對於專案目錄的 worlds 目錄或相對於預設專案目錄 WEBOTS_HOME/projects/default/worlds。<br/><br/>在圖像查看器中打開 red_brick_wall.jpg 紋理，同時觀察它如何映射到 Webots 中的 Sphere 節點上。<br/><br/>紋理根據參考手冊中描述的預定義 UV 映射函數映射到幾何節點上。UV 映射函數將 2D 圖像表示映射到 3D 模型。</p>
<p><img alt="" height="158" src="/images/tutorial_appearance.thumbnail.jpg" width="300"/></p>
<p>在設置好 Light 和 PBRAppearance 節點後的模擬。</p>
<p>渲染選項<br/><br/>Webots 在視圖菜單中提供了幾種渲染模式。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #5：使用"視圖 / 線框渲染" (View / Wireframe Rendering) 表單項以線框模式查看模擬。然後還原為普通渲染模式："視圖 / 普通渲染" (View / Plain Rendering)。</span></p>
<p>其他渲染功能也很有幫助：<br/><br/>    查看座標系統： View / Optional Rendering / Show Coordinates System 或使用 ctrl-F1<br/>    查看距離傳感器光線： View / Optional Rendering / Show DistanceSensor Rays 或使用 ctrl-F10</p>
<p>解決方案：世界文件<br/><br/>要將您的世界與解決方案進行比較，請轉到您的文件並找到在 <a href="https://mde.tw/cd2025/content/Tutorial1.html">Tutorial1</a>中創建的名為 my_first_simulation 的文件夾，然後轉到 worlds 文件夾並使用文本編輯器打開正確的世界文件。<a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/appearance.wbt">此解決方案</a>和其他解決方案位於<a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/">解決方案目錄</a>中。<br/><br/>結論<br/><br/>在本導引課程中，您學習了如何使用 <a href="https://cyberbotics.com/doc/reference/pbrappearance">PBRAppearance</a> 節點和光源節點設置一個美觀的環境。<br/><br/>您可以通過閱讀參考手冊中這些節點的詳細描述來進一步了解此主題。此<a href="https://github.com/cyberbotics/webots/discussions/5411">常見問題</a>解答將為您提供有效設置這些節點的方法。</p><h3>Tutorial4</h3>
<p>導引課程 4：更多關於控制器的內容<br/><br/>現在我們開始討論與編程機器人控制器相關的主題。我們將設計一個簡單的控制器來避開在前面的教程中創建的障礙物。<br/><br/>本教程將介紹 Webots 中機器人編程的基礎。在本章結束時，您應該了解場景樹節點與控制器 API 之間的關聯，如何初始化和清理機器人控制器，如何初始化機器人設備，如何獲取傳感器值，如何指令執行器，以及如何編程一個簡單的反饋迴路。<br/><br/>本教程僅涉及 Webots 功能的正確使用。機器人算法的研究超出了本教程的目標，因此不會在此處討論。掌握一些基本的編程知識是解決本章問題的必要條件（任何 C 教程應該都是足夠的入門介紹）。在本章的末尾，提供了進一步的機器人算法的鏈接。</p>
<p>新的模擬場景與控制器</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作 #1：將之前的世界保存為 collision_avoidance.wbt。從文件/新建/新建機器人控制器菜單項中創建一個新的 C（或任何其他語言）控制器，命名為 epuck_avoid_collision（對於 C++ 和 Java，命名為 EPuckAvoidCollision）。修改 E-puck 節點的控制器欄位以將其與新控制器關聯。</span></p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Hands on #1: Save the previous world as collision_avoidance.wbt. Create a new C (or any other language) controller called epuck_avoid_collision (for C++ and Java call it EPuckAvoidCollision instead) from the File / New / New Robot Controller... menu item. Modify the controller field of the E-puck node in order to associate it to the new controller.</span></p>
<p>Reminder: How to create a new controller?<br/>Select the File / New / New Robot Controller... menu item and choose your programming language and the file name.</p>
<p>了解 e-puck 模型<br/><br/>控制器編程需要一些與 e-puck 模型相關的信息。為了創建碰撞檢測算法，我們需要讀取其炮塔周圍的 8 個紅外距離傳感器的值，並且我們需要驅動其兩個輪子。下圖展示了距離傳感器在炮塔周圍的分佈情況以及 e-puck 的方向。<br/><br/>距離傳感器在機器人層次結構中由 8 個 <a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a> 節點建模。這些節點通過它們的名稱欄位進行引用（從 ps0 到 ps7）。我們將在稍後解釋這些節點是如何定義的。目前，只需注意可以通過 Webots API 的相關模塊訪問 DistanceSensor 節點（通過 webots/distance_sensor.h 標頭文件）。距離傳感器返回的值在 0 到 4096 之間縮放（線性分段到距離）。4096 表示測量到大量光（障礙物很近），而 0 表示沒有測量到光（沒有障礙物）。<br/><br/>控制器 API 是一個編程接口，它使您能夠訪問機器人的模擬傳感器和執行器。例如，包含 webots/distance_sensor.h 文件允許使用 wb_distance_sensor_* 函數，通過這些函數可以查詢 DistanceSensor 節點的值。API 函數的文檔可以在<a href="https://cyberbotics.com/doc/reference/nodes-and-api-functions">參考手冊</a>中找到，並附有每個節點的描述。</p>
<p><img alt="" height="281" src="/images/tutorial_e-puck_top_view.thumbnail.jpg" width="300"/></p>
<p>e-puck 模型的上視圖。綠色箭頭表示機器人的前方。紅色線條代表紅外距離傳感器的方向。字符串標籤對應於距離傳感器的名稱。</p>
<p><img alt="" height="181" src="/images/UML state machine of a simple feedback loop.png" width="600"/></p>
<p>簡單回饋迴路的 UML 狀態機</p>
<p>編寫控制器程序<br/><br/>我們想要編程一個非常簡單的碰撞避免行為。您將編程使機器人向前行駛，直到前方距離傳感器檢測到障礙物，然後轉向無障礙物的方向。為了做到這一點，我們將使用在圖中的 UML 狀態機中所示的簡單反饋迴路。<br/><br/>此控制器的完整代碼在下一小節中給出。</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">動手操作 #2：在控制器文件的開頭，添加對應於 Robot、DistanceSensor 和 Motor 節點的導入指令，以便能夠使用相應的 API：</span><br/><br/><span style="background-color: #ccffcc;">from controller import Robot, DistanceSensor, Motor</span><br/><br/><span style="background-color: #ccffcc;">在導入語句之後，定義一個變量，用於定義每個物理步長的持續時間。這個宏將用作 Robot::step 函數的參數，它也將用於啟用設備。這個持續時間以毫秒為單位，必須是 WorldInfo 節點的 basicTimeStep 欄位值的倍數。</span><br/><br/><span style="background-color: #ccffcc;">TIME_STEP = 64</span></p>
<p>主函數是控制器程序開始執行的地方。傳遞給主函數的參數由 Robot 節點的 controllerArgs 欄位給出。必須使用 wb_robot_init 函數初始化 Webots API，並使用 wb_robot_cleanup 函數清理它。</p>
<p>動手操作 #3：在 Python 中沒有主函數，程序從文件的開始處開始執行：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># create the Robot instance.
robot = Robot()
# initialize devices
# feedback loop: step simulation until receiving an exit event
while robot.step(TIME_STEP) != -1:
    # read sensors outputs
    # process behavior
    # write actuators inputs</pre>
<p>機器人設備由 WbDeviceTag 引用。WbDeviceTag 由 wb_robot_get_device 函數檢索。然後，它在每個涉及此設備的函數調用中用作第一個參數。像 DistanceSensor 這樣的傳感器在使用前必須啟用。enable 函數的第二個參數定義了傳感器的刷新率。</p>
<p>動手操作 #4：在註釋 // initialize devices 之後，獲取並啟用距離傳感器，如下所示：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># initialize devices
ps = []
psNames = [
    'ps0', 'ps1', 'ps2', 'ps3',
    'ps4', 'ps5', 'ps6', 'ps7'
]

for i in range(8):
    ps.append(robot.getDevice(psNames[i]))
    ps[i].enable(TIME_STEP)</pre>
<p>初始化設備後，初始化馬達：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">leftMotor = robot.getDevice('left wheel motor')
rightMotor = robot.getDevice('right wheel motor')
leftMotor.setPosition(float('inf'))
rightMotor.setPosition(float('inf'))
leftMotor.setVelocity(0.0)
rightMotor.setVelocity(0.0)</pre>
<p>在主循環中，在註釋 # read sensors outputs 之後，按如下方式讀取距離傳感器的值：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># read sensors outputs
psValues = []
for i in range(8):
    psValues.append(ps[i].getValue())</pre>
<p>在主循環中，在註釋 # process behavior 之後，檢測是否發生碰撞（即距離傳感器返回的值大於閾值），如下所示：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># detect obstacles
right_obstacle = psValues[0] &gt; 80.0 or psValues[1] &gt; 80.0 or psValues[2] &gt; 80.0
left_obstacle = psValues[5] &gt; 80.0 or psValues[6] &gt; 80.0 or psValues[7] &gt; 80.0</pre>
<p>最後，使用有關障礙物的信息來驅動車輪，如下所示：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">MAX_SPEED = 6.28
...
# initialize motor speeds at 50% of MAX_SPEED.
leftSpeed  = 0.5 * MAX_SPEED
rightSpeed = 0.5 * MAX_SPEED
# modify speeds according to obstacles
if left_obstacle:
    # turn right
    leftSpeed  = 0.5 * MAX_SPEED
    rightSpeed = -0.5 * MAX_SPEED
elif right_obstacle:
    # turn left
    leftSpeed  = -0.5 * MAX_SPEED
    rightSpeed = 0.5 * MAX_SPEED
# write actuators inputs
leftMotor.setVelocity(leftSpeed)
rightMotor.setVelocity(rightSpeed)</pre>
<p>Save your code by selecting the File / Save Text File menu item. Reload the world.</p>
<p>控制器代碼<br/><br/>以下是前一小節中詳細介紹的控制器完整代碼。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from controller import Robot, DistanceSensor, Motor

# time in [ms] of a simulation step
TIME_STEP = 64

MAX_SPEED = 6.28

# create the Robot instance.
robot = Robot()

# initialize devices
ps = []
psNames = [
    'ps0', 'ps1', 'ps2', 'ps3',
    'ps4', 'ps5', 'ps6', 'ps7'
]

for i in range(8):
    ps.append(robot.getDevice(psNames[i]))
    ps[i].enable(TIME_STEP)

leftMotor = robot.getDevice('left wheel motor')
rightMotor = robot.getDevice('right wheel motor')
leftMotor.setPosition(float('inf'))
rightMotor.setPosition(float('inf'))
leftMotor.setVelocity(0.0)
rightMotor.setVelocity(0.0)

# feedback loop: step simulation until receiving an exit event
while robot.step(TIME_STEP) != -1:
    # read sensors outputs
    psValues = []
    for i in range(8):
        psValues.append(ps[i].getValue())

    # detect obstacles
    right_obstacle = psValues[0] &gt; 80.0 or psValues[1] &gt; 80.0 or psValues[2] &gt; 80.0
    left_obstacle = psValues[5] &gt; 80.0 or psValues[6] &gt; 80.0 or psValues[7] &gt; 80.0

    # initialize motor speeds at 50% of MAX_SPEED.
    leftSpeed  = 0.5 * MAX_SPEED
    rightSpeed = 0.5 * MAX_SPEED
    # modify speeds according to obstacles
    if left_obstacle:
        # turn right
        leftSpeed  = 0.5 * MAX_SPEED
        rightSpeed = -0.5 * MAX_SPEED
    elif right_obstacle:
        # turn left
        leftSpeed  = -0.5 * MAX_SPEED
        rightSpeed = 0.5 * MAX_SPEED
    # write actuators inputs
    leftMotor.setVelocity(leftSpeed)
    rightMotor.setVelocity(rightSpeed)</pre>
<p>解決方案：世界文件<br/><br/>要將您的世界與解決方案進行比較，請轉到您的文件並找到在 <a href="https://mde.tw/cd2025/content/Tutorial1.html">Tutorial1</a> 中創建的名為 my_first_simulation 的文件夾，然後轉到 worlds 文件夾並使用文本編輯器打開正確的世界。此解決方案與其他解決方案位於解決方案目錄中。<br/><br/>結論<br/><br/>以下是您剛剛學到的關鍵點的快速摘要：<br/><br/>- 控制器入口點是主函數，就像任何標準的 C 程序一樣。<br/>- 在調用 wb_robot_init 函數之前，不應調用任何 Webots API 函數。<br/>- 離開主函數之前要調用的最後一個函數是 wb_robot_cleanup 函數。<br/>- 設備由其設備節點的名稱欄位引用。可以通過 wb_robot_get_device 函數檢索節點的引用。<br/>- 每個控制器程序都作為 Webots 進程的子進程執行。控制器進程不與 Webots 共享任何內存（除了相機的圖像），並且它可以在與 Webots 不同的 CPU（或 CPU 核心）上運行。<br/>- 控制器代碼鏈接到 libController 動態庫。該庫處理控制器與 Webots 之間的通信。<br/><br/>本節更詳細地解釋了控制器編程。您應該仔細閱讀以進一步了解在 Webots 中的機器人編程。</p><h3>Tutorial5</h3>
<p>導引課程 5：複合固體和物理屬性</p>
<p>本導引課程的目的是通過創建一個具有多個邊界對象的固體來更詳細地探索物理模擬：一個由兩個球體和一個圓柱體組成的啞鈴。預期結果如圖所示。</p>
<p><img alt="" height="157" src="/images/tutorial_dumbbell.thumbnail.jpg" width="300"/></p>
<p>預期結果在教程結束時，您將能夠創建一個由兩個球體和一個圓柱體組成的啞鈴，如圖所示。</p>
<p>新的模擬</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">實作練習 #1：從上一個教程的結果開始，並通過使用表單 File / Save World As.... 創建一個名為 compound_solid.wbt 的新模擬。</span></p>
<h4 class="anchor-header" id="compoundsolid" name="compound-solid">Compound Solid</h4>
<p>It is possible to build <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> nodes more complex than what we have seen before by aggregating <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> nodes. In fact, both the physical and the graphical properties of a <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> can be made of several <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> nodes. Moreover each <a href="https://cyberbotics.com/doc/reference/shape">Shape</a> node can be placed in a <a href="https://cyberbotics.com/doc/reference/pose">Pose</a> node in order to change its relative position and orientation. <a href="https://cyberbotics.com/doc/reference/group">Group</a> nodes can also be used to group several sub-nodes.</p>
<p>We want to implement a dumbbell made of a handle (<a href="https://cyberbotics.com/doc/reference/cylinder">Cylinder</a>) and of two weights (<a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a>) located at each end of the handle. This <a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-5-compound-solid-and-physics-attributes#representation-of-the-subnodes-of-a-compound-solid-made-of-several-transformed-geometries">figure</a> depicts the <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> nodes and its sub-nodes required to implement the dumbbell.</p>
<p style="padding-left: 30px;">Hands on #2: Create the dumbbell by following the figure. Create the handle first without placing it in a Pose node (so the handle axis will have the same direction as the z-axis of the solid). The handle should have a length of 0.1 m and a radius of 0.01 m. The weights should have a radius of 0.03 m and a subdivision of 2. The weights can be moved at the handle extremities thanks to the translation field of their Pose nodes.</p>
<p><img alt="" height="513" src="/images/compound_solid.png" width="300"/></p>
<p>representation of the subnodes of a compound solid made of several transformed geometries.</p>
<h4 class="anchor-header" id="physicsattributes" name="physics-attributes">Physics Attributes</h4>
<p>The aim of this subsection is to learn how to set some simple physics properties for a <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> node. The <a href="https://cyberbotics.com/doc/reference/physics">Physics</a> node contains fields related to the physics of the current rigid body (<a href="https://cyberbotics.com/doc/reference/solid">Solid</a>).</p>
<p>The <strong>mass</strong> of a <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> node is given by its <code>density</code> or <code>mass</code> field. Only one of these two fields can be specified at a time (the other should be set to <em>-1</em>). When the <code>mass</code> is specified, it defines the total mass of the solid (in [kg]). When the <code>density</code> is specified, its value (in [kg/m3]) is multiplied by the volume of the bounding objects, and the product gives the total mass of the solid. A density of 1000 [kg/m³] corresponds to the density of water (default value).</p>
<p style="padding-left: 30px;">Hands on #3: Set the mass of the dumbbell to 2 [kg]. The density is not used and should be set to -1.</p>
<p>By default, the <strong>center of mass</strong> of a <a href="https://cyberbotics.com/doc/reference/solid">Solid</a> node is set at its origin (defined by the translation field of the solid). The center of mass can be modified using the <code>centerOfMass</code> field of the <a href="https://cyberbotics.com/doc/reference/physics">Physics</a> node. The center of mass is specified relatively to the origin of the <a href="https://cyberbotics.com/doc/reference/solid">Solid</a>.</p>
<p style="padding-left: 30px;">Hands on #4: Let's say that one of the weights is heavier than the other one. Move the center of mass of the dumbbell of 0.01 [m] along the z-axis.</p>
<p>Note that when the solid is selected, the center of mass is represented in the 3D view by a coordinate system which is darker than the coordinate system representing the solid center.</p>
<h4 class="anchor-header" id="therotationfield" name="the-rotation-field"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-5-compound-solid-and-physics-attributes#the-rotation-field"><span class="anchor-link-image"></span></a>The Rotation Field</h4>
<p>The <code>rotation</code> field of the <a href="https://cyberbotics.com/doc/reference/pose">Pose</a> node determines the rotation of this node (and of its children) using the <a href="https://en.wikipedia.org/wiki/Axis%E2%80%93angle_representation" target="_blank">Euler axis and angle</a> representation. A <strong>Euler axis and angle</strong> rotation is defined by four components. The first three components are a unit vector that defines the rotation axis. The fourth component defines the rotation angle about the axis (in [rad]).</p>
<p>The rotation occurs in the sense prescribed by the right-hand rule.</p>
<p style="padding-left: 30px;">Hands on #5: Modify the rotation of the Solid node of the dumbbell in order to move the handle's axis (z-axis) parallel to the ground. A unit axis (0, 1, 0) and an angle of π/2 (~ 1.5708) is a possible solution.</p>
<h4 class="anchor-header" id="howtochooseboundingobjects" name="how-to-choose-bounding-objects">How to Choose Bounding Objects?</h4>
<p>As said before, minimizing the number of bounding objects increases the simulation speed. However, choosing the bounding objects primitives carefully is also crucial to increase the simulation speed.</p>
<p>Using a combination of <a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a>, <a href="https://cyberbotics.com/doc/reference/box">Box</a>, <a href="https://cyberbotics.com/doc/reference/capsule">Capsule</a> and <a href="https://cyberbotics.com/doc/reference/cylinder">Cylinder</a> nodes for defining objects is very efficient. Generally speaking, the efficiency of these primitives can be sorted like this: <a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a> &gt; <a href="https://cyberbotics.com/doc/reference/box">Box</a> &gt; <a href="https://cyberbotics.com/doc/reference/capsule">Capsule</a> &gt; <a href="https://cyberbotics.com/doc/reference/cylinder">Cylinder</a>, where the <a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a> is the most efficient. But this can be neglected under common usage.</p>
<p>The <a href="https://cyberbotics.com/doc/reference/indexedfaceset">IndexedFaceSet</a> geometry primitive can also be used in a bounding object. But this primitive is less efficient than the other primitives listed above. Moreover its behavior is sometimes buggy. For this reasons, we don't recommend using the <a href="https://cyberbotics.com/doc/reference/indexedfaceset">IndexedFaceSet</a> when another solution using a combination of the other primitives is possible.</p>
<p>Grounds can be defined using the <a href="https://cyberbotics.com/doc/reference/plane">Plane</a> or the <a href="https://cyberbotics.com/doc/reference/elevationgrid">ElevationGrid</a> primitives. The <a href="https://cyberbotics.com/doc/reference/plane">Plane</a> node is much more efficient than the <a href="https://cyberbotics.com/doc/reference/elevationgrid">ElevationGrid</a> node, but it can only be used to model a flat terrain while the <a href="https://cyberbotics.com/doc/reference/elevationgrid">ElevationGrid</a> can be used to model an uneven terrain.</p>
<h4 class="anchor-header" id="contacts" name="contacts">Contacts</h4>
<p>When two solids collide, <strong>contacts</strong> are created at the collision points. <a href="https://cyberbotics.com/doc/reference/contactproperties">ContactProperties</a> nodes can be used to specify the desired behavior of the contacts (e.g. the friction between the two solids).</p>
<p>Each solid belongs to a material category referenced by their <code>contactMaterial</code> field (<code>default</code> by default). The <a href="https://cyberbotics.com/doc/reference/worldinfo">WorldInfo</a> node has a <code>contactProperties</code> field that stores a list of <a href="https://cyberbotics.com/doc/reference/contactproperties">ContactProperties</a> nodes. These nodes allow to define the contact properties between two categories of <a href="https://cyberbotics.com/doc/reference/solid">Solids</a>.</p>
<p>We want now to modify the friction model between the dumbbell and the other solids of the environment.</p>
<p style="padding-left: 30px;">Hands on #6: Set the contactMaterial field of the dumbbell to "dumbbell". In the WorldInfo node, add a ContactProperties node between the default and dumbbell categories. Try to set the coulombFriction field to 0 and remark that the dumbbell slides (instead of rotating) on the floor because no more friction is applied.</p>
<h4 class="anchor-header" id="basictimesteperpandcfm" name="basictimestep-erp-and-cfm"><code>basicTimeStep</code>, <code>ERP</code> and <code>CFM</code></h4>
<p>The most critical parameters for a physics simulation are stored in the <code>basicTimeStep</code>, <code>ERP</code> and <code>CFM</code> fields of the <a href="https://cyberbotics.com/doc/reference/worldinfo">WorldInfo</a> node.</p>
<p>The <code>basicTimeStep</code> field determines the duration (in [ms]) of a physics step. The bigger this value is, the quicker the simulation is, the less precise the simulation is. We recommend values between <em>8</em> and <em>16</em> for regular use of Webots.</p>
<p>It's more difficult to explain the behavior of the <code>ERP</code> and <code>CFM</code> fields. These values are directly used by the physics engine to determine how the constraints are solved. The default values are well defined for regular use of Webots. We recommend to read the <a href="https://cyberbotics.com/doc/reference/worldinfo">Reference Manual</a> and the documentation of <a href="http://ode.org/wiki/index.php?title=Manual" target="_blank">ODE</a> (physics engine used in Webots) to understand completely their purpose.</p>
<h4 class="anchor-header" id="minorphysicsparameters" name="minor-physics-parameters"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-5-compound-solid-and-physics-attributes#minor-physics-parameters"><span class="anchor-link-image"></span></a>Minor Physics Parameters</h4>
<p>There are also other physics parameters which are less useful in a regular use of Webots, for example some of the fields of the <a href="https://cyberbotics.com/doc/reference/physics">Physics</a>, <a href="https://cyberbotics.com/doc/reference/worldinfo">WorldInfo</a> and <a href="https://cyberbotics.com/doc/reference/contactproperties">ContactProperties</a> nodes.</p>
<p style="padding-left: 30px;">Hands on #7: Search how to add a linear damping on all the objects, how to use the inertia matrix and how to use the physicsDisableTime property.</p>
<h4 class="anchor-header" id="solutionworldfile" name="solution-world-file">Solution: World File</h4>
<p>To compare your world with the solution, go to your files and find the folder named "my_first_simulation" created in <a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots">Tutorial 1</a>, then go to the "worlds" folder and open with a text editor the right world. <a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/compound_solid.wbt" target="_blank">This solution</a> as the others is located in the <a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/" target="_blank">solution directory</a>.</p>
<h4 class="anchor-header" id="conclusion" name="conclusion"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-5-compound-solid-and-physics-attributes#conclusion"><span class="anchor-link-image"></span></a>Conclusion</h4>
<p>You are now able to build a wide range of solids including those being composed of several rigid bodies. You know that a Geometry node can be moved and rotated if it is included in a <a href="https://cyberbotics.com/doc/reference/pose">Pose</a> node. You are aware about all the physics parameters allowing you to design robust simulations. The next step will be to create your own robot.</p>
<p>You can test your skills by creating common objects such as a table.</p>
<h2>Stage3</h2>
<p><a href="https://mde.tw/cd2025/content/Tutorial6.html">Tutorial6</a> 是學習如何建立及控制行動機器人.</p>
<p><a href="https://mde.tw/cd2025/content/Tutorial7.html">Tutorial7</a> 說明如何自行建立原型物件 (PROTO).</p>
<p><a href="https://mde.tw/cd2025/content/Tutorial8.html">Tutorial8</a> 就自行開發投籃機模擬場景而言, 可在虛擬的模擬場景中, 利用 supervisor 模式配置非可實際達成的程式控制加速虛實產品的開發流程.</p><h3>Tutorial6</h3>
<h4 class="anchor-header" id="tutorial64wheeledrobot60minutes" name="tutorial-6-4-wheeled-robot-60-minutes">Tutorial 6: 4-Wheeled Robot</h4>
<p>This tutorial aims at creating your first robot from scratch. The robot will consist of a body, four wheels, and two distance sensors. The result is depicted on <a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#3d-view-of-the-4-wheels-robot-note-that-the-coordinate-system-representations-of-the-robot-body-and-of-its-wheels-are-oriented-the-same-way-their-px-vector-in-red-defines-the-left-of-the-robot-their-py-vector-in-green-defines-the-top-of-the-robot-and-their-pz-vector-in-blue-defines-the-front-of-the-robot-the-distance-sensors-are-oriented-in-a-different-way-their-px-vector-indicates-the-direction-of-the-sensor">this figure</a>. The <a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#top-view-of-the-4-wheeled-robot-the-grid-behind-the-robot-has-a-dimension-of-0-2-x-0-3-meters-the-text-labels-correspond-to-the-name-of-the-device">next figure</a> shows the robot from a top view.</p>
<p><img alt="" height="209" src="/images/tutorial_4_wheels_robot.thumbnail.jpg" width="300"/></p>
<p>3D view of the 4 wheels robot. Note that the coordinate system representations of the robot body and of its wheels are oriented the same way. Their +x-vector (in red) defines the left of the robot, their +y-vector (in green) defines the top of the robot, and their +z-vector (in blue) defines the front of the robot. The distance sensors are oriented in a different way, their +x-vector indicates the direction of the sensor.</p>
<p><img alt="" height="193" src="/images/tutorial_4_wheels_top_schema.thumbnail.jpg" width="300"/></p>
<p>Top view of the 4 wheeled robot. The grid behind the robot has a dimension of 0.2 x 0.3 meters. The text labels correspond to the name of the device.</p>
<h4 class="anchor-header" id="newsimulation" name="new-simulation">New Simulation</h4>
<blockquote>
<p><strong>Hands on #1</strong>: Save the world of the previous tutorial as<span> </span><code>4_wheeled_robot.wbt</code>. Remove the nodes defining the e-puck, the ball, the dumbbell and the contact properties. The ground, the walls and the lighting are kept.</p>
</blockquote>
<h4 class="anchor-header" id="separatingtherobotinsolidnodes" name="separating-the-robot-in-solid-nodes"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#separating-the-robot-in-solid-nodes"><span class="anchor-link-image"></span></a>Separating the Robot in Solid Nodes</h4>
<p>Some definitions and rules to create the robot model:</p>
<ul>
<li>
<p>The set containing the<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node and all its derived nodes are called the<span> </span><em>solid nodes</em>.</p>
</li>
<li>
<p>A similar definition is applied for the<span> </span><a href="https://cyberbotics.com/doc/reference/device">Device</a>,<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a>,<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>and<span> </span><a href="https://cyberbotics.com/doc/reference/motor">Motor</a><span> </span>nodes. You can get more information about the node hierarchy in the<span> </span><a href="https://cyberbotics.com/doc/reference/node-chart">nodes chart diagram</a>.</p>
</li>
<li>
<p>Most sensors and actuators are both<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>and<span> </span><a href="https://cyberbotics.com/doc/reference/device">Device</a><span> </span>nodes at the same time.</p>
</li>
<li>
<p>The main structure of a<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>model is a tree of<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>nodes linked together. The root node of this tree should be a<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node.</p>
</li>
<li>
<p>The solids are linked together by<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>nodes. A<span> </span><a href="https://cyberbotics.com/doc/reference/device">Device</a><span> </span>node should be the direct child of either a<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node, a<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node or a<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>node.</p>
</li>
<li>
<p>A<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>node is used to add one (or two) degree(s) of freedom (DOF), between its parent and its child. The direct parent and child of a<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>node are both<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>nodes.</p>
</li>
<li>
<p>The nodes derived from<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>allow creating different kinds of constraints between the linked<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>nodes. The most used one in robotics, is the<span> </span><a href="https://cyberbotics.com/doc/reference/hingejoint">HingeJoint</a><span> </span>allowing to model amongst others rotational motors including wheels.</p>
</li>
<li>
<p>A<span> </span><a href="https://cyberbotics.com/doc/reference/joint">Joint</a><span> </span>node can be monitored or actuated by adding a<span> </span><a href="https://cyberbotics.com/doc/reference/positionsensor">PositionSensor</a><span> </span>node, or a motor node to its<span> </span><code>device</code><span> </span>field respectively.</p>
</li>
</ul>
<p>Having these rules in mind, we can start designing the node hierarchy used to model the robot. The first step is to determine which part of the robot should be modeled as a<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node.</p>
<p>In our example, this operation is quite obvious. The robot has 4 DOF corresponding to the wheel motors. It can be divided in five solid nodes: the body and the four wheels.</p>
<p>Depending on the expected application of the robot model, reducing the DOF while modelling might be necessary to get an efficient simulation. For example, when modeling a caster wheel, a realistic approach implies to model 2 DOF. But if this degree of precision is useless for the simulation, a more efficient approach can be found. For example, to model the caster wheel as a<span> </span><a href="https://cyberbotics.com/doc/reference/sphere">Sphere</a><span> </span>having a null friction coefficient with the ground.</p>
<p>The second step is to determine which<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node is the<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node (the root node). This choice is arbitrary, but a solution is often much easier to implement. For example, in the case of a humanoid robot, the robot node would be typically the robot chest, because the robot symmetry facilitates the computation of the joint parameters.</p>
<p>In our case, the body box is obviously the better choice. The<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#high-level-representation-of-the-4-wheeled-robot">figure</a><span> </span>depicts the solid nodes hierarchy of the robot.</p>
<blockquote>
<p><strong>Hands on #2</strong>: At the end of the scene tree, add a<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node having four<span> </span><a href="https://cyberbotics.com/doc/reference/hingejoint">HingeJoint</a><span> </span>nodes having a<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node as<span> </span><code>endPoint</code>. Please refer to<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#high-level-representation-of-the-4-wheeled-robot">this figure</a>. Add a<span> </span><a href="https://cyberbotics.com/doc/reference/shape">Shape</a><span> </span>node containing a Box geometry to the<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node. Set the color of the<span> </span><a href="https://cyberbotics.com/doc/reference/shape">Shape</a><span> </span>to red. Use the<span> </span><a href="https://cyberbotics.com/doc/reference/shape">Shape</a><span> </span>to define the<span> </span><code>boundingObject</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node. The dimension of the box is<span> </span><code>(0.2, 0.1, 0.05)</code>. Add a<span> </span><a href="https://cyberbotics.com/doc/reference/physics">Physics</a><span> </span>node to the<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a>. The<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#high-level-representation-of-the-4-wheeled-robot">figure</a><span> </span>represents all the nodes defining the robot. So far, only the direct children nodes of the root<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node has been implemented.</p>
</blockquote>
<p><img alt="" height="283" src="/images/tutorial6_high_level_representation_wheeled_robot.png" width="300"/></p>
<p>High level representation of the 4 wheeled robot</p>
<h4 class="anchor-header" id="hingejoint" name="hingejoint"><code>HingeJoint</code></h4>
<p>The initial position of the wheel is defined by the translation and the rotation fields of the<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node.</p>
<p>The rotation origin (anchor) and the rotation axis (axis) are defined by the optional<span> </span><a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a><span> </span>child of the<span> </span><a href="https://cyberbotics.com/doc/reference/hingejoint">HingeJoint</a><span> </span>node.</p>
<p><img alt="" height="155" src="/images/hinge_joint.png" width="300"/></p>
<p>Representation of a hinge joint</p>
<p>The radius of the wheel is 0.04 and its thickness (height of the cylinder) is 0.02. For the first wheel, the<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>translation should be defined to<span> </span><code>(0.05, 0.06, 0)</code><span> </span>in order to define the relative gap between the body and the wheel, and the rotation to<span> </span><code>(1 0 0 1.5708)</code><span> </span>for the wheel cylinder to be correctly oriented. The<span> </span><a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a><span> </span>anchor should also be defined to<span> </span><code>(0.05, 0.06, 0)</code><span> </span>to define the rotation origin (relatively to the body). Finally, the<span> </span><a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a><span> </span>axis should define the rotation axis. In our case it's along the y-axis (so<span> </span><code>(0, 1, 0)</code>).</p>
<blockquote>
<p><strong>Hands on #3</strong>: Add a<span> </span><a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a><span> </span>node, and enter the field values as described above. Some signs obviously have to be updated for other wheels.</p>
</blockquote>
<p>Now, let's implement the cylinder shape of the wheels.</p>
<p>For each<span> </span><a href="https://cyberbotics.com/doc/reference/hingejoint">HingeJoint</a>, there are three fields in which nodes need to be added.</p>
<ul>
<li><strong>jointParameters</strong>: Add a<span> </span><a href="https://cyberbotics.com/doc/reference/hingejointparameters">HingeJointParameters</a><span> </span>and configure the anchor (0.05 -0.06 0) and axis (0 1 0) fields. These values have to be modified according to the location of the wheel.</li>
<li><strong>device</strong>: Add a<span> </span><a href="https://cyberbotics.com/doc/reference/rotationalmotor">RotationalMotor</a><span> </span>in order to be able to actuate the wheels. Change their<span> </span><code>name</code><span> </span>fields from<span> </span><code>wheel1</code><span> </span>to<span> </span><code>wheel4</code><span> </span>according to<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#top-view-of-the-4-wheeled-robot-the-grid-behind-the-robot-has-a-dimension-of-0-2-x-0-3-meters-the-text-labels-correspond-to-the-name-of-the-device">this figure</a>. These labels will be used to reference the wheels from the controller.</li>
<li><strong>endPoint</strong>: Add a<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a><span> </span>node, then a<span> </span><a href="https://cyberbotics.com/doc/reference/shape">Shape</a><span> </span>node in the<span> </span><code>children</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/solid">Solid</a>, and finally, add a<span> </span><a href="https://cyberbotics.com/doc/reference/cylinder">Cylinder</a><span> </span>in the<span> </span><code>geometry</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/shape">Shape</a><span> </span>node. The<span> </span><a href="https://cyberbotics.com/doc/reference/cylinder">Cylinder</a><span> </span>should have a<span> </span><code>radius</code><span> </span>of<span> </span><code>0.04</code><span> </span>and a<span> </span><code>height</code><span> </span>of<span> </span><code>0.02</code>. Set the color of the wheels to green.</li>
</ul>
<blockquote>
<p><strong>Hands on #4</strong>: Complete the missing nodes to get the same structure as the</p>
<p>one depicted in<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#low-level-representation-of-the-4-wheeled-robot">this figure</a>. Don't forget the<span> </span><a href="https://cyberbotics.com/doc/reference/physics">Physics</a><span> </span>nodes.</p>
</blockquote>
<p><img alt="" height="355" src="/images/tutorial6_low_level_rep_wheeled_robot.png" width="800"/></p>
<p>Low level representation of the 4 wheeled robot</p>
<h4 class="anchor-header" id="sensors" name="sensors">Sensors</h4>
<p>The sensors used on the e-puck of<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/tutorial-4-more-about-controllers">Tutorial 4</a><span> </span>are not the same as the ones used in this section. Pay attention to their measuring interval which is between<span> </span><code>0 cm = 0</code><span> </span>and<span> </span><code>10 cm = 1000</code>. Find more information about the<span> </span><code>lookupTable</code><span> </span>field<span> </span><a href="https://cyberbotics.com/doc/reference/distancesensor#lookup-table">here</a>.</p>
<p>The last part of the robot modeling is to add the two distance sensors to the robot. This can be done by adding two<span> </span><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a><span> </span>nodes as direct children of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot">Robot</a><span> </span>node. Note that the distance sensor acquires its data along the positive x-axis. So, it is necessary to rotate the distance sensor to point their x-axis outside the robot (see the<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#top-view-of-the-4-wheeled-robot-the-grid-behind-the-robot-has-a-dimension-of-0-2-x-0-3-meters-the-text-labels-correspond-to-the-name-of-the-device">figure</a>).</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p><details open=""><summary><strong>Reminder</strong>: How to know the orientation of the distance sensor?</summary>As already says in<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/tutorial-3-appearance">Tutorial 3</a>, the distance sensor rays can be viewed using the shortcut<span> </span><kbd>ctrl</kbd>-<kbd>F10</kbd><span> </span>or<span> </span><code>View / Optional Rendering / Show DistanceSensor Rays</code>.
<blockquote>
<p><strong>Hands on #5</strong>: Add the two distance sensors as explained above. The distance sensors are at an angle to 0.3 [rad] with the front vector of the robot. Set the graphical and physical shape to a cube (not transformed) having a edge of<span> </span><code>0.01</code><span> </span>[m]. Set the color to blue. Set the<span> </span><code>name</code><span> </span>field according to the labels of<span> </span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#top-view-of-the-4-wheeled-robot-the-grid-behind-the-robot-has-a-dimension-of-0-2-x-0-3-meters-the-text-labels-correspond-to-the-name-of-the-device">this figure</a>.</p>
</blockquote>
<details open=""><summary><strong>Tips</strong>: How to precisely orient distance sensors?</summary>In the<span> </span><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a><span> </span>node, the rotation field has 4 parameters. If you set the angle parameter to 0, then you can use the mouse wheel to increment/decrement by steps of 0.1309 rad (= 7.5 degree).
<h4 class="anchor-header" id="controller" name="controller"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot#controller"><span class="anchor-link-image"></span></a>Controller</h4>
<p>In the previous tutorials, you have learnt how to setup a feedback loop and how to read the distance sensor values. However, actuating a<span> </span><a href="https://cyberbotics.com/doc/reference/rotationalmotor">RotationalMotor</a><span> </span>node is something new. To program the rotational motors, the first step is to include the API module corresponding to the<span> </span><a href="https://cyberbotics.com/doc/reference/rotationalmotor">RotationalMotor</a><span> </span>node:</p>
<div class="tab-content" name="python" tabid="3">
<pre><code class="python language-python hljs"><span class="hljs-keyword">from</span> controller <span class="hljs-keyword">import</span> Motor
</code></pre>
</div>
<p>Then to get the references of the<span> </span><a href="https://cyberbotics.com/doc/reference/rotationalmotor?tab-language=python">RotationalMotor</a><span> </span>nodes:</p>
<div class="tab-content" name="python" tabid="4">
<pre><code class="python language-python hljs"><span class="hljs-comment"># initialize motors</span>
wheels = []
wheelsNames = [<span class="hljs-string">'wheel1'</span>, <span class="hljs-string">'wheel2'</span>, <span class="hljs-string">'wheel3'</span>, <span class="hljs-string">'wheel4'</span>]
<span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> wheelsNames:
    wheels.append(robot.getDevice(name))
</code></pre>
</div>
<p>A<span> </span><a href="https://cyberbotics.com/doc/reference/motor?tab-language=python">Motor</a><span> </span>can be actuated by setting its position, its velocity, its acceleration or its force. Here we are interested in setting its velocity. This can be achieved by setting its position to infinity, and by bounding its velocity:</p>
<div class="tab-content" name="python" tabid="5">
<pre><code class="python language-python hljs">speed = <span class="hljs-number">-1.5</span>  <span class="hljs-comment"># [rad/s]</span>
wheels[<span class="hljs-number">0</span>].setPosition(float(<span class="hljs-string">'inf'</span>))
wheels[<span class="hljs-number">0</span>].setVelocity(speed)
</code></pre>
</div>
<blockquote>
<p><strong>Hands on #6</strong>: Implement a controller called<span> </span><code>four_wheeled_collision_avoidance</code><span> </span>moving the robot and avoiding obstacles by detecting them by the distance sensors.</p>
</blockquote>
<p>Note that the<span> </span><code>lookupTable</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/distancesensor?tab-language=python">DistanceSensor</a><span> </span>nodes indicates the values returned by the sensor. To help in the debugging with the sensors, it is possible to see the value of the sensors in the real-time in the<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/controller-plugin#robot-window?tab-language=python">robot-window</a>. To open the<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/controller-plugin#robot-window?tab-language=python">robot-window</a>, double-click on the robot body and it will bring up a menu on the left with the<span> </span><a href="https://cyberbotics.com/doc/reference/distancesensor?tab-language=python">DistanceSensor</a><span> </span>and<span> </span><a href="https://cyberbotics.com/doc/reference/rotationalmotor?tab-language=python">RotationalMotor</a><span> </span>graph. Run the simulation to see the evolution.</p>
<p>Don't forget to set the<span> </span><code>controller</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot?tab-language=python">Robot</a><span> </span>node to indicate your new controller.</p>
<p>As usual a possible solution of this exercise is located in the tutorials directory.</p>
<h4 class="anchor-header" id="thecontrollercode" name="the-controller-code"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot?tab-language=python#the-controller-code"><span class="anchor-link-image"></span></a>The Controller Code</h4>
<p>Here is the complete code of the controller developed in the previous subsection.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from controller import Robot

TIME_STEP = 64
robot = Robot()
ds = []
dsNames = ['ds_right', 'ds_left']
for i in range(2):
    ds.append(robot.getDevice(dsNames[i]))
    ds[i].enable(TIME_STEP)
wheels = []
wheelsNames = ['wheel1', 'wheel2', 'wheel3', 'wheel4']
for i in range(4):
    wheels.append(robot.getDevice(wheelsNames[i]))
    wheels[i].setPosition(float('inf'))
    wheels[i].setVelocity(0.0)
avoidObstacleCounter = 0
while robot.step(TIME_STEP) != -1:
    leftSpeed = 1.0
    rightSpeed = 1.0
    if avoidObstacleCounter &gt; 0:
        avoidObstacleCounter -= 1
        leftSpeed = 1.0
        rightSpeed = -1.0
    else:  # read sensors
        for i in range(2):
            if ds[i].getValue() &lt; 950.0:
                avoidObstacleCounter = 100
    wheels[0].setVelocity(leftSpeed)
    wheels[1].setVelocity(rightSpeed)
    wheels[2].setVelocity(leftSpeed)
    wheels[3].setVelocity(rightSpeed)</pre>
<h4 class="anchor-header" id="solutionworldfile" name="solution-world-file">Solution: World File</h4>
<p>To compare your world with the solution, go to your files and find the folder named "my_first_simulation" created in<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python">Tutorial 1</a>, then go to the "worlds" folder and open with a text editor the right world.<span> </span><a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/4_wheels_robot.wbt?tab-language=python" target="_blank">This solution</a><span> </span>as the others is located in the<span> </span><a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/worlds/?tab-language=python" target="_blank">solution directory</a>.</p>
<h4 class="anchor-header" id="conclusion" name="conclusion"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-6-4-wheels-robot?tab-language=python#conclusion"><span class="anchor-link-image"></span></a>Conclusion</h4>
<p>You are now able to design simple robot models, to implement them and to create their controllers.</p>
<p>More specifically, you learnt all the different nodes involved in the design of a robot model, methods to translate and rotate a solid relative to another and the way that a rotational motor is actuated by the controller.</p>
<h3>Tutorial7</h3>
<h4 class="anchor-header" id="tutorial7yourfirstproto20minutes" name="tutorial-7-your-first-proto-20-minutes">Tutorial 7: Your First PROTO</h4>
<p>The aim of this tutorial is to create a PROTO file corresponding to the four wheels robot from the previous tutorial.</p>
<h4 class="anchor-header" id="copytherobotdefinition" name="copy-the-robot-definition">Copy the Robot Definition</h4>
<p>For now, the definition of the robot is completely contained in the world file. Moving this definition in a PROTO file will allow you to use this robot without the need to completely copy and paste its definition (either several times in the same world or in different worlds).</p>
<blockquote>
<p><strong>Hands-on #1</strong>: Open the world<span> </span><code>4_wheels_robot.wbt</code><span> </span>created in the previous tutorial in your favorite text editor. Create a new empty text file in the<span> </span><code>protos</code><span> </span>folder of your project called<span> </span><code>FourWheelsRobot.proto</code><span> </span>and open this file in the text editor too, this file will contain the definition of your robot.</p>
</blockquote>
<p>Any PROTO file should at least respect the following structure:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#VRML_SIM R2025a utf8
PROTO protoName [
  protoFields
]
{
  protoBody
}</pre>
<p>The<span> </span><code>protoName</code><span> </span>should be the name of the PROTO file (i.e.<span> </span><code>FourWheelsRobot</code><span> </span>in this case),<span> </span><code>protoFields</code><span> </span>defines the modifiable fields of the PROTO node (this part should be empty for now) and the<span> </span><code>protoBody</code><span> </span>is the definition of the root node (i.e. the<span> </span><a href="https://cyberbotics.com/doc/reference/robot?tab-language=python">Robot</a><span> </span>node in this case).</p>
<blockquote>
<p><strong>Hands-on #2</strong>: Write this default structure in your PROTO file with the correct<span> </span><code>protoName</code>. From the<span> </span><code>4_wheels_robot.wbt</code><span> </span>world file copy the robot node (starting with<span> </span><code>Robot {</code><span> </span>and ending with the final<span> </span><code>}</code>) and paste it in your PROTO file instead of the<span> </span><code>protoBody</code>. Finally, save the PROTO file.</p>
</blockquote>
<p><strong>Solution</strong>: You should have something like this:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#VRML_SIM R2025a utf8
  PROTO FourWheelsRobot [

  ]
  {
    Robot {
      # list of fields
    }
  }</pre>
<h4>Use the PROTO Node.</h4>
<p>This new PROTO node is now available for each world in your current project.</p>
<p><img alt="" height="157" src="/images/tutorial7_proto.thumbnail.jpg" width="300"/></p>
<blockquote>
<p><strong>Hands-on #3</strong>: Open the<span> </span><code>4_wheels_robot.wbt</code><span> </span>world in Webots and add the<span> </span><code>FourWheelsRobot</code><span> </span>node (that you just defined). The node is located in<span> </span><code>PROTO nodes (Current Project) / FourWheelsRobot (Robot)</code>.</p>
</blockquote>
<p>A second 4 wheels robot should have been added at the exact same location as the already existing one.</p>
<h4 class="anchor-header" id="addingfields" name="adding-fields"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-7-your-first-proto?tab-language=python#adding-fields"><span class="anchor-link-image"></span></a>Adding Fields</h4>
<p>As you probably noticed, this new PROTO node doesn't have any open field, it is therefore impossible to translate, rotate or change the controller for example. It is very easy to add new fields to a PROTO node and to link them with internal fields. This should be done in the PROTO interface part (part between the<span> </span><code>[</code><span> </span>and the<span> </span><code>]</code>).</p>
<blockquote>
<p><strong>Hands-on #4</strong>: Edit your PROTO file in your text editor and add the definition of the<span> </span><code>translation</code>,<span> </span><code>rotation</code><span> </span>and<span> </span><code>bodyMass</code><span> </span>field in the PROTO interface part:</p>
</blockquote>
<pre><code>  field SFVec3f    translation  0 0 0
  field SFRotation rotation     0 0 1 0
  field SFFloat    bodyMass     1
</code></pre>
<p>Your PROTO node has now two open fields but they are not linked to any internal field. To link the fields you should use the IS keyword, simply replace the<span> </span><code>translation x y z</code><span> </span>and<span> </span><code>rotation x y z angle</code><span> </span>fields of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot?tab-language=python">Robot</a><span> </span>node by:</p>
<pre><code>  translation IS translation
  rotation IS rotation
</code></pre>
<p>And the<span> </span><code>mass</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/physics?tab-language=python">Physics</a><span> </span>node of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot?tab-language=python">Robot</a><span> </span>node by:</p>
<pre><code>  mass IS bodyMass
</code></pre>
<p>Save your PROTO file, it should now look like this:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#VRML_SIM R2025a utf8
PROTO FourWheelsRobot [
  field SFVec3f    translation  0 0 0
  field SFRotation rotation     0 0 1 0
  field SFFloat    bodyMass     1
]
{
  Robot {
    translation IS translation
    rotation IS rotation
    children [
      # list of children nodes
    ]
    boundingObject USE BODY
    physics Physics {
      density -1
      mass IS bodyMass
    }
    controller "four_wheels_collision_avoidance"
  }
}</pre>
<p>You can now save your simulation in Webots and revert it. The<span> </span><code>translation</code>,<span> </span><code>rotation</code><span> </span>and<span> </span><code>bodyMass</code><span> </span>of the<span> </span><code>FourWheelsRobot</code><span> </span>node can now be changed (either in the<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-scene-tree?tab-language=python">scene tree</a><span> </span>or using the handles in the<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window?tab-language=python">3D view</a>).</p>
<p>The same mechanism could also be used to expose the<span> </span><code>controller</code><span> </span>field of the<span> </span><a href="https://cyberbotics.com/doc/reference/robot?tab-language=python">Robot</a><span> </span>node.</p>
<h4 class="anchor-header" id="solutionprotofile" name="solution-proto-file"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-7-your-first-proto?tab-language=python#solution-proto-file"><span class="anchor-link-image"></span></a>Solution: PROTO File</h4>
<p>To compare your PROTO file with<span> </span><a href="https://github.com/cyberbotics/webots/tree/released/projects/samples/tutorials/protos/FourWheelsRobot.proto" target="_blank">the solution</a>, go to your files and find the folder named "my_first_simulation" created in<span> </span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python">Tutorial 1</a>, then go to the "protos" folder and open with a text editor the right PROTO.</p>
<h4 class="anchor-header" id="conclusion" name="conclusion"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-7-your-first-proto?tab-language=python#conclusion"><span class="anchor-link-image"></span></a>Conclusion</h4>
<p>You are now able to create PROTO nodes from any nodes you created in Webots.</p>
<p>More specifically, you learnt how to copy the node definition in the PROTO file and how to open and link PROTO fields to internal node fields.</p>
<p>To go further, the<span> </span><a href="https://cyberbotics.com/doc/reference/proto?tab-language=python">PROTO chapter</a><span> </span>of the reference manual explains in detail all the possibilities of the PROTO mechanism.</p></details></details></p>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      <h3>Stream</h3>
<p><a href="https://cyberbotics.com/doc/guide/web-streaming">https://cyberbotics.com/doc/guide/web-streaming</a> </p>
<h3>Webots Server</h3>
<p>Webots Server:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/webots-server">https://github.com/mdecycu/webots-server</a></p>
<p>Webots Cloud:</p>
<p style="padding-left: 30px;"><a href="https://github.com/cyberbotics/webots-cloud">https://github.com/cyberbotics/webots-cloud</a> </p>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/web-server">https://cyberbotics.com/doc/guide/web-server</a> </p><h2>Solvespace</h2>
<p>Web-based Solvespace: <a href="https://cad.apps.dgramop.xyz/">https://cad.apps.dgramop.xyz/</a> (<a href="https://solvespace.com/forum.pl?action=viewthread&amp;parent=2369&amp;tt=1718121481">source</a> and <a href="https://github.com/solvespace/solvespace/pull/1275">PR</a>)</p>
<p><a href="https://github.com/solvespace/solvespace/pull/493">Python related PR</a></p>
<p>在 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a><span> 加入以下說明的 msys2 與 cmake 後, 可用來編譯 Solvespace v3.1 版原始碼的可攜套件 <a href="http://229.cycu.org/python_2025_lite_w_msys_cmake_solvespace.7z">python_2025_lite_w_msys_cmake_solvespace.7z</a> (Download 1.96GB, After extracted 3.7GB)</span></p>
<hr/>
<p>Solvespace 採 C++ 編寫, 原始碼位於 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a>, 以下將採用可攜程式系統 python_2025 中的 msys2 (<a href="http://229.cycu.org/python_2025/data/msys64_20240507.7z">msys64_20240507.7z</a>) 以及 cmake 3.20.1 進行編譯 (若採用目前最新版的 cmake 3.30.2, 必須對 Solvespace v3.1 中的 CMakeLists.txt 進行修改).</p>
<p>舊版的 cmake 3.21.0 可以利用下列連結取得:</p>
<p><a href="https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-windows-x86_64.zip">https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-windows-x86_64.zip</a> </p>
<p><a href="http://229.cycu.org/python_2025/data/msys64_20240507.7z">msys64_20240507.7z</a> (下載到 data 目錄下後, 目錄名稱必須改為 msys64) 則必須安裝 mingw32-make:</p>
<p>(安裝以下 make 套件前, 必須先執行 msys64 中的 mingw64.exe)</p>
<p>pacman -S mingw-w64-ucrt-x86_64-make</p>
<p>最新版的 python_2025 可攜程式環境架構位於: <a href="https://github.com/mdecycu/pyhton_2025">https://github.com/mdecycu/pyhton_2025</a>, 各目錄套件可自行根據 <a href="https://mde.tw/cad2024/content/Python.html">https://mde.tw/cad2024/content/Python.html</a> 中的說明下載, 或者自行配置.</p>
<p>機械設計工程師採用可攜程式套件的原因, 是希望能彈性配置 Python 版本, 因為大多數主流 CAD/E/M 套件都非開源軟體, 各版本的 API 相關的動態連結程式庫, 都採用特定的 Python 版本程式碼編譯而成. 例如: Siemens NX12 採用 Python 3.6.5, NX1872 採用 Python 3.7.1, NX1980 採用 Python 3.8.8, NX2312 使用 Python 3.10.12. 假如採用可攜程式套件, 除了可以如虛擬 Python 環境一樣, 將能配合 NXOpen 程式開發, 將所需的 Python 版本與相關模組放在同一目錄, 且能夠在不同的 64 位元 Windows 操作系統中執行.</p>
<p>接著取得 Solvespace v3.1 的原始碼, 可以直接從 <a href="https://github.com/solvespace/solvespace/releases">https://github.com/solvespace/solvespace/releases</a> 取得, 或以 以 git clone --recurse-submodules <a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> 之後,</p>
<p>cd solvespace</p>
<p>git checkout v3.1</p>
<p>接下來則必須修改 solvespace\extlib\angle\src\libANGLE\HandleAllocator.cpp 加入標頭檔案:</p>
<p>#include &lt;limits&gt;</p>
<p>接著就可以進行程式碼的編譯與連結:</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p>完成編譯後, solvespace.exe 即位於 build\bin 目錄中, 執行時則需要 libwinpthread-1.dll 動態連結程式庫.</p>
<p>進行上述流程編譯的原始碼 <a href="http://229.cycu.org/solvespace_v3.1_src.7z">solvespace_v3.1_src.7z</a>, 以及編譯完成的 <a href="http://229.cycu.org/solvespace_v3.1_msys2.7z">solvespace_v3.1_msys2.7z</a>.</p><h3>Learn_Solvs</h3>
<p><a href="https://youtu.be/IlY1YFid8HA?si=bbryzq7P-Z_vR9Rc">https://youtu.be/IlY1YFid8HA?si=bbryzq7P-Z_vR9Rc</a></p>
<p><a href="https://chromamine.com/2024/07/3d-cad-with-solvespace/">https://chromamine.com/2024/07/3d-cad-with-solvespace/</a></p>
<p><a href="https://www.youtube.com/watch?v=xAqSddiK5MQ&amp;list=PLWNz5TggYhO1mMihPAIPvozJkNN828FaI">https://thenybble.de/posts/solvespace-mini-tutorial/ </a></p>
<p><a href="https://www.youtube.com/watch?v=xAqSddiK5MQ&amp;list=PLWNz5TggYhO1mMihPAIPvozJkNN828FaI">Solvespace Tutorial</a></p>
<p><a href="https://www.youtube.com/watch?v=ckkGfngoSaE&amp;list=PLGAjLwYQPgaBafzQTLA84IkTOptOdIsUX">Solvespace Challenge</a> (<a href="https://www.youtube.com/watch?v=PwBSwkW3oPo&amp;list=PLluslK6uBf4sUY_SgOZhBTb_5Vs-XMHZ6">2</a>)</p>
<h2>Pyslvs-UI</h2>
<p><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p>
<p><a href="https://github.com/KmolYuan/pyslvs">https://github.com/KmolYuan/pyslvs</a> (A no-GUI module of mechanism synthesis system and a 2D geometric constraint solver)</p>
<p>開發 Pyslvs-UI: <a href="https://github.com/mdecycu/Pyslvs-UI">https://github.com/mdecycu/Pyslvs-UI</a></p>
<p>使用 Leo Editor:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''Recursively import all python files in a directory and clean the result.'''
# ctrl + b to execute
 
c.recursiveImport(
    dir_ = r'./',
    kind = '@clean', # The new best practice.
    safe_at_file = False,
    theTypes = ['.py']
)</pre>
<p>相關 AI 套件: <a href="https://github.com/mdecycu/LInK">https://github.com/mdecycu/LInK</a></p>
<p style="padding-left: 30px;"><a href="https://arxiv.org/pdf/2405.20592">https://arxiv.org/pdf/2405.20592</a> (LInK: Learning Joint Representations of Design and Performance Spaces through Contrastive Learning for Mechanism Synthesis)</p>
<p style="padding-left: 30px;"><a href="/downloads/pytorch_ex1.py">pytorch_ex1.py</a></p>
<h2>PICSimLab</h2>
<p><a href="https://github.com/lcgamboa/picsimlab">https://github.com/lcgamboa/picsimlab</a></p>
<h2>Fossil SCM</h2>
<p><a href="https://fossil-scm.org">https://fossil-scm.org</a></p>
<p><object data="/images/fossil.svg" height="593" type="image/svg+xml" width="1285"></object></p>
<p><a href="https://mdecycu.github.io/mind-map/#/?fileURL=https://mde.tw/cd2025/downloads/fossil.smm">Edit fossil.smm</a></p>
<h2>Leo Editor</h2>
<p><a href="https://leo-editor.github.io">https://leo-editor.github.io</a></p>
<p>Leo Editor 是一個大綱編輯器, 單一節點資料可以透過 clone 放入多個其他節點資料中.</p>
<p>可以利用 <a href="https://leo-editor.github.io/leo-editor/directives.html#clean-path">@clean</a> 節點指令可結合 <a href="https://leo-editor.github.io/leo-editor/directives.html#part-2-all-and-others">@others</a> 與指定的檔案內容同步.</p>
<p>利用 <a href="https://leo-editor.github.io/leo-editor/directives.html#path-path">@path</a> 指定目錄.</p>
<p>ctrl + i : insert</p>
<p>ctrl + r : move right</p>
<p>ctrl + l : move left</p>
<p>ctrl + u : move up</p>
<p>ctrl + d : move down</p>
<p>The execute-script command pre-defines three names: c, g, and p. c is the commander of the outline in which the script executes. g is the leo.core.leoGlobals module, containing dozens of useful functions and classes. p is the position of the presently selected node.</p>
<p>g.es() 透過 leo.core.leoGlobals g 中的 echo string 方法列印資料.</p>
<p>遞迴導入程式碼:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">c.recursiveImport(
    dir_ = 'path to file or directory',
    kind = '@clean',        # or '@file' or '@auto'
    safe_at_file = False,   # True: generate @@clean nodes.
    theTypes = None,        # Same as ['.py']
)</pre>
<p></p>
<h2>uv</h2>
<p>uv 是一個由 <a href="https://astral.sh/">Astral</a> 團隊 (<a href="https://www.crmarsh.com/">Founder</a>) 開發的現代 Python 工具，旨在提供更快、更簡單的工作流程，取代傳統的 pip、virtualenv 和 poetry 等工具。以下將全面介紹其核心功能、高級用法及使用場景。</p>
<p>使用 uv python list 可以列出能夠下載使用的 Python 版本:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Y:\&gt;uv python list
cpython-3.14.0a5+freethreaded-windows-x86_64-none    &lt;download available&gt;
cpython-3.14.0a5-windows-x86_64-none                 &lt;download available&gt;
cpython-3.13.2+freethreaded-windows-x86_64-none      &lt;download available&gt;
cpython-3.13.2-windows-x86_64-none                   y:\Python313\python.exe
cpython-3.13.2-windows-x86_64-none                   &lt;download available&gt;
cpython-3.12.9-windows-x86_64-none                   &lt;download available&gt;
cpython-3.11.11-windows-x86_64-none                  &lt;download available&gt;
cpython-3.10.16-windows-x86_64-none                  &lt;download available&gt;
cpython-3.9.21-windows-x86_64-none                   &lt;download available&gt;
cpython-3.8.20-windows-x86_64-none                   &lt;download available&gt;
cpython-3.7.9-windows-x86_64-none                    &lt;download available&gt;
pypy-3.11.11-windows-x86_64-none                     &lt;download available&gt;
pypy-3.10.16-windows-x86_64-none                     &lt;download available&gt;
pypy-3.9.19-windows-x86_64-none                      &lt;download available&gt;
pypy-3.8.16-windows-x86_64-none                      &lt;download available&gt;
pypy-3.7.13-windows-x86_64-none                      &lt;download available&gt;</pre>
<p>確認可用的 Python 版本後, 可以透過 <a href="https://mde.tw/cd2025/content/Portable.html">Portable</a> 頁面中的流程自行建立可攜 Python 程式套件.</p>
<p>接下來應該要探討 uv 在可攜程式環境中的應用.</p>
<h2>Old</h2>
<p>以下連結僅能在系統主幹的網路 IPv6 協定下擷取:</p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2019/content/sitemap.html">cd2019</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/vrml97specification.pdf">vrml97specification.pdf</a> (1997)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/vrml_primer_tutorial.pdf">vrml_primer_tutorial.pdf</a> (1998)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2002_guide.pdf">WeBots_2002_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Aibo and Webots_Simulation, wireless remote control and controller transfer.pdf">Aibo and Webots_Simulation, wireless remote control and controller transfer.pdf</a> (2006)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Design and Assessment of a Robot Curriculum based on the E-puck Robot and Webots.pdf">Design and Assessment of a Robot Curriculum based on the E-puck Robot and Webots.pdf</a> (2009)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Cyberbotics Robot Curriculum.pdf">Cyberbotics Robot Curriculum.pdf</a> (2010)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/webots_2010_ex1.pdf">webots_2010_ex1.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2011_guide.pdf">Webots_2011_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2012_guide.pdf">Webots_2012_guide.pdf</a></p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Improving support for e-puck robot in Webots mobile robots simulation software.pdf">Improving support for e-puck robot in Webots mobile robots simulation software.pdf </a>(2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Development of Microphone and Speaker models in Webots using OpenAL.pdf">Development of Microphone and Speaker models in Webots using OpenAL.pdf</a> (2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Interfacing an Android-based phone-robot with Webots.pdf">Interfacing an Android-based phone-robot with Webots.pdf</a> (2012)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Mobile Robot modeling, Simulation and Programming.pdf">Mobile Robot modeling, Simulation and Programming.pdf</a> (2013)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/Mobile Robot modeling Simulating and Programming_New ASIMO.pdf">Mobile Robot modeling Simulating and Programming_New ASIMO.pdf</a> (2014)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/ROS interface and URDF parser for Webots.pdf">ROS interface and URDF parser for Webots.pdf</a> (2014)</p>
<p style="padding-left: 60px;"><a href="http://wcm.cycu.org:88/github/cd2019/downloads/WeBots_2014_guide.pdf">Webots_2014_guide.pdf</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2020/content/sitemap.html">cd2020</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2021/">cd2021</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2022_guide/content/sitemap.html">cd2022</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2023/content/sitemap.html">cd2023</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2024/content/sitemap.html">cd2024</a></p>
<p></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p></p>